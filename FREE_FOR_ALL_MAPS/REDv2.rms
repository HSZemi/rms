/* ************************************************************ */
/* ************************************************************ */
/*		    		RANDOM EVERYTHING DELUXE v2				    */
/* ************************************************************ */
/* ************************************************************ */
/* ********************* Map script By ************************ */
/* ************************************************************ */
/*                      HenkDeSuperNerd                         */
/* ************************************************************ */

/*

(scroll down for changelog REDv0, REDv1, REDv2)

This Brand New version of Random Everything (extreme) called
Random Everything Deluxe (R.E.D.) will have many new features.

The map script is designed to create very random map generations with crazy starting objects,
and featuring many randomly selected game modes!

The map can be played on all platforms and it will automatically check which features are available.

For the best experience play it with the expansions and userpatch 1.5, by playing it on WololoKingdoms (v5.7.2)
Userpatch (1.5) is sadly not available on steam (Age2HD) therefore,
all the fun custom game modes that come with the script will not be available on that platform.

Compared to the random_everything (extreme) version RED has many new features:


>> (NEW) GAME MODES <<
Game modes coming with the script (userpatch only!)

    - (land) NOMAD
    - DARKAGE DEATH MATCH (Spies disabled!)
    - SUDDENDEATH: protect your starting town centers, once you lose all you are defeated.
	  You won't be able to build new Town Centers! (4flags around your Town Center indicate this game mode)
    - MONUMENTAL MIDDLE: capture the monument in the middle to creating powerful units!
    - KINGGAME: protect your King(s), once you lose all you are defeated. (includes treason!)

Selecting other game modes will work fine, and will override or be additional to the game modes defined by the script
    - selecting KING OF THE HILL: 50% chance to train units in the monument, also other win-conditions can be present!
    - RELIC VICTORY / CAPTURE THE RELIC will spawn a relic in the middle and an indestructible
      monastery for each player (other win-conditions can be present!)
    - REGICIDE (KINGGAME will be active)
    - DEATHMATCH (will have correct resources, and spies disabled!)
	- any OTHER GAMEMODE (turbo random, wonder race etc.) will work as well with this script.

	
>> RESOURCES <<
Resources can be different every time:

    - DEATHMATCH resources! (select deathmatch in the lobby to force death-match resources)
    - MEDIUM amount of extra resources (select medium resources in the lobby to force medium resources)
    - HIGH amount of extra resources (select high resources in the lobby to force medium resources)
    - RANDOM amount of resources (ranging from -100, to +100 for each different resource)
	- DEBTS (start with a large deficit of gold, apart from that standard resources)
	- STANDARD resources, in the most frequent option. Selecting low resources in the lobby will force standard starting resources 

on top of that:
    - regicide start gives extra regicide-resources
    - nomad start gives extra resources to build TC (land-nomad is an exception)	

	
>> BALANCE (compared to random_everything)<<

    - The map is not supposed to be fully balanced, so you can still find yourself in a disadvantageous position.
      However, the chance for very unbalanced maps should be lower than the earlier version(s)
    - Reduced the chance of forest-nothing like maps
    - Removed the option that all players spawn in one corner (since this is almost always very unbalanced)
    - Distributed wood lines more evenly over the map

	
>> TERRAIN GENERATION<<

    - More terrains are introduced (including expansion terrains)
    - Terrain will often follow some style:
        o Barren
        o Arctic
        o Baltic
        o Temperate
        o Asian
        o Savannah
        o Oasis
        o (Sub)tropical
        o Rainforest/tropical
        o Mangrove
    - Water now will almost always spawn with shallow water at the shores.
    - The map is generated with some structure, leading to chances to look a bit like islands, rivers, continental, and more.
	- playing King of the Hill or Capture the Relic will influence the map layout.

	
>> GAIA, A COMMON ENEMY <<
    - A whole bunch of new predators from the expansions roam around the map.

	
>> GAIA, A COMMON FRIEND <<
    - Variety of convertible unit is significantly increased
    - Convertible buildings added
    - Convertible special units added
    - A wide variety of convertible water units

	
>> RANDOM SPAWNS <<
    - New starting units, including expansion units (heroes, military)
    - New starting structures, including expansion buildings
    - A wide variety of starting water units

>> TECHS <<
    - Treason will replace spies in KINGGAME (regicide)
    - spies is disabled for DEATHMATCH
    - Unable to create more Town Centers in SuddenDeath
    - Unable to create more Monasteries in Capture the Relic

	
>> CHANGELOG <<

    - Official release of test version "REDv0" - 22 April 2018
	
    - UPDATE: (tournament version) "REDv1" - 27 April 2018
        o   fixed a few typos, that might have limited several objects from spawning
        o   fixed the chance for convertible (was 100%, now ~50%)
        o   lowered the quantity of collectable Gaia military units
        o   lowered amount of gold/stone piles per starting town when starting with multiple towns, to avoid crazy amounts of resources on the map
        o   rearranged a few things
		o 	in the rare case of SuddenDeath + King of the Hill, you are more likely to start with multiple towns
		o 	lowering the maximum base size of player lands hopefully will prevent the map from crashing
		o 	fixed/redistributed the large-hunt(boar) and cattle(sheep) types
		o 	lowered the chance for spawns of mountains and other impassable terrain 
		o 	added birds
		o 	reintroduced deathmatch resources for Capture The Relic
		o 	Treason is available for King Game
	
	- UPDATE: "REDv2_5.7" - bugfixes. used for FFA event - 8 June 2018
		o 	fixed the out-of-sync issue
		o 	selecting regicide as a starting win condition will no longer result in double regicide resources
		o 	ponds should no longer spawn in the TC area, which was preventing starting objects and resources from spawning. This would result in more balanced maps.
		o 	monumental middle is reworked: more options and hopefully better balanced.
		o 	lower chance to spawn with walls
		o 	lowered amount of neutral boars
		o	Removed Gaia kings or hero kings that are not part of a win condition, Queens and hero units will never be part of a win condition
		o 	bugfix: siege tower could spawn
		o 	added more variety in (unique) units you can start with
		o 	lowered the amount of eye candy objects
		o 	water rework: more deep water and more consistent fish
		
	- UPDATE: "REDv2" - compatibility with WK 5.7.2 - 5 July 2018		
		o 	fixed game-breaking issue that was revealed after recent UserPatch update.
		o 	new terrains added: Mangrove shallows, Cracked Sand, Dragon Forest, Rain Forest.
		o 	Monumental Middle is now fully functional
		o 	small tweaks to forest and pond spawns to prevent empty maps
		o 	slight tweaks to random distributions to reduce extreme situations

		
>>MORE INFO<<
please visit https://www.aoezone.net/threads/random-everything-deluxe.138317/ for a complete list of features.		

	
>> DOWNLOADS <<
Download the previous versions (Random_everything) here: https://www.aoezone.net/threads/random-everything.135135/
For most actual download, and more updates on this map check: https://www.aoezone.net/threads/random-everything-deluxe.138317/
For Age2HD download the script in the steam workshop: https://steamcommunity.com/sharedfiles/filedetails/?id=1369710157

Do you want to play the map on the Voobly platform? download Voobly here: https://www.voobly.com
Do you own the expansions, but you want to play it on Voobly (to benefit from the UserPatch features) then download the WololoKingdoms mod here: https://github.com/AoE2CommunityGitHub/WololoKingdoms/releases

*/


/* ********************** GAME VERSION CHECKS ************************** */

if DLC_MANGROVEFOREST 	
	if UP_EXTENSION
		#define WK /* I haven't tested i f this works for WololoKingdoms FE, or WololoKingdomsAK versions aswell */
	else
		#define HD /* currently not possible to distinguish between expanions or basegame in HD. the script uses expansion units, causing the AOC version of HD to crash */
	endif
	
else					
	#define AOC /* allows to play on the basegame (AOK/AOC) without having the expansions. */
endif


if UP_EXTENSION
	#define UP /* tries to see i f a 1.5 is functioning */
endif

/* ************************ CTR ********************************* */

if CAPTURE_THE_RELIC
	#define CTR /* When playing CTR mode on HD, automatically creates a monastery and Relic */
elseif CAPTURE_RELICS
	#define CTRUP /* When playing Relic victory on UserPatch, needs atleast 1 relic on the map */
endif


/* ************************** KOTH ****************************** */

if UP 		/* first checks for userpatch, then i f it is King of the hill */
	if KING_OT_HILL
	#define KOTHUP 
	endif
else		/* when not userpatch (so on HD) it will now check i f the game mode is KotH */ 
	if KING_OF_THE_HILL  /* THERE IS AN ERROR WITH THIS: EVEN WHEN ITS NOT KOTH IT STILL THINKS IT IS! */
	#define KOTH 
	endif
endif



/* ******************DEFINING CONSTANT************************** */


/* *************************************************** 	*/
/* TERRAIN CONSTANTS  									*/
/* *************************************************** 	*/

/* STANDARD TERRAIN */

#const GRASS 0 /* Default terrain */
#const WATER 1 /*  */
#const BEACH 2 /* Automatically placed around coasts. Ships can sail on! No buildings except walls */
#const DIRT3 3 /*  */
#const SHALLOW 4 /* Grassy water; walkable and navigable */
#const LEAVES 5 /* Terrain left when temperate or tropical forest is chopped */
#const DIRT 6 /* Includes some cactus objects */
#const FARMS_PLANTED 7 /* Terrain only, no food! */
#const FARMS_EXPIRED 8 /* Terrain only, not replantable! */
#const GRASS3 9 /*  */
#const FOREST 10 /* 20 is same, but game thinks it's different (e.g. as base_terrain) */
#const DIRT2 11 /*  */
#const GRASS2 12 /*  */
#const PALM_DESERT 13 /* Leaves behind DESERT when chopped */
#const DESERT 14 /*  */
#const BEACHLESS_WATER 15 /* Like WATER, but has no beaches, not dockable */
#const CLIFF_GRASS 16 /* Like GRASS; automatically placed under all cliffs */
#const JUNGLE 17 /*  */
#const BAMBOO 18 /*  */
#const PINE_FOREST 19 /*  */
#const OAK_FOREST 20 /* looks exactly like 10, but is called "Oak forest" when you click on a tree */
#const SNOW_FOREST 21 /* Leaves behind GRASS_SNOW when chopped */
#const DEEP_WATER 22 /* Not dockable */
#const MED_WATER 23 /* Not dockable */
#const ROAD 24 /* You can't place gold, stone, berries on any type of road */
#const ROAD2 25 /*  */
#const ICE2 26 /* Ships can sail through this */
#const BEACHLESS_DIRT2 27 /* Like DIRT2, but has no beaches, still dockable */
#const WALKABLE_WATER 28 /* Like WATER, no beaches, walkable, no ships */
#const FARMS_PLOUGHED 29 /* Terrain only, not cultivable! */
#const FARMS_GROWING 30 /* Terrain only, not cultivable! */
#const FARMS_GROWING_MORE 31 /* Terrain only, not cultivable! */
#const SNOW 32 /*  */
#const DIRT_SNOW 33 /* Has icy beaches */
#const GRASS_SNOW 34 /* Terrain left when snowy forest is chopped */
#const ICE 35 /* Ships cannot sail through this */
#const BEACHLESS_DIRT_SNOW 36 /* Like DIRT_SNOW, but has no beaches, still dockable */
#const ICY_BEACH 37 /* Automatically placed around snowy coasts, acts like BEACH */
#const ROAD_SNOW 38 /*  */
#const ROAD_GRASS 39 /*  */
#const ROAD_UNBUILDABLE 40 /* No buildings, used in King of the Hill. */
#const BLACK_GRASS 41 /* Like GRASS, but black on the minimap.  DO NOT USE i f unit pathing is broken on this terrain */


if HD

/*  TERRAIN FROM DLC (HD) */

#const DLC_ROCK 40 /* Grey rock (king of the hill; also in the base-game but looks like ROAD) */
#const DLC_SAVANNAH 41 /* Savannah */
#const DLC_DIRT4 42 /* A blend between DIRT and grass */
#const DLC_DRYROAD 43 /* Road, Desert */
#const DLC_MOORLAND 44 /* Muddy grass */
#const DLC_CRACKED 45 /* Cracked desert (causes buildings on it to take 25% more damage) */
#const DLC_QUICKSAND 46 /* Quicksand (has the same building restrictions as ICE) */
#const DLC_BLACK 47 /* Pure black (no buildings) */
#const DLC_DRAGONFOREST 48 /* Dragon Tree Forest (dense forest; placed on DIRT) */
#const DLC_BAOBABFOREST 49 /* Baobab Forest (200 wood per tree; sparse forest; placed on savannah) */
#const DLC_ACACIAFOREST 50 /* Acacia Forest (sparse forest; placed on dirt 4) */

#const DLC_BEACH2 51 /*  BEACH */
#const DLC_BEACH3 52
#const DLC_BEACH4 53
#const DLC_MANGROVESHALLOW 54 
#const DLC_MANGROVEFOREST 55
#const DLC_RAINFOREST 56
#const DLC_WATER4 57
#const DLC_WATER5 58
#const DLC_NEWSHALLOW 59 
#const DLC_JUNGLEGRASS 60
#const DLC_JUNGLEROAD 61
#const DLC_JUNGLELEAVES 62 
#const DLC_RICEFARM1 63
#const DLC_RICEFARM2 64

endif

if WK

#const GRASS 0 /* Default terrain */
#const WATER 1 /*  */
#const BEACH 2 /* Automatically placed around coasts. Ships can sail on! No buildings except walls */
#const DIRT3 3 /*  */
#const SHALLOW 4 /* Grassy water; walkable and navigable */
#const LEAVES 5 /* Terrain left when temperate or tropical forest is chopped */
#const DIRT 6 /* Includes some cactus objects */
#const FARMS_PLANTED 7 /* Terrain only, no food! */
#const FARMS_EXPIRED 8 /* Terrain only, not replantable! */
#const GRASS3 9 /*  */
#const FOREST 10 /* 20 is same, but game thinks it's different (e.g. as base_terrain) */
#const MANGROVE_SHALLOW 11 /* UPDATE buildable shallow */
#const GRASS2 12 /*  */
#const PALM_DESERT 13 /* Leaves behind DESERT when chopped */
#const DESERT 14 /*  */
#const BEACHLESS_WATER 15 /* Like WATER, but has no beaches, not dockable */
#const BAOBAB_FOREST 16 /* UPDATE baobab forest */
#const JUNGLE 17 /*  */
#const BAMBOO 18 /*  */
#const PINE_FOREST 19 /*  */
#const MANGROVE_FOREST 20 /* UPDATE Mangrove Forest */
#const SNOW_FOREST 21 /* Leaves behind GRASS_SNOW when chopped */
#const DEEP_WATER 22 /* Not dockable */
#const MED_WATER 23 /* Not dockable */
#const ROAD 24 /* You can't place gold, stone, berries on any type of road */
#const ROAD2 25 /*  */
#const ICE2 26 /* Ships can sail through this */
#const DIRT2 27 /* UPDATE */
#const WALKABLE_WATER 28 /* Like WATER, no beaches, walkable, no ships */
#const FARMS_PLOUGHED 29 /* Terrain only, not cultivable! */
#const FARMS_GROWING 30 /* Terrain only, not cultivable! */
#const FARMS_GROWING_MORE 31 /* Terrain only, not cultivable! */
#const SNOW 32 /*  */
#const ROAD_SNOW 33 /* UPDATE */
#const GRASS_SNOW 34 /* Terrain left when snowy forest is chopped */
#const ICE 35 /* Ships cannot sail through this */
#const DIRT_SNOW 36 /* UPDATE */
#const ICY_BEACH 37 /* Automatically placed around snowy coasts, acts like BEACH */
#const CRACKED_EARTH 38 /* UPDATE has a damage modifier of 1.2 */
#const ROAD_GRASS 39 /*  */
#const ROCKS 40 /* UPDATE black rocky terrain, used for KOTH */
#const ACACIA_FOREST 41 /* UPDATE acacia forest */
endif

/*  *************************************************** 	*/
/*  UNIT CONSTANT  										*/
/*  *************************************************** 	*/


/*  ANIMALS FROM AOC */

#const BOAR 48 /*  */
#const FISH 53 /* Called Perch, 200 food like shore fish (normal fish have more) */
#const DEER 65 /*  */
#const SHORE_FISH 69 /*  */
#const DIRE_WOLF 89 /* A wolf with 100 HP, but low attack. Not so dire... AIs have trouble with these wolves */
#const HAWK 96 /*  */
#const WOLF 126 /*  */
#const RABID_WOLF 202 /* Slightly stronger. Sees and pursues villagers from far away. Villagers cannot fight back! */
#const FAKE_DEER 333
#const GREAT_FISH_MARLIN 450 /*  */
#const GREAT_FISH_MARLIN2 451 /*  */
#const FISH_DORADO 455 /*  */
#const FISH_SALMON 456 /*  */
#const FISH_TUNA 457 /*  */
#const FISH_SNAPPER 458 /*  */
#const SHEEP 594 /* Can also be placed as a player object */
#const IRON_BOAR 810 /* Very strong, attacks villagers at sight, can't be hunted.  Will cause AIs trouble */
#const JAGUAR 812 /*  */
#const MACAW  816 /* Tropical bird, wandering like a hawk */
#const JAVELINA 822 /* Just a boar with different name, isn't it? :) */
#const TURKEY 833 /* Can also be placed as a player object */
#const WILD_HORSE 835 /* Wanders like a deer. Use HORSE for a player-controlled horse */



if AOC

else
/*  ANIMALS FROM EXPANSIONS */

#const DOLPHIN 61 /* AoF; behaves like great fish */
#const DLC_LLAMA 305 /* AoF; behaves like sheep */
#const DLC_BEAR 486 /* AoF; behaves like wolf */
#const DLC_COW 705 /* AoF; behaves like sheep, but 150 food and 14 hp */
#const DLC_VULTURE 917 /* AoF; behaves like hawk, but larger and white */
#const DLC_ELEPHANT 412 /* AoF; behaves like boar, but 400 food */
#const DLC_ZEBRA 1019 /* AK; behaves like deer */
#const DLC_OSTRICH 1026 /* AK; behaves like deer */
#const DLC_STORK 1028 /* AK; behaves like hawk */
#const DLC_LION 1029 /* AK; behaves like wolf */
#const DLC_CROCODILE 1031 /* AK; behaves like wolf */
#const FALCON 1056 /* AK; behaves like hawk */
#const DLC_GOAT 1060 /* AK; behaves like sheep */

/*  ANIMALS FROM ROR */
#const KOMODO_DRAGON 1135
#const TIGER 1137
#const RHINOCEROS 1139
#const BOX_TURTLES 1141
#const WATER_BUFFALO 1142

endif

/*  *********************************************** */

/* UNITS FROM AOC */
#const ARCHER 4
#const HAND_CANNONEER 5
#const ELITE_SKIRMISHER 6
#const SKIRMISHER 7
#const LONGBOWMAN 8
#const MANGUDAI 11
#const FISHING_SHIP 13
#const TRADE_COG 17
#const WAR_GALLEY 21
#const CROSSBOWMAN 24
#const TEUTONIC_KNIGHT 25
#const BATTERING_RAM 35
#const BOMBARD_CANNON 36
#const KNIGHT 38
#const CAVALRY_ARCHER 39
#const CATAPHRACT 40
#const HUSKARL 41
#const TREBUCHET 42 /* Unpacked */
#const JANISSARY 46
#const CHU_KO_NU 73
#const MILITIA 74
#const MAN_AT_ARMS 75
#const LONG_SWORDSMAN 77
#const SPEARMAN 93
#const WOAD_RAIDER 232
#const WAR_ELEPHANT 239
#const LONGBOAT 250
#const SCORPION 279
#const MANGONEL 280
#const THROWING_AXEMAN 281
#const MAMELUKE 282
#const CAVALIER 283
#const SAMURAI 291
#const CAMEL 329
#const HEAVY_CAMEL 330
#const TREBUCHET_PACKED 331
#const PIKEMAN 358
#const HALBERDIER 359
#const CANNON_GALLEON 420
#const CAPPED_RAM 422
#const HUSSAR 441
#const GALLEON 442
#const SCOUT_CAVALRY 448 /* Automatically places Eagle Warriors for Aztecs and Mayas. */
#const TWO_HANDED_SWORDSMAN 473
#const HEAVY_CAVALRY_ARCHER 474
#const ARBALEST 492
#const DEMOLITION_SHIP 527
#const HEAVY_DEMOLITION_SHIP 528
#const FIRE_SHIP 529
#const ELITE_LONGBOWMAN 530
#const ELITE_THROWING_AXEMAN 531
#const FAST_FIRE_SHIP 532
#const ELITE_LONGBOAT 533
#const ELITE_WOAD_RAIDER 534
#const GALLEY 539
#const HEAVY_SCORPION 542
#const TRANSPORT_SHIP 545
#const LIGHT_CAVALRY 546
#const SIEGE_RAM 548
#const ONAGER 550
#const ELITE_CATAPHRACT 553
#const ELITE_TEUTONIC_KNIGHT 554
#const ELITE_HUSKARL 555
#const ELITE_MAMELUKE 556
#const ELITE_JANISSARY 557
#const ELITE_WAR_ELEPHANT 558
#const ELITE_CHU_KO_NU 559
#const ELITE_SAMURAI 560
#const ELITE_MANGUDAI 561
#const CHAMPION 567
#const PALADIN 569
#const SIEGE_ONAGER 588
#const ELITE_CANNON_GALLEON 691
#const BERSERK 692
#const ELITE_BERSERK 694
#const JAGUAR_WARRIOR 725
#const ELITE_JAGUAR_WARRIOR 726
#const EAGLE_WARRIOR 751
#const ELITE_EAGLE_WARRIOR 752
#const TARKAN 755
#const ELITE_TARKAN 757
#const PLUMED_ARCHER 763
#const ELITE_PLUMED_ARCHER 765
#const CONQUISTADOR 771
#const ELITE_CONQUISTADOR 773
#const MISSIONARY 775
#const WAR_WAGON 827
#const ELITE_WAR_WAGON 829
#const TURTLE_SHIP 831
#const ELITE_TURTLE_SHIP 832




/* OTHER UNITS FROM AOC */

#const MONK 125
#const TRADE_CART 128
#const TRADE_CART_PACKED 204
#const KING 434
#const PETARD 440
#const SHEEP 594
#const TURKEY 833

#const VILLAGER_FISHER_M 56
#const VILLAGER_FISHER_F 57
#const VILLAGER_BASE_M 83
#const VILLAGER_BUILDER_M 118
#const VILLAGER_FORAGER_M 120
#const VILLAGER_HUNTER_M 122
#const VILLAGER_WOOD_M 123
#const VILLAGER_STONE_M 124
#const VILLAGER_REPAIRER_M 156
#const VILLAGER_BUILDER_F 212
#const VILLAGER_FARMER_F 214
#const VILLAGER_HUNTER_F 216
#const VILLAGER_WOOD_F 218
#const VILLAGER_STONE_F 220
#const VILLAGER_REPAIRER_F 222
#const VILLAGER_FARMER_M 259
#const VILLAGER_BASE_F 293
#const VILLAGER_FORAGER_F 354
#const VILLAGER_GOLD_M 579
#const VILLAGER_GOLD_F 581
#const VILLAGER_SHEPHERD_F 590
#const VILLAGER_SHEPHERD_M 592


/* SPECIAL UNITS FROM AOC */

#const JUNK 15 							/* New ship, with unique graphics! Can explore. Turns invisible when it attacks; auto responds i f attacked. */
#const ALTERNATIVE_BERSERK  94 			/* New melee unit, with unique graphics! */
#const INFILTRATOR 299 					/* Looks exactly as a Militia, but he's stronger */
#const FLYING_DUTCHMAN 436 				/* shipwreck, Can't move unless in group. A nice eye-candy, but counts as 4 population! */
#const ADVANCED_HEAVY_CROSSBOWMAN 493 	/* New ranged unit, with unique graphics! */
#const TORCH 499 						/* Can be placed even on water and forests. Not rescuable i f gaia */
#const CONVERTER_GALLEY 536 			/* A galley that converts enemies like a monk! */
#const SUPER_ARMORED_ARCHER 571 		/* Armor 1000, but attack only 1 */
#const SUPER_ARMORED_MILITIA 573 		/* Armor 1000, but attack only 1 */
#const SUPER_ARMORED_LIGHT_CAVALRY 575 	/* Armor 1000, but attack only 1 */
#const SUPER_ARMORED_CAVALRY_ARCHER 577 /* Armor 1000, but attack only 1 */
#const FLAG_A 600 						/* Tall flag */
#const FLAG_B 601 						/* Bifurcate flag */
#const FLAG_C 602 						/* Spotted flag */
#const FLAG_D 603 						/* Crossed flag */
#const FLAG_E 604 						/* Binged flag */
#const SABOTEUR 706 					/* The one of the cheat. Stronger than Petard */
#const COBRA_CAR 748 					/* The one of the cheat */
#const HORSE 814 						/* Can explore, but short sight */
#const MAP_REVEALER 837 				/* Invisible ad immobile; gives sight of 4 tiles radius area */
#const ES_FLAG 851 						/* Ensemble Studios flag */
#const TORCH_CONVERTING 854 			/* As TORCH, but joins human players that come by (like sheep) */
#const FURIOUS_THE_MONKEY_BOY 860 		/* The one of the cheat. VERY powerful! If gaia, attacks as a wolf */




/* SPECIAL UNITS FROM AK */
if AOC

else
#const DLC_ORGANGUN 1001
#const DLC_ELITEORGANGUN 1003
#const DLC_CARAVEL 1004
#const DLC_ELITECARAVEL 1006
#const DLC_CAMELARCHER 1007
#const DLC_ELITECAMELARCHER 1009
#const DLC_GENITOUR 1010
#const DLC_ELITEGENITOUR 1012
#const DLC_GBETO 1013
#const DLC_ELITEGBETO 1015
#const DLC_SHOTELWARRIOR 1016
#const DLC_ELITESHOTELWARRIOR 1018
#const MONKBOAT 1022
#const DLC_AOE1PRIEST 1023
#const GENITOURPLACEHOLDER 1079
#const PRIEST_WITH_RELIC 1025
#const DLC_FIREGALLEY 1103
#const DLC_DEMOLITIONRAFT 1104
#const DLC_SIEGETOWER 1105


/* SPECIAL UNITS FROM FE */

#const LEGIONARY 1 /* */
#const ROYAL_JANISSARY 52 /* */
#const SPY 138 /* high attack, looks like man-at-arms */
#const CONDOTTIERO 184 /* */
#const SLINGER 185 /* */
#const FLAMETHROWER 188 /* dragon in AoFE */
#const IMPERIAL_CAMEL 207 /* */
#const CARAVAN 275 /* centurion; NOT a caravan */
#const NORDIC_SWORDSMAN 361 /* */
#const PENGUIN 639 /* cheat unit; not so strong */
#const HEAVY_EAGLE_WARRIOR 753 /* */
#const CANOE 778 /* */
#const AMAZON_WARRIOR 825 /* */
#const DONKEY 846 /* no food */
#const AMAZON_ARCHER 850 /* */
#const GENOESE_CROSSBOWMAN 866 /* */
#const ELITE_GENOESE_CROSSBOWMAN 868 /* */
#const MAGYAR_HUSZAR 869 /* */
#const ELITE_MAGYAR_HUSZAR 871 /* */
#const ELEPHANT_ARCHER 873 /* */
#const ELITE_ELEPHANT_ARCHER 875 /* */
#const BOYAR 876 /* */
#const ELITE_BOYAR 878 /* */
#const KAMAYUK 879 /* */
#const ELITE_KAMAYUK 881 /* */
#const CONDOTTIERO 882 /* */
#const SIEGE_TOWER 885 /* */
#const TARKAN2 886 /* */
#const ELITE_TARKAN2 887 /* */
#const INCAN_START 888 /* invisible in scenario editor */
#const INCAN_EAGLE_SCOUT 889 /* invisible in scenario editor */
#const INCAN_LLAMA 890 /* invisible in scenario editor */
#const HEAVY_PIKEMAN 892 /* */
#const EASTERN_SWORDSMAN 894 /* */
#const CAMEL_GAIA 897 /* converting; behaves like horse */
#const MONK_WITH_RELIC 922 /* */
#const QUEEN 923 /* no attack; behaves like king */
#const ALFRED_THE_ALPACA 934 /* cheat unit; 120 attack */
#const DRAGON_SHIP 938 /* */
#const RELIC_CART 944 /* */

/* UNITS FROM ROR */
#const BALLISTA_ELEPHANT 1120
#const ELITE_BALLISTA_ELEPHANT 1122
#const KARAMBIT_WARRIOR 1123
#const ELITE_KARAMBIT_WARRIOR 1125
#const ARAMBAI 1126
#const ELITE_ARAMBAI 1128
#const RATTAN_ARCHER 1129
#const ELITE_RATTAN_ARCHER 1131
#const BATTLE_ELEPHANT 1132
#const ELITE_BATTLE_ELEPHANT 1134
#const IMPERIAL_SKIRMISHER 1155

endif

/* *********************************************** */

/* HEROES FROM AOC */

#const RICHARD_THE_LIONHARTED 160 	/* Paladin */
#const THE_BLACK_PRINCE 161 		/* Cavalier */
#const FRIAR_TUCK 163 				/* Monk. Turns to a normal monk when picks up a relic */
#const SHERIFF_OF_NOTTINGHAM 164 	/* Man at arms, not so tough */
#const CHARLEMAGNE 165 				/* Throwing axeman */
#const ROLAND 166 					/* Knight */
#const BELISARIUS 167 				/* Cataphract */
#const THEODORIC_THE_GOTH 168 		/* Huskarl */
#const AETHELFIRTH 169 				/* Woad raider */
#const SIEGFRIED 170 				/* Champion */
#const ERIK_THE_RED 171 			/* Berserk */
#const TAMERLANE 172 				/* Mangudai */
#const KING_ARTHUR 173 				/* King. Hero kings don't work for regicide! */
#const LANCELOT 174 				/* Paladin */
#const GAWAIN 175 					/* Cavalier */
#const MORDRED 176 					/* Paladin */
#const ARCHBISHOP 177 				/* Monk. Turns to a normal monk when picks up a relic */
#const KITABATAKE 195 				/* Samurai */
#const MINAMOTO 196 				/* Samurai */
#const ALEXANDER_NEVSKI 197 		/* Cavalier. Predefined name is WILLIAM_THE_CONQUEROR2 */
#const EL_CID 198 					/* Champion */
#const ROBIN_HOOD 200 				/* Longbowman */
#const CHARLES_MARTEL 424 			/* Throwing axeman */
#const HROLF_THE_GANGER 428 		/* Berserk */
#const JOAN_THE_MAID 430 			/* Poor woman, not so tough */
#const WILLIAM_WALLACE 432 			/* Champion */
#const JOAN_OF_ARC 629 				/* Knight, woman (different graphics!) */
#const FRANKISH_PALADIN 632 		/* Knight with lance */
#const SIEUR_DE_METZ 634 			/* Knight */
#const SIEUR_BERTRAND 636 			/* Knight */
#const DUKE_D_ALENCON 638 			/* Knight with lance */
#const LA_HIRE 640 					/* Champion */
#const LORD_DE_GRAVILLE 642 		/* Arbalest, not so tough */
#const JEAN_DE_LORRAIN 644 			/* Bombard cannon */
#const CONSTABLE_RICHEMONT 646 		/* Knight with lance */
#const GUY_JOSSELYNE 648 			/* Paladin */
#const JEAN_BUREAU 650 				/* Bombard cannon, not so tough */
#const SIR_JOHN_FASTOLF 652 		/* Knight with lance */
#const REYNALD_DE_CHATILLON 678 	/* Knight with lance */
#const MASTER_OF_THE_TEMPLAR 680 	/* Knight with lance */
#const BAD_NEIGHBOR 682 			/* Trebuchet, unpacked */
#const GODS_OWN_SLING 683 			/* Trebuchet, unpacked */
#const ARCHERS_OF_THE_EYES 686 		/* Arbalest, not so tough */
#const SUBOTAI 698 					/* Heavy cavalry archer */
#const HUNTING_WOLF 700 			/* Wolf. Only hero wolves can be controlled by players */
#const KUSHLUK 702 					/* Cavalier */
#const SHAH 704 					/* King. Hero kings don't work for regicide! */
#const ORNLU_THE_WOLF 707 			/* Wolf, very tough, towers can't target him */
#const GODS_OWN_SLING_PACKED 729 	/* Trebuchet, packed */
#const BAD_NEIGHBOR_PACKED 730 		/* Trebuchet, packed */
#const GENGHIS_KHAN 731 			/* Mangudai, very tough */
#const EMPEROR_IN_A_BARREL 733 		/* Trade cart. Appears as packed, but it's not carrying gold */
#const ATTILA_THE_HUN 777 			/* Cataphract */
#const POPE_LEO_I 781 				/* Monk. Turns to a normal monk when picks up a relic */
#const SCYTHIAN_WILD_WOMAN 783 		/* Poor woman (same as Joan the Maid), not so tough */
#const EL_CID_CAMPEADOR 824 		/* Knight with lance */
#const KING_SANCHO 838 				/* King. Hero kings don't work for regicide! */
#const KING_ALFONSO 840 			/* King. Hero kings don't work for regicide! */
#const IMAM 842 					/* Monk. Turns to a normal monk when picks up a relic */
#const ADMIRAL_YI_SUN_SHIN 844 		/* Turtle ship */
#const NOBUNAGA 845 				/* Samurai */
#const HENRY_V 847 					/* Paladin */
#const WILLIAM_THE_CONQUEROR 849 	/* Knight with lance */
#const SCYTHIAN_SCOUT 852 			/* Light cavalry, not so tough */

/* HEROES FROM AK */
if AOC

else
#const DLC_MUSA 1034 			/* camel archer */
#const DLC_SUNDJATA 1035 		/* light cavalry */
#const DLC_TARIQ 1036 			/* genitour */
#const DLC_RICHARDDECLARE 1037 	/* light cavalry */
#const DLC_TRISTAN 1038 		/* magyar huszar */
#const DLC_YODIT 1039 			/* queen; no attack */
#const DLC_HENRY2 1040 			/* two-handed swordsman */
#const DLC_YEKUNOAMLAK 1064 	/* shotel warrior */
#const DLC_WARRIORYODIT 1066 	/* gbeto */
#const DLC_ITZCOATL 1067 		/* jaguar warrior */
#const DLC_MUSTAFA 1068 		/* janissary */
#const DLC_PACAL2 1069 			/* plumed archer */
#const DLC_BABUR 1070 			/* imperial camel */
#const DLC_ABRAHAELEPHANT 1071 	/* war elephant */
#const DLC_GUGLIELMO 1072 		/* genoese crossbowman */
#const DLC_SU_DINGFANG 1073 	/* chu-ko-nu */
#const DLC_PACHACUTI 1074 		/* kamayuk */
#const DLC_HUAYNA_CAPAC 1075 	/* slinger */
#const DLC_MIKLOSTOLDI 1076 	/* magyar huszar */
#const DLC_LITTLEJOHN 1077 		/* spearman */
#const DLC_ZAWISZATHEBLACK 1078 /* hussar */
#const DLC_SUMANGURU 1080 		/* cataphract */
#const DLC_DAGNAJAN 1106 		/* elephant archer */
#const GIDAJAN 1109 			/* carries sword and shield */

/* HEROES FROM FE */

#const VLAD_DRACULA 193 			/* Boyar */
#const QUAUHTEMOC 307 				/* Elite Eagle Warrior */
#const FRANCISCO_DE_ORELLANA 425 	/* Elite Conquistador */
#const GONZALO_PIZARRO 427 			/* Elite Conquistador */
#const FREDERICK_BARBAROSSA 429 	/* Elite Teutonic Knight */
#const PRITHVIRAJ 437 				/* Heavy Cavalry Archer */
#const FRANCESCO_SFORZA 439 		/* Samurai */
#const SANYOGITA 925 				/* Queen */
#const PRITHVI 926 					/* Crossbowman */
#const CHAND_BHAI 927 				/* Monk with unique graphic */
#const SALADIN 929 					/* Elite Mameluke */
#const KHOSRAU 930 					/* Elite Elephant Archer */
#const JARL 931 					/* Elite Tarkan */
#const SAVARAN 932 					/* Elite Cataphract */
#const OSMAN 943 					/* Heavy Cavalry Archer */ 

/* HEROES FROM ROR */
#const GAJAH_MADA 1157
#const JAYANEGARA 1158
#const RADEN_WIJAYA 1159
#const SUNDA_ROYAL_FIGHTER 1160
#const SURYAVARMAN1 1162
#const UDAYADITYAVARMAN1 1163
#const JAYAVIRAVARMAN 1164
#const BAYINNAUNG 1165
#const TABINSHWEHTI 1166
#const LE_LOI 1178
#const LE_LAI 1179
#const LE_LAI2 1180
#const LE_TRIEN 1181
#const LUU_NHAN_CHU 1182
#const BUI_BI 1183
#const DINH_LE 1184
#const WANG_TONG 1185
#const ENVOY 1186

#const FARMER 1192

#const SHARKATZOR 1222
endif

/* *************************************************** 	*/
/* BUILDING CONSTANTS  									*/
/* *************************************************** 	*/

/* STANDARD BUILDINGS FROM AOC */

	#const BARRACKS 12
	#const DOCK 45
	#const SIEGE_WORKSHOP 49
	#const FARM 50
	#const MILL  68
	#const HOUSE 70
	#const PALISADE_WALL 72
	#const WATCH_TOWER 79
	#const CASTLE 82
	#const MARKET 84
	#const STABLE 86
	#const ARCHERY_RANGE 87
	#const BLACKSMITH 103
	#const MONASTERY 104
	#const TOWN_CENTER 109
	#const STONE_WALL 117
	#const FORTIFIED_WALL 155
	#const FISH_TRAP 199
	#const UNIVERSITY 209
	#const GUARD_TOWER 234
	#const KEEP 235
	#const BOMBARD_TOWER 236
	#const WONDER 276
	#const LUMBER_CAMP 562
	#const MINING_CAMP 584
	#const OUTPOST 598

/* MORE BUILDINGS */

	#const FAKE_ARCHERY_RANGE_C 10 	/* Castle age style */
	#const FAKE_BLACKSMITH_C 18 	/* Castle age style */
	#const FAKE_BARRACKS_C 20 		/* Castle age style */
	#const FAKE_MONASTERY 30 
	#const FAKE_CASTLE 33 			/* Does nothing, but can garrison 75 units! (they don't shoot) */
	#const FAKE_DOCK_C 47 			/* Castle age style */
	#const FAKE_TOWN_CENTER 71 		/* Can garrison, fire arrows, and support pop. Graphics aren't perfect. */
	#const FORTIFIED_WALL_CORNER 80 /* Has a fortified gate's HP and icon, but it's just a junction piece of wall. It's placed as a normal object, not in rings as FORTIFIED_WALL */
	#const WALL_CORNER 81 			/* Has a gate's HP and icon, but it's just a junction piece of wall.  It's placed as a normal object, not in rings as WALL */
	#const FAKE_STABLE 101 			/* Castle age style */
	#const FAKE_BLACKSMITH_F 105 /* Feudal age style */
	#const TRADE_WORKSHOP 110 /* Does nothing. Has west-European and far-east versions */
	#const FAKE_MARKET 116 /* Castle age style */
	#const FAKE_MILL_F 129 /* Feudal age style */
	#const FAKE_MILL_C 130 /* Castle age style */
	#const FAKE_DOCK_F 133 /* Feudal age style */
	#const FAKE_MARKET_I 137 /* Imperial age style */
	#const FAKE_SIEGE_WORKSHOP 150 /*  */
	#const FAKE_UNIVERSITY_I 210 /* Imperial age style */
	#const FAKE_PORT 446 /* A castle age style dock. Has special graphics for east-European and American civs. Slightly different for others */
	#const HOUSE_FEUDAL 463 /* Works! */
	#const HOUSE_CASTLE 464 /* Works! */
	#const FAKE_BARRACKS_F 498 /* Feudal age style */
	#const FAKE_LUMBER_CAMP 563 /*  */
	#const FAKE_MINING_CAMP 585 /*  */
	#const CATHEDRAL 599 /* Does nothing. Looks like British wonder, but bigger */
	#const BRIDGE_A_TOP 605 /*  */
	#const BRIDGE_A_MID 606 /* Bridge B goes NW to SE. */
	#const BRIDGE_A_BOTTOM 607 /* Bridge A goes SW to NE. */
	#const BRIDGE_B_TOP 608 /*  */
	#const BRIDGE_B_MID 609 /*  */
	#const BRIDGE_B_BOTTOM 610 /*  */
	#const PAVILION 624 /* Big tent. Works as a house, but only 500 HP */
	#const PAVILION3 625 /* Small tent. Works as a house, but only 500 HP */
	#const PAVILION2 626 /* Small tent. Works as a house, but only 500 HP */
	#const MOSQUE 655 /* Does nothing. Looks exactly as the Turkish wonder */
	#const THE_ACCURSED_TOWER 684 /* Powerful guard tower, similar to west-European ones. Great range */
	#const THE_TOWER_OF_FLIES 685 /* Powerful guard tower, similar to west-European ones. */
	#const PYRAMID 689 /* Does nothing. */
	#const DOME_OF_THE_ROCK 690 /* Does nothing. Great mid-east temple */
	#const GREAT_PYRAMID 696 /* Does nothing. */
	#const YURT 712 /* Big, wooden hut. Works as a house, but only 500 HP */
	#const YURT2 713 /* Small, wooden hut. Works as a house, but only 500 HP */
	#const YURT3 714 /* Small, wooden hut. Works as a house, but only 500 HP */
	#const YURT4 715 /* Small, wooden hut. Works as a house, but only 500 HP */
	#const YURT5 716 /* Small, leather hut. Works as a house, but only 500 HP */
	#const YURT6 717 /* Small, leather hut. Works as a house, but only 500 HP */
	#const YURT7 718 /* Small, leather hut. Works as a house, but only 500 HP */
	#const YURT8 719 /* Big, leather hut. Works as a house, but only 500 HP */
	#const BRIDGE_A_CRACKED 738 /*  They can't be attacked. */
	#const BRIDGE_A_BROKEN_TOP 739 /*  They aren't rescuable i f gaia. */
	#const BRIDGE_A_BROKEN_BOTTOM 740 /* Middle parts always have some water underneath. */
	#const BRIDGE_B_CRACKED 741 /*  */
	#const BRIDGE_B_BROKEN_TOP 742 /*  */
	#const BRIDGE_B_BROKEN_BOTTOM 743 /*  */
	#const SEA_TOWER 785 /* New water building! Graphics aren't perfect but can shoot arrows. Graphics fixed in the HD Edition */
	/*  #const SEA_GATE (PALISADE GATE IN AOF) 790 */
	/* A wooden gate on water! Friendly ships can pass thru. Open: / 790, \ 794, � 798, | 802. Closed: / 789, \ 793, � 797, | 801. Palisade gate can be placed on land in AoF  */
	#const SEA_WALL  791 /* A wooden wall on water! But it's not automatically placed in rings. Part of the Palisade gate graphics in AoF */
	#const MONUMENT 826 /* Same as a wonder, but doesn't let you win */
	/*  #const FORTIFIED_GATE / 63, \ 85, � 660, | 668.  Only central part actually looks like a fortified gate */


/*  BUILDINGS FROM AK */
if AOC

else
	#const DLC_FEITORIA 1021 /* generates resources */
	#const DLC_FENCE 1062 /* like walls, but only 1 HP */
	#const DLC_STORAGE 1081 /* 2x2 structure */
	#const DLC_AFRICANHUT_A 1082 /* 5 housing space */
	#const DLC_AFRICANHUT_B 1083 /* 5 housing space */
	#const DLC_AFRICANHUT_C 1084 /* 5 housing space */
	#const DLC_AFRICANHUT_D 1085 /* 5 housing space */
	#const DLC_AFRICANHUT_E 1086 /* 5 housing space */
	#const DLC_AFRICANHUT_F 1087 /* 5 housing space */
	#const DLC_AFRICANHUT_G 1088 /* 5 housing space */
	#const DLC_GRANARY 1089 /* 1x1 structure */
	#const DLC_BARRICADE 1090 /* a pile of rubbish; 1000 HP */
	#const PALACE 1096 /* wonder from random civilization */
	#const TENT 1097 /* 5 housing space */
	#const TENT 1098 /* 6 housing space */
	#const TENT 1099 /* 7 housing space */
	#const TENT 1100 /* 8 housing space */
	#const TENT 1101 /* 9 housing space */
	#const SEA_FORTIFICATION 1102 /* Tower; cannot be placed on water */


/*  BUILDINGS FROM FE */

	#const FORTRESS 33 /*  */
	#const FORTIFIED_PALISADE_WALL 119 /*  */
	#const FIRE_TOWER 190 /*  */
	#const AQUEDUCT 231 /*  */
	#const AMPHITHEATRE 251 /*  */
	#const COLISEUM 263 /*  */
	#const INDESTRUCTIBLE_OUTPOST 308 /*  */
	#const CITY_WALL 370 /*  */
	#const TEMPLE_OF_HEAVEN 637 /*  */

	/* 
	#const PALISADE_GATE01 789
	#const PALISADE_GATE02 790
	#const PALISADE_GATE03 791
	#const PALISADE_GATE04 792
	#const PALISADE_GATE05 793
	#const PALISADE_GATE06 794
	#const PALISADE_GATE07 795
	#const PALISADE_GATE08 796
	#const PALISADE_GATE09 797
	#const PALISADE_GATE10 798
	#const PALISADE_GATE11 800
	#const PALISADE_GATE12 801
	#const PALISADE_GATE13 802
	#const PALISADE_GATE14 803
	#const PALISADE_GATE15 804
	*/

	#const QUIMTER_CATHEDRAL  872 /*  */
	#const ARCH_OF_CONSTANTINE 899 /*  */

/*  BUILDINGS FROM ROR */

	#const RICE_FARM 1187
	#const HARBOR 1189
	#const ARMY_TENT1 1196
	#const ARMY_TENT2 1197
	#const ARMY_TENT3 1198
	#const ARMY_TENT4 1199
	#const ARMY_TENT5 1200
	#const BRIDGE_C_TOP 1204
	#const BRIDGE_C_MIDDLE 1205
	#const BRIDGE_C_BOTTOM 1206
	#const BRIDGE_D_TOP 1207
	#const BRIDGE_D_TOP 1208
	#const BRIDGE_D_TOP 1209
	#const BRIDGE_C_CRACKED 1210
	#const BRIDGE_C_BROKEN_TOP 1211
	#const BRIDGE_C_BROKEN_BOTTOM 1212
	#const BRIDGE_D_CRACKED 1213
	#const BRIDGE_D_BROKEN_TOP 1214
	#const BRIDGE_D_BROKEN_BOTTOM 1215
	#const SANCHI_STUPA 1216
	#const GOL_GUMBAZ 1217
	#const BARRICADE1 1218
	#const BARRICADE2 1219
	#const BARRICADE3 1220
endif

/*  *************************************************** 	*/
/*  EYECANDY CONSTANTS  									*/
/*  *************************************************** 	*/

/*  EYECANDY FROM AOC */

	#const ARROWS 54 /* Lying on ground. Can be on water. Varies */
	#const FORAGE_BUSH 59 /* Varies */
	#const TRIREME 61 /* Eye-candy only. Disappears after some time. Can be on land. Varies (rotates) */
	#const GOLD 66 /* Varies */
	#const STONE 102 /* Varies */
	#const RUBBLE_1X1 143 /* Can be on water! Disappears quickly */
	#const RUBBLE_2X2 144 /* Can be on water! Disappears quickly */
	#const RUBBLE_3X3 145 /* Can be on water! Disappears quickly */
	#const RUBBLE_4X4 146 /* Can be on water! Disappears quickly */
	#const RUBBLE_6x6 147 /* Can be on water! Disappears quickly */
	#const RUBBLE_8x8 148 /* Can be on water! Disappears quickly */
	#const OUTLAW 158 /* Neutral archer. Attacks everyone he sees! Cool but only 15 HP */
	#const CRACKS 241 /*  */
	#const CLIFF_ALTERNATIVE 273 /* A small cliff, with new rock color */
	#const EXPIRED_FISHTRAP 278 /* Can be on land. Disappears quickly */
	#const RELIC 285 /*  */
	/*  #const RELIC, WITH CIVILIZATION NAME 287-298 */
	#const MOUNTAIN1 310 /* Can't walk on. Grassy */
	#const MOUNTAIN2 311 /* Can't walk on. Grassy */
	#const ARROW 315 /* Lying on ground. Can be on water. Varies */
	#const FLOWERS_1 334 /* Can overlap water and other stuff */
	#const FLOWERS_2 335 /* Can overlap water and other stuff */
	#const FLOWERS_3 336 /* Can overlap water and other stuff */
	#const FLOWERS_4 337 /* Can overlap water and other stuff */
	#const PATH_4 338 /* Two muddy trails crossing. Can overlap water and other stuff */
	#const PATH_1 339 /* Muddy trail. Can overlap water and other stuff */
	#const PATH_2 340 /* Muddy trail. Can overlap water and other stuff */
	#const PATH_3 341 /* Muddy trail. Can overlap water and other stuff */
	#const RUINS 345 /* Quite big */
	#const SEA_ROCKS_1 389 /*  */
	#const SEA_ROCKS_2 396 /*  */
	#const STUMP 415 /* Disappears after some time. Varies */
	#const SMALL_WHITE_STONE 417 /*  */
	#const ROCK 623 /* Can be on water, but looks good only on land. Varies. */
	#const PIECE_OF_THE_TRUE_CROSS 688 /* Black relic. Disappears when picked up... */
	#const CACTUS 709 /* Varies */
	#const SKELETON 710 /* Varies */
	#const RUGS 711 /* Can be on water! Varies */
	#const NINE_BANDS 720 /* Pole with horn decorations */
	#const SHIPWRECK 721 /*  */
	#const SHIPWRECK2 722 /*  */
	#const CRATER 723 /* Quite small */
	#const STUMPS_OF_BAMBOO 737 /* Disappears after some time */
	#const MOUNTAIN_3 744 /* Can't walk on. Rocky */
	#const MOUNTAIN_4 745 /* Can't walk on. Rocky */
	#const CAR 749 /* The one of the cheat, but eye-candy only */
	#const STUMP 809 /* What remains of a cut tree. Varies */
	#const STATUE 817 /* The one of European universities. Can be on water! */
	#const PLANTS 818 /* Small grass. Can be on water! Varies */
	#const SIGN 819 /* Wooden road signal. Can be on water! */
	#const GRAVE 820 /* Varies */
	#const HEAD 821 /* Pole with human head */
	#const OLD_STONE_HEAD 855 /* Pre-Columbian sculpture. Varies */
	#const ROMAN_RUINS 856 /* Can be on water! Varies. */
	#const HAY_STACK 857 /*  */
	#const BROKEN_CART 858 /*  */
	#const FLOWER_BED 859 /*  */
	#const STORMY_DOG 862 /* Flying dog! The one of the cheat... wanders like a hawk */
	#const RUBBLE_1_X_1 863 /* Like destroyed buildings, 1x1 tiles. Can be on water! */
	#const RUBBLE_2_X_2 864 /* Can be on water! */
	#const RUBBLE_3_X_3 865 /* Can be on water! */

/*  TREES FROM AOC */
	#const BAMBOO_FOREST_TREE 348 /* Varies. Same created by BAMBOO terrain */
	#const OAK_FOREST_TREE 349 /* Varies. Same created by FOREST terrain */
	#const PINE_FOREST_TREE 350 /* Varies. Same created by PINE_FOREST terrain */
	#const PALM_FOREST_TREE 351 /* Varies. Same created by PALM_DESERT terrain */
	#const TREE_TD 399 /* Oak forest */
	#const TREE2 400 /* Oak forest */
	#const TREE3 401 /* Oak forest */
	#const TREE4 402 /* Oak forest */
	#const TREE5 403 /* Oak forest */
	#const TREE_F 404 /* Dry, no leaves */
	#const TREE_G 405 /* Brown leaves */
	#const TREE_H 406 /* Oak forest */
	#const TREE_I 407 /* Dry, no leaves */
	#const TREE_J 408 /* Oak forest */
	#const TREE_K 409 /* Oak forest */
	#const TREE_L 410 /* Oak forest */
	#const SNOW_PINE_TREE 413 /* Varies. Same created by SNOW_FOREST terrain */
	#const JUNGLE_TREE 414 /* Varies. Same created by JUNGLE terrain */

if AOC

else
/*  EYECANDY FROM FE */

	#const RUBBLE_2X2FE 191 /*  */
	#const RUBBLE_2X2FE2 192 /* temporary */
	#const GRASS_PATCH 301 /* tall grass */
	#const BUSH 302 /* 2 variations; from JUNGLE terrain */
	#const SEAGULLS 303 /* in a patch */
	#const BONFIRE 304 /* can be placed as a player object to offer line of sight */
	#const BLACK_TILE 306 /* 1x1 square of pure black */
	#const LOOT 472 /* pile of golden treasure */
	#const BURNED_BUILDING 635 /* varies */
	#const BURNED_BUILDING 758 /* varies */
	#const ROCK_STONE 839 /* turns into stone when attacked by villagers */
	#const ROCK_GOLD 841 /* turns into gold when attacked by villagers */
	#const WILD_CAMEL 884 /* no food; behaves like wild horse */
	#const WATERFALL 896 /* 3 rotations */
	#const RAIN 900 /* 1x1 patch */
	#const FLAG_F 901 /* with golden emblem */
	#const SMOKE 902 /* from blacksmith */
	#const BOARDWALK1 904 /* narrow wooden bridge */
	#const BOARDWALK2 905
	#const BOARDWALK3 906
	#const BOARDWALK4 907
	#const BOARDWALK5 908
	#const BOARDWALK6 909
	#const IMPALED_CORPSE 910 /* varies; can be player object */
	#const BOARDWALK7 911 /* narrow wooden bridge */
	#const BOARDWALK8 912
	#const BOARDWALK9 913
	#const QUARRY 914 /* pile of mined rocks */
	#const LUMBER 915 /* pile of logs */
	#const GOODS 916 /* fruit market stall */
	#const ROCK_2 918 /* varies; brown rocks */
	#const BARRELS 933 /* varies */
	#const FLAME_1 939 /* small */
	#const FLAME_2 940 /* small */
	#const FLAME_3 941 /* large */
	#const FLAME_4 942 /* large */


/*  EYECANDY FROM AK */

	#const DLC_SAVANNAHPATCH 1033 /* light brown grass */
	#const DLC_MOUNTAIN_5 1041 /* like AoC mountains */
	#const DLC_MOUNTAIN_6 1042 /* rocky */
	#const DLC_MOUNTAIN_7 1043 /* rocky */
	#const DLC_MOUNTAIN_8 1044 /* rocky */
	#const DLC_MOUNTAIN_9 1045 /* snowy */
	#const DLC_MOUNTAIN_10 1046 /* snowy */
	#const DLC_MOUNTAIN_11 1047 /* snowy */
	#const DLC_BOULDER_A 1048 /* varies; small 1x1 rock formation */
	#const DLC_BOULDER_B 1049 /* varies; tall 1x1 rock formation */
	#const DLC_BOULDER_C 1050 /* 3x3 rock formation */
	#const DLC_DRAGONTREE 1051 /* varies, 100 wood */
	#const DLC_BAOBABTREE 1052 /* varies, 200 wood */
	#const DLC_AFRICANBUSH 1053 /* various green bushes; 100 wood */
	#const DLC_AFRICANBUSH_2 1054 /* various snowy bushes; 100 wood */
	#const DLC_ORANGEBUSH 1059 /* like forage bush */
	#const DLC_ACACIATREE 1063 /* varies, 100 wood */
	#const WOODEN_RUBBLE 1065 /* 1x1 */
	#const DLC_ANIMALSKELETON 1091 /*  */
	#const DLC_STELAE_A 1092 /* 2x2 pillar */
	#const DLC_STELAE_B 1093 /* 1x1 pillar */
	#const DLC_STELAE_C 1094 /* 1x1 pillar */
	#const DLC_GALLOW 1095 /* tree with noose */

/*  EYECANDY FROM ROR */

	#const MANGROVE_TREE 1144
	#const RAINFOREST_TREE 1146
	#const ROCK_BEACH 1148
	#const ROCK_JUNGLE 1149
	#const FLAG_G 1150
	#const FLAG_H 1151
	#const FLAG_I 1152
	#const FLAG_J 1153
	#const BUDDHA_STATUE_A 1171
	#const BUDDHA_STATUE_B 1172
	#const BUDDHA_STATUE_C 1173
	#const BUDDHA_STATUE_D 1174
	#const FERN_PATCH 1175
	#const TROWULAN_GATE 1176
	#const VASES 1177
	#const STUPA 1191
	#const PAGODA1 1201
	#const PAGODA2 1202
	#const PAGODA3 1203
endif




/*  *************************************************** 	*/
/*  USERPATCH CONSTANTS 									*/
/*  *************************************************** 	*/

if UP 

/* -------------------------------------- */
/*  Define Effect Constants              */
/* -------------------------------------- */
	#const SET_ATTRIBUTE   0	/* Type: Attribute Const */
	#const ADD_ATTRIBUTE   4	/* Type: Attribute Const */
	#const MUL_ATTRIBUTE   5	/* Type: Attribute Const */
	#const MOD_RESOURCE    1	/* Type: ATTR_SET or ATTR_ADD */
	#const MUL_RESOURCE    6	/* Type: ATTR_DISABLE */
	#const SET_TECH_COST 100	/* Type: ResourceAmount const */
	#const ADD_TECH_COST 101	/* Type: ResourceAmount const */
	#const MOD_TECH_TIME 103	/* Type: ATTR_SET or ATTR_ADD */
	#const ENABLE_OBJECT   2	/* Type: ATTR_DISABLE or ATTR_ENABLE, Value: 0 */
	#const UPGRADE_UNIT    3	/* Type: UnitId, Value: 0 */
	#const DISABLE_TECH  102	/* Type: ATTR_DISABLE, Value: TechId */
	#const ENABLE_TECH     7	/* Type: ATTR_DISABLE or ATTR_ENABLE or ATTR_FORCE */
	#const MODIFY_TECH     8	/* Type: ModifyTech const */
	#const SET_PLAYER_DATA 9	/* Type: ATTR_SET */

	#const GAIA_SET_ATTRIBUTE    -1
	#const GAIA_ADD_ATTRIBUTE    -5
	#const GAIA_MUL_ATTRIBUTE    -6
	#const GAIA_MOD_RESOURCE     -2
	#const GAIA_MUL_RESOURCE     -7
	#const GAIA_SET_TECH_COST  -101
	#const GAIA_ADD_TECH_COST  -102
	#const GAIA_MOD_TECH_TIME  -104
	#const GAIA_ENABLE_OBJECT    -3
	#const GAIA_UPGRADE_UNIT     -4
	#const GAIA_DISABLE_TECH   -103
	#const GAIA_ENABLE_TECH      -8
	#const GAIA_MODIFY_TECH      -9
	#const GAIA_SET_PLAYER_DATA -10

/* -------------------------------------- */
/* Define Effect Type Constants         */
/* -------------------------------------- */
	#const ATTR_DISABLE 0
	#const ATTR_ENABLE 1
	#const ATTR_FORCE 2
	#const ATTR_SET 0
	#const ATTR_ADD 1

/* -------------------------------------- */
/* Define ModifyTech Constants          */
/* -------------------------------------- */
	#const ATTR_SET_TIME -1
	#const ATTR_ADD_TIME -2
	#const ATTR_SET_FOOD_COST 0
	#const ATTR_SET_WOOD_COST 1
	#const ATTR_SET_STONE_COST 2
	#const ATTR_SET_GOLD_COST 3
	#const ATTR_ADD_FOOD_COST 16384
	#const ATTR_ADD_WOOD_COST 16385
	#const ATTR_ADD_STONE_COST 16386
	#const ATTR_ADD_GOLD_COST 16387

/* -------------------------------------- */
/* Define Attribute Constants           */
/* -------------------------------------- */
	#const ATTR_HITPOINTS 0
	#const ATTR_LINE_OF_SIGHT 1
	#const ATTR_GARRISON_CAPACITY 2
	#const ATTR_RADIUS_1 3
	#const ATTR_RADIUS_2 4
	#const ATTR_MOVE_SPEED 5
	#const ATTR_ROTATE_SPEED 6
	#const ATTR_ARMOR 8			/* armor type + value (see A.G.E.) */
	#const ATTR_ATTACK 9			/* attack type + value (see A.G.E.) */
	#const ATTR_RELOAD_TIME 10
	#const ATTR_ACCURACY_PERCENT 11
	#const ATTR_MAX_RANGE 12
	#const ATTR_WORK_RATE 13
	#const ATTR_RESOURCE_CARRY 14
	#const ATTR_BASE_ARMOR 15
	#const ATTR_PROJECTILE_ID 16
	#const ATTR_UPGRADE_GRAPHIC 17
	#const ATTR_PROJECTILE_INTELLIGENCE 19
	#const ATTR_MIN_RANGE 20
	#const ATTR_STORAGE_VALUE 21		/* population support, tree wood amount, etc. */
	#const ATTR_BLAST_RADIUS 22
	#const ATTR_SEARCH_RADIUS 23
	#const ATTR_BOARDING_RELOAD 80
	#const ATTR_RESOURCE_COST 100
	#const ATTR_CREATION_TIME 101
	#const ATTR_GARRISON_ARROWS 102
	#const ATTR_FOOD_COST 103
	#const ATTR_WOOD_COST 104
	#const ATTR_GOLD_COST 105
	#const ATTR_STONE_COST 106
	#const ATTR_MAX_DUP_MISSILES 107
	#const ATTR_HEALING_RATE 108

/* New: Category 80+ */
	#const ATTR_GARRISON_TYPE 30
	#const ATTR_DATA_FLAGS 31

/* New: Category 70+ */
	#const ATTR_HERO_STATUS 40		/* ADD_ATTRIBUTE append flags */
	#const ATTR_ATTACK_DELAY 41		/* ADD_ATTRIBUTE enabled */
	#const ATTR_TRAIN_LOCATION 42
	#const ATTR_TRAIN_BUTTON 43
	#const ATTR_BLAST_LEVEL 44
	#const ATTR_HERO_HEAL_TIME 45		/* ADD_ATTRIBUTE enabled */
	#const ATTR_SHOWN_ATTACK 46		/* ADD_ATTRIBUTE enabled */
	#const ATTR_SHOWN_RANGE 47		/* ADD_ATTRIBUTE enabled */
	#const ATTR_SHOWN_MELEE_ARMOR 48	/* ADD_ATTRIBUTE enabled */
	#const ATTR_SHOWN_PIERCE_ARMOR 49	/* ADD_ATTRIBUTE enabled */

/* New: Category 10+ */
	#const ATTR_NAME_ID 50
	#const ATTR_CREATE_SDESC_ID 51
	#const ATTR_CREATE_LDESC_ID 52		/* unused (becomes ATTR_CREATE_SDESC_ID + 20000) */
	#const ATTR_TERRAIN_ID 53
	#const ATTR_TRAITS 54			/* ADD_ATTRIBUTE append flags */
	#const ATTR_CIV_ID 55
	#const ATTR_PIECE 56
	#const ATTR_DEAD_ID 57

/* -------------------------------------- */
/* Define ResourceAmount Constants      */
/* -------------------------------------- */
	#const AMOUNT_FOOD 0
	#const AMOUNT_WOOD 1
	#const AMOUNT_STONE 2
	#const AMOUNT_GOLD 3
	#const AMOUNT_STARTING_FOOD 91
	#const AMOUNT_STARTING_WOOD 92
	#const AMOUNT_STARTING_STONE 93
	#const AMOUNT_STARTING_GOLD 94
	#const AMOUNT_POPULATION_CAP 4
	#const AMOUNT_POPULATION 11
	#const AMOUNT_CONVERT_PRIEST 27
	#const AMOUNT_CONVERT_BUILDING 28
	#const AMOUNT_TOWN_CENTER_UNAVAILABLE 48
	#const AMOUNT_BUILDING_TRICKLE_FOOD 205
	#const AMOUNT_BUILDING_TRICKLE_WOOD 206
	#const AMOUNT_BUILDING_TRICKLE_STONE 207
	#const AMOUNT_BUILDING_TRICKLE_GOLD 208
	#const AMOUNT_REVEAL_ENEMY 209
	#const AMOUNT_REVEAL_CLASS1 210
	#const AMOUNT_REVEAL_CLASS2 211

/* -------------------------------------- */
/* Define PlayerData Constants          */
/* -------------------------------------- */
	#const DATA_CIV_NAME_ID 0

/* -------------------------------------- */
/* Define AssignTarget Constants        */
/* -------------------------------------- */
	#const AT_PLAYER 0
	#const AT_COLOR 1
	#const AT_TEAM 2

/* -------------------------------------- */
/* Define Building Constants            */
/* -------------------------------------- */
	#const TOWN_CENTER_FOUNDATION 621
	#const PALISADE_WALL 72
	#const STONE_WALL 117
	#const FORTIFIED_WALL 155

/* -------------------------------------- */
/* Define Upgrade Constants             */
/* -------------------------------------- */
	#const TOWN_CENTER_F 71
	#const TOWN_CENTER_C 141
	#const TOWN_CENTER_I 142
	#const TOWN_CENTER_FOUNDATION_F 617
	#const TOWN_CENTER_FOUNDATION_C 484
	#const TOWN_CENTER_FOUNDATION_I 597
	#const HOUSE_F 463
	#const HOUSE_C 464
	#const HOUSE_I 465
	#const MONASTERY_F 30
	#const MONASTERY_C 31
	#const MONASTERY_I 32
	#const BARRACKS_F 498
	#const BARRACKS_C 132
	#const BARRACKS_I 20
	#const ARCHERY_RANGE_C 10
	#const ARCHERY_RANGE_I 14
	#const STABLE_C 86
	#const STABLE_I 153
	#const MARKET_C 116
	#const MARKET_I 137
	#const MILL_F 129
	#const MILL_C 130
	#const MILL_I 131
	#const LUMBER_CAMP_F 563
	#const LUMBER_CAMP_C 564
	#const LUMBER_CAMP_I 565
	#const MINING_CAMP_F 585
	#const MINING_CAMP_C 586
	#const MINING_CAMP_I 587
	#const DOCK_F 133
	#const DOCK_C 47
	#const DOCK_I 51
	#const BLACKSMITH_F 105
	#const BLACKSMITH_C 18
	#const BLACKSMITH_I 19
	#const UNIVERSITY_I 210

/* -------------------------------------- */
/* Define Villager Constants            */
/* -------------------------------------- */
	#const VILLAGER_BASE_M 83
	#const VILLAGER_BASE_F 293
	#const VILLAGER_FARMER_M 259
	#const VILLAGER_FARMER_F 214
	#const VILLAGER_SHEPHERD_M 592
	#const VILLAGER_SHEPHERD_F 590
	#const VILLAGER_FORAGER_M 120
	#const VILLAGER_FORAGER_F 354
	#const VILLAGER_HUNTER_M 122
	#const VILLAGER_HUNTER_F 216
	#const VILLAGER_FISHER_M 56
	#const VILLAGER_FISHER_F 57
	#const VILLAGER_WOOD_M 123
	#const VILLAGER_WOOD_F 218
	#const VILLAGER_GOLD_M 579
	#const VILLAGER_GOLD_F 581
	#const VILLAGER_STONE_M 124
	#const VILLAGER_STONE_F 220
	#const VILLAGER_BUILDER_M 118
	#const VILLAGER_BUILDER_F 212
	#const VILLAGER_REPAIRER_M 156
	#const VILLAGER_REPAIRER_F 222

/* -------------------------------------- */
/* Define Class Constants               */
/* -------------------------------------- */
	#const VILLAGER_CLASS 904
	#const BUILDING_CLASS 903
	#const OCEAN_FISH_CLASS 905
	#const SHORE_FISH_CLASS 933
	#const FARM_CLASS 949
	#const TREE_CLASS 915
	#const TOWER_CLASS 952
	#const WALL_CLASS 927
	#const GATE_CLASS 939
	#const KING_CLASS 959
	#const LIVESTOCK_CLASS 958
	#const INFANTRY_CLASS 906
	#const ARCHERY_CLASS 900
	#const ARCHERY_CANNON_CLASS 944
	#const CAVALRY_CLASS 912
	#const CAVALRY_ARCHER_CLASS 936
	#const CAVALRY_CANNON_CLASS 923
	#const MONASTERY_CLASS 918
	#const SIEGE_WEAPON_CLASS 913
	#const SCORPION_CLASS 955
	#const PACKED_TREBUCHET_CLASS 951
	#const UNPACKED_TREBUCHET_CLASS 954
	#const PETARD_CLASS 935
	#const WARSHIP_CLASS 922

/* -------------------------------------- */
/* Define Extra Constants               */
/* -------------------------------------- */
	#const REAL_TERRAIN -1
	#const ELITE_UNIQUE_UNIT -2
	#const UNIQUE_UNIT -1
	#const MONK_RELIC 286
	#const OUTLAW 158
	#const RI_LOOM 22
	#const RI_TOWN_CENTER 187
	#const RI_SPIES 408
	
	
/* treason/spies */
	#const GAIA_SET_PLAYER_DATA -10	
	#const DATA_MODE_FLAGS 1
	
	
endif


/* *******************GAME MODE BY SCRIPT********************** */


if REGICIDE
	#define KINGGAME
		start_random
			percent_chance 15	#define SUDDENDEATH
		end_random	
else
	if UP
		start_random
	 percent_chance 15	#define SUDDENDEATH
	 percent_chance 20	#define KINGGAME
	 percent_chance 65	#define NORMALGAME
		end_random
	else
		#define NORMALGAME
	endif
endif

/* MONUMENTAL MIDDLE */
if UP
	if CTRUP
	elseif KOTHUP
		start_random 
		percent_chance 50 
		#define MONUMENTALMIDDLE
		end_random	
	else	
		start_random 
		percent_chance 10 
		#define MIDDLEAREA
		#define MONUMENTALMIDDLE
		end_random
	endif
endif
/* *********************STARTING TOWNS************************** */

if SUDDENDEATH

	if KOTHUP
		start_random
		 percent_chance 15	#define TOWN
		 percent_chance 6	#define CITY
		 percent_chance 4	#define METROPOLE
		 percent_chance 75	#define VILLAGE
		end_random	
	else
		start_random
		 percent_chance 5	#define TOWN
		 percent_chance 2	#define CITY
		 percent_chance 2	#define METROPOLE
		 percent_chance 91	#define VILLAGE
		end_random
	endif
		
elseif KINGGAME 

	start_random
	 percent_chance 10	#define NOMADIC
	end_random
	
	start_random
	 percent_chance 6	#define TOWN
	 percent_chance 5	#define CITY
	 percent_chance 4	#define METROPOLE
	 percent_chance 85	#define VILLAGE
	end_random

else 

	start_random
	 percent_chance 15	#define NOMADIC
	 percent_chance 8	#define LANDNOMAD
	end_random

	start_random
	 percent_chance 6	#define TOWN
	 percent_chance 5	#define CITY
	 percent_chance 4	#define METROPOLE	
	 percent_chance 85	#define VILLAGE
	end_random

endif

/* starting towns */	

if VILLAGE
	#define ONETOWN
elseif TOWN
	#define ONETOWN 
	#define TWOTOWN 	
elseif CITY	
	#define ONETOWN 
	#define TWOTOWN
	#define THREETOWN
elseif METROPOLE
	#define ONETOWN 
	#define TWOTOWN
	#define THREETOWN
	#define FOURTOWN
endif	


/*  ************************************************************************************** 	*/
/*  ************************************************************************************** 	*/
/*  ************************************************************************************** 	*/
/*  START OF THE SCRIPT			                                 							*/
/*  ************************************************************************************** 	*/
/*  ************************************************************************************** 	*/
/*  ************************************************************************************** 	*/
/*  ************************************************************************************** 	*/

/* ********************** RESOURCES **************************** */
/* 



	- RANDOM: rnd(-100,100)w; rnd(-100,100)f; rnd(-100,100)g; rnd(-100,100)s  
	- DEATHMATCH: 20000w, 20000f, 10000g, 5000s
	- HIGH: +600w, +600f, +300g, +300s
	- MED: +300w, +300f, +200g, +200s
	- DEBT: -200g
	
+ NOMADIC: +275w, +100w
+ REGICIDE: +300f, 300w, -50g, -100s

When selecting in game settings:
o High resources: ALWAYS start with the regular high resources
o Medium resources: ALWAYS start with the regular medium resources
o Low resources: ALWAYS start with the regular low (standard) resources

*/

if DEATH_MATCH 
	#define STANDARDRES
elseif HIGH_RESOURCES
	#define STANDARDRES
elseif MEDIUM_RESOURCES
	#define STANDARDRES
elseif LOW_RESOURCES
	#define STANDARDRES
else

	if KINGGAME
		start_random
			percent_chance 2	#define DEBTS			
			percent_chance 7	#define DEATHMATCH
			percent_chance 10	#define RANDOMRES
			percent_chance 81	#define STANDARDRES
		end_random
	elseif NOMADIC
		start_random
			percent_chance 2	#define DEBTS			
			percent_chance 6	#define DEATHMATCH
			percent_chance 10	#define RANDOMRES
			percent_chance 82	#define STANDARDRES
		end_random		
	elseif LANDNOMAD
			#define STANDARDRES			
	elseif CTR 
		start_random
			percent_chance 2	#define DEBTS		
			percent_chance 6	#define RANDOMRES
			percent_chance 7	#define DEATHMATCH			
			percent_chance 85	#define STANDARDRES	
		end_random
	
	else
		start_random
			percent_chance 2	#define HIGHRES
			percent_chance 3	#define MEDRES
			percent_chance 3	#define DEBTS
			percent_chance 8	#define DEATHMATCH
			percent_chance 10	#define RANDOMRES
			percent_chance 74	#define STANDARDRES
		end_random
		
	endif
	
endif



<PLAYER_SETUP>

if UP 
	start_random
		percent_chance 18
		grouped_by_team 
		percent_chance 82
		random_placement
	end_random
else
random_placement
endif

/* AI */
if NOMADIC
	ai_info_map_type NOMAD 1 0 0
elseif LANDNOMAD
	ai_info_map_type NOMAD 1 0 0
endif





/* ******************************************* STARTING RESOURCES ********************************************** */


if UP
	if DEATHMATCH
		effect_amount MOD_RESOURCE AMOUNT_STARTING_WOOD ATTR_ADD 19800
		effect_amount MOD_RESOURCE AMOUNT_STARTING_FOOD ATTR_ADD 19800
		effect_amount MOD_RESOURCE AMOUNT_STARTING_GOLD ATTR_ADD 9900
		effect_amount MOD_RESOURCE AMOUNT_STARTING_STONE ATTR_ADD 4800
	elseif RANDOMRES
		effect_amount MOD_RESOURCE AMOUNT_STARTING_WOOD ATTR_ADD rnd(-100,100)
		effect_amount MOD_RESOURCE AMOUNT_STARTING_FOOD ATTR_ADD rnd(-100,100)
		effect_amount MOD_RESOURCE AMOUNT_STARTING_GOLD ATTR_ADD rnd(-100,100)
		effect_amount MOD_RESOURCE AMOUNT_STARTING_STONE ATTR_ADD rnd(-100,100)
	elseif MEDRES
		effect_amount MOD_RESOURCE AMOUNT_STARTING_WOOD ATTR_ADD 300
		effect_amount MOD_RESOURCE AMOUNT_STARTING_FOOD ATTR_ADD 300
		effect_amount MOD_RESOURCE AMOUNT_STARTING_GOLD ATTR_ADD 200
		effect_amount MOD_RESOURCE AMOUNT_STARTING_STONE ATTR_ADD 200	
	elseif HIGHRES
		effect_amount MOD_RESOURCE AMOUNT_STARTING_WOOD ATTR_ADD 800
		effect_amount MOD_RESOURCE AMOUNT_STARTING_FOOD ATTR_ADD 800
		effect_amount MOD_RESOURCE AMOUNT_STARTING_GOLD ATTR_ADD 600
		effect_amount MOD_RESOURCE AMOUNT_STARTING_STONE ATTR_ADD 600
	elseif DEBTS
		effect_amount MOD_RESOURCE AMOUNT_STARTING_GOLD ATTR_ADD -200	
	endif


	if KINGGAME 
		if REGICIDE
		
		else
		effect_amount MOD_RESOURCE AMOUNT_STARTING_WOOD ATTR_ADD 300
		effect_amount MOD_RESOURCE AMOUNT_STARTING_FOOD ATTR_ADD 300
		effect_amount MOD_RESOURCE AMOUNT_STARTING_GOLD ATTR_ADD -100
		effect_amount MOD_RESOURCE AMOUNT_STARTING_STONE ATTR_ADD -50	
		endif
	endif
	
	if NOMADIC
		nomad_resources
	endif

endif
	
	
	
	
/* ****************************************** GUARD STATES & GAME MODES ************************************************** */

/* REGICIDE */
if KINGGAME
	guard_state KING AMOUNT_GOLD 0 1
	effect_amount GAIA_SET_PLAYER_DATA DATA_MODE_FLAGS ATTR_SET 3
endif

/* SUDDEN DEATH */
if SUDDENDEATH
	guard_state TOWN_CENTER AMOUNT_GOLD 0 1
	effect_amount ENABLE_TECH RI_TOWN_CENTER ATTR_DISABLE 187
endif

/* MONUMENTAL MIDDLE */
if MONUMENTALMIDDLE
	effect_amount ADD_ATTRIBUTE MONUMENT ATTR_HITPOINTS 20000
	effect_amount ADD_ATTRIBUTE MONUMENT ATTR_HERO_STATUS 4
	effect_amount ADD_ATTRIBUTE MONUMENT ATTR_HERO_HEAL_TIME 1
	effect_amount ADD_ATTRIBUTE MONUMENT ATTR_ARMOR 968
	effect_amount ADD_ATTRIBUTE MONUMENT ATTR_ARMOR 1224
	effect_amount ADD_ATTRIBUTE MONUMENT ATTR_ARMOR 3071
	effect_amount ADD_ATTRIBUTE MONUMENT ATTR_ARMOR 5576
	if AOC
		start_random
		percent_chance 20		
			effect_amount SET_ATTRIBUTE VILLAGER_BASE_F ATTR_TRAIN_LOCATION 826
			effect_amount SET_ATTRIBUTE VILLAGER_BASE_F ATTR_TRAIN_BUTTON 1
			effect_amount MUL_ATTRIBUTE VILLAGER_BASE_F ATTR_WOOD_COST -2				
			effect_amount SET_ATTRIBUTE VILLAGER_BASE_F ATTR_FOOD_COST 50
			effect_amount ENABLE_OBJECT VILLAGER_BASE_F ATTR_ENABLE 0		
		percent_chance 10		
			effect_amount SET_ATTRIBUTE SHEEP ATTR_TRAIN_LOCATION 826
			effect_amount SET_ATTRIBUTE SHEEP ATTR_TRAIN_BUTTON 1
			effect_amount MUL_ATTRIBUTE SHEEP ATTR_WOOD_COST -2				
			effect_amount MUL_ATTRIBUTE SHEEP ATTR_FOOD_COST -1			
			effect_amount SET_ATTRIBUTE SHEEP ATTR_FOOD_COST 50
			effect_amount MUL_ATTRIBUTE SHEEP ATTR_GOLD_COST -2			
			effect_amount ENABLE_OBJECT SHEEP ATTR_ENABLE 0		
		percent_chance 10		
			effect_amount SET_ATTRIBUTE HORSE ATTR_TRAIN_LOCATION 826
			effect_amount SET_ATTRIBUTE HORSE ATTR_TRAIN_BUTTON 1
			effect_amount MUL_ATTRIBUTE HORSE ATTR_WOOD_COST -2				
			effect_amount MUL_ATTRIBUTE HORSE ATTR_FOOD_COST -1			
			effect_amount SET_ATTRIBUTE HORSE ATTR_FOOD_COST 50
			effect_amount MUL_ATTRIBUTE HORSE ATTR_GOLD_COST -2			
			effect_amount ENABLE_OBJECT HORSE ATTR_ENABLE 0					
		percent_chance 10		
			effect_amount SET_ATTRIBUTE TRADE_CART_PACKED ATTR_TRAIN_LOCATION 826
			effect_amount SET_ATTRIBUTE TRADE_CART_PACKED ATTR_TRAIN_BUTTON 1
			effect_amount SET_ATTRIBUTE TRADE_CART_PACKED ATTR_WOOD_COST 50
			effect_amount SET_ATTRIBUTE TRADE_CART_PACKED ATTR_FOOD_COST 0
			effect_amount SET_ATTRIBUTE TRADE_CART_PACKED ATTR_GOLD_COST 25
			effect_amount ENABLE_OBJECT TRADE_CART_PACKED ATTR_ENABLE 0			
		percent_chance 20		
			effect_amount ADD_ATTRIBUTE ALTERNATIVE_BERSERK ATTR_CREATION_TIME 40
			effect_amount SET_ATTRIBUTE ALTERNATIVE_BERSERK ATTR_TRAIN_LOCATION 826
			effect_amount SET_ATTRIBUTE ALTERNATIVE_BERSERK ATTR_TRAIN_BUTTON 1
			effect_amount MUL_ATTRIBUTE ALTERNATIVE_BERSERK ATTR_GOLD_COST -1
			effect_amount MUL_ATTRIBUTE ALTERNATIVE_BERSERK ATTR_FOOD_COST -2			
			effect_amount MUL_ATTRIBUTE ALTERNATIVE_BERSERK ATTR_STONE_COST -2
			effect_amount MUL_ATTRIBUTE ALTERNATIVE_BERSERK ATTR_WOOD_COST -2			
			effect_amount SET_ATTRIBUTE ALTERNATIVE_BERSERK ATTR_GOLD_COST 75
			effect_amount ENABLE_OBJECT ALTERNATIVE_BERSERK ATTR_ENABLE 0	
		percent_chance 10		
			effect_amount ADD_ATTRIBUTE SCYTHIAN_WILD_WOMAN ATTR_CREATION_TIME 40
			effect_amount SET_ATTRIBUTE SCYTHIAN_WILD_WOMAN ATTR_TRAIN_LOCATION 826
			effect_amount SET_ATTRIBUTE SCYTHIAN_WILD_WOMAN ATTR_TRAIN_BUTTON 1
			effect_amount MUL_ATTRIBUTE SCYTHIAN_WILD_WOMAN ATTR_WOOD_COST -2	
			effect_amount MUL_ATTRIBUTE SCYTHIAN_WILD_WOMAN ATTR_FOOD_COST -1			
			effect_amount SET_ATTRIBUTE SCYTHIAN_WILD_WOMAN ATTR_FOOD_COST 50
			effect_amount MUL_ATTRIBUTE SCYTHIAN_WILD_WOMAN ATTR_GOLD_COST -1			
			effect_amount SET_ATTRIBUTE SCYTHIAN_WILD_WOMAN ATTR_GOLD_COST 50
			effect_amount ENABLE_OBJECT SCYTHIAN_WILD_WOMAN ATTR_ENABLE 0						
		percent_chance 10		
			effect_amount ADD_ATTRIBUTE SABOTEUR ATTR_CREATION_TIME 50
			effect_amount SET_ATTRIBUTE SABOTEUR ATTR_TRAIN_LOCATION 826
			effect_amount SET_ATTRIBUTE SABOTEUR ATTR_TRAIN_BUTTON 1
			effect_amount MUL_ATTRIBUTE SABOTEUR ATTR_WOOD_COST -2			
			effect_amount MUL_ATTRIBUTE SABOTEUR ATTR_FOOD_COST -1		
			effect_amount SET_ATTRIBUTE SABOTEUR ATTR_FOOD_COST 250
			effect_amount SET_ATTRIBUTE SABOTEUR ATTR_GOLD_COST 250
			effect_amount ENABLE_OBJECT SABOTEUR ATTR_ENABLE 0			
		percent_chance 10		
			effect_amount ADD_ATTRIBUTE FURIOUS_THE_MONKEY_BOY ATTR_CREATION_TIME 70
			effect_amount SET_ATTRIBUTE FURIOUS_THE_MONKEY_BOY ATTR_TRAIN_LOCATION 826
			effect_amount SET_ATTRIBUTE FURIOUS_THE_MONKEY_BOY ATTR_TRAIN_BUTTON 1
			effect_amount MUL_ATTRIBUTE FURIOUS_THE_MONKEY ATTR_WOOD_COST -2				
			effect_amount MUL_ATTRIBUTE FURIOUS_THE_MONKEY_BOY ATTR_FOOD_COST -1			
			effect_amount SET_ATTRIBUTE FURIOUS_THE_MONKEY_BOY ATTR_FOOD_COST 250
			effect_amount MUL_ATTRIBUTE FURIOUS_THE_MONKEY_BOY ATTR_GOLD_COST -1			
			effect_amount SET_ATTRIBUTE FURIOUS_THE_MONKEY_BOY ATTR_GOLD_COST 250
			effect_amount ENABLE_OBJECT FURIOUS_THE_MONKEY_BOY ATTR_ENABLE 0		
		end_random
		
	else
	
		start_random
		percent_chance 15		
			effect_amount SET_ATTRIBUTE VILLAGER_BASE_F ATTR_TRAIN_LOCATION 826
			effect_amount SET_ATTRIBUTE VILLAGER_BASE_F ATTR_TRAIN_BUTTON 1
			effect_amount MUL_ATTRIBUTE VILLAGER_BASE_F ATTR_WOOD_COST -2				
			effect_amount SET_ATTRIBUTE VILLAGER_BASE_F ATTR_FOOD_COST 50
			effect_amount ENABLE_OBJECT VILLAGER_BASE_F ATTR_ENABLE 0
		percent_chance 10		
			effect_amount SET_ATTRIBUTE SHEEP ATTR_TRAIN_LOCATION 826
			effect_amount SET_ATTRIBUTE SHEEP ATTR_TRAIN_BUTTON 1
			effect_amount MUL_ATTRIBUTE SHEEP ATTR_WOOD_COST -2				
			effect_amount MUL_ATTRIBUTE SHEEP ATTR_FOOD_COST -1			
			effect_amount SET_ATTRIBUTE SHEEP ATTR_FOOD_COST 50
			effect_amount MUL_ATTRIBUTE SHEEP ATTR_GOLD_COST -2			
			effect_amount ENABLE_OBJECT SHEEP ATTR_ENABLE 0		
		percent_chance 8		
			effect_amount SET_ATTRIBUTE HORSE ATTR_TRAIN_LOCATION 826
			effect_amount SET_ATTRIBUTE HORSE ATTR_TRAIN_BUTTON 1
			effect_amount MUL_ATTRIBUTE HORSE ATTR_WOOD_COST -2				
			effect_amount MUL_ATTRIBUTE HORSE ATTR_FOOD_COST -1			
			effect_amount SET_ATTRIBUTE HORSE ATTR_FOOD_COST 50
			effect_amount MUL_ATTRIBUTE HORSE ATTR_GOLD_COST -2			
			effect_amount ENABLE_OBJECT HORSE ATTR_ENABLE 0		
		percent_chance 8		
			effect_amount SET_ATTRIBUTE TRADE_CART_PACKED ATTR_TRAIN_LOCATION 826
			effect_amount SET_ATTRIBUTE TRADE_CART_PACKED ATTR_TRAIN_BUTTON 1
			effect_amount SET_ATTRIBUTE TRADE_CART_PACKED ATTR_WOOD_COST 50
			effect_amount SET_ATTRIBUTE TRADE_CART_PACKED ATTR_FOOD_COST 0
			effect_amount SET_ATTRIBUTE TRADE_CART_PACKED ATTR_GOLD_COST 25
			effect_amount ENABLE_OBJECT TRADE_CART_PACKED ATTR_ENABLE 0				
		percent_chance 7		
			effect_amount ADD_ATTRIBUTE MONK_RELIC ATTR_CREATION_TIME 20
			effect_amount SET_ATTRIBUTE MONK_RELIC ATTR_TRAIN_LOCATION 826
			effect_amount SET_ATTRIBUTE MONK_RELIC ATTR_TRAIN_BUTTON 1
			effect_amount MUL_ATTRIBUTE MONK_RELIC ATTR_WOOD_COST -2				
			effect_amount MUL_ATTRIBUTE MONK_RELIC ATTR_FOOD_COST -2			
			effect_amount MUL_ATTRIBUTE MONK_RELIC ATTR_GOLD_COST -1			
			effect_amount SET_ATTRIBUTE MONK_RELIC ATTR_GOLD_COST 250
			effect_amount ENABLE_OBJECT MONK_RELIC ATTR_ENABLE 0						
		percent_chance 10		
			effect_amount ADD_ATTRIBUTE AMAZON_WARRIOR ATTR_CREATION_TIME 30
			effect_amount SET_ATTRIBUTE AMAZON_WARRIOR ATTR_TRAIN_LOCATION 826
			effect_amount SET_ATTRIBUTE AMAZON_WARRIOR ATTR_TRAIN_BUTTON 1
			effect_amount SET_ATTRIBUTE AMAZON_WARRIOR ATTR_WOOD_COST 0
			effect_amount SET_ATTRIBUTE AMAZON_WARRIOR ATTR_FOOD_COST 0
			effect_amount SET_ATTRIBUTE AMAZON_WARRIOR ATTR_GOLD_COST 60
			effect_amount ENABLE_OBJECT AMAZON_WARRIOR ATTR_ENABLE 0	
		percent_chance 7		
			effect_amount ADD_ATTRIBUTE EASTERN_SWORDSMAN ATTR_CREATION_TIME 40
			effect_amount SET_ATTRIBUTE EASTERN_SWORDSMAN ATTR_TRAIN_LOCATION 826
			effect_amount SET_ATTRIBUTE EASTERN_SWORDSMAN ATTR_TRAIN_BUTTON 1
			effect_amount SET_ATTRIBUTE EASTERN_SWORDSMAN ATTR_WOOD_COST 0
			effect_amount SET_ATTRIBUTE EASTERN_SWORDSMAN ATTR_FOOD_COST 0
			effect_amount SET_ATTRIBUTE EASTERN_SWORDSMAN ATTR_GOLD_COST 75
			effect_amount ENABLE_OBJECT EASTERN_SWORDSMAN ATTR_ENABLE 0				
		percent_chance 7		
			effect_amount ADD_ATTRIBUTE SCYTHIAN_WILD_WOMAN ATTR_CREATION_TIME 40
			effect_amount SET_ATTRIBUTE SCYTHIAN_WILD_WOMAN ATTR_TRAIN_LOCATION 826
			effect_amount SET_ATTRIBUTE SCYTHIAN_WILD_WOMAN ATTR_TRAIN_BUTTON 1
			effect_amount MUL_ATTRIBUTE SCYTHIAN_WILD_WOMAN ATTR_WOOD_COST -2	
			effect_amount MUL_ATTRIBUTE SCYTHIAN_WILD_WOMAN ATTR_FOOD_COST -1			
			effect_amount SET_ATTRIBUTE SCYTHIAN_WILD_WOMAN ATTR_FOOD_COST 50
			effect_amount MUL_ATTRIBUTE SCYTHIAN_WILD_WOMAN ATTR_GOLD_COST -1			
			effect_amount SET_ATTRIBUTE SCYTHIAN_WILD_WOMAN ATTR_GOLD_COST 50
			effect_amount ENABLE_OBJECT SCYTHIAN_WILD_WOMAN ATTR_ENABLE 0	
		percent_chance 7		
			effect_amount ADD_ATTRIBUTE LEGIONARY ATTR_CREATION_TIME 40
			effect_amount SET_ATTRIBUTE LEGIONARY ATTR_TRAIN_LOCATION 826
			effect_amount SET_ATTRIBUTE LEGIONARY ATTR_TRAIN_BUTTON 1
			effect_amount SET_ATTRIBUTE LEGIONARY ATTR_WOOD_COST 0
			effect_amount SET_ATTRIBUTE LEGIONARY ATTR_FOOD_COST 0
			effect_amount SET_ATTRIBUTE LEGIONARY ATTR_GOLD_COST 100
			effect_amount ENABLE_OBJECT LEGIONARY ATTR_ENABLE 0
		percent_chance 7		
			effect_amount ADD_ATTRIBUTE SIEGE_TOWER ATTR_CREATION_TIME 50
			effect_amount SET_ATTRIBUTE SIEGE_TOWER ATTR_TRAIN_LOCATION 826
			effect_amount SET_ATTRIBUTE SIEGE_TOWER ATTR_TRAIN_BUTTON 1	
			effect_amount MUL_ATTRIBUTE SIEGE_TOWER ATTR_WOOD_COST -1
			effect_amount SET_ATTRIBUTE SIEGE_TOWER ATTR_WOOD_COST 220						
			effect_amount MUL_ATTRIBUTE SIEGE_TOWER ATTR_GOLD_COST -1			
			effect_amount SET_ATTRIBUTE SIEGE_TOWER ATTR_GOLD_COST 120
			effect_amount ENABLE_OBJECT SIEGE_TOWER ATTR_ENABLE 0			
		percent_chance 7		
			effect_amount ADD_ATTRIBUTE SABOTEUR ATTR_CREATION_TIME 50
			effect_amount SET_ATTRIBUTE SABOTEUR ATTR_TRAIN_LOCATION 826
			effect_amount SET_ATTRIBUTE SABOTEUR ATTR_TRAIN_BUTTON 1
			effect_amount MUL_ATTRIBUTE SABOTEUR ATTR_WOOD_COST -2			
			effect_amount MUL_ATTRIBUTE SABOTEUR ATTR_FOOD_COST -1		
			effect_amount SET_ATTRIBUTE SABOTEUR ATTR_FOOD_COST 250
			effect_amount SET_ATTRIBUTE SABOTEUR ATTR_GOLD_COST 250
			effect_amount ENABLE_OBJECT SABOTEUR ATTR_ENABLE 0					
		percent_chance 7		
			effect_amount ADD_ATTRIBUTE FURIOUS_THE_MONKEY_BOY ATTR_CREATION_TIME 70
			effect_amount SET_ATTRIBUTE FURIOUS_THE_MONKEY_BOY ATTR_TRAIN_LOCATION 826
			effect_amount SET_ATTRIBUTE FURIOUS_THE_MONKEY_BOY ATTR_TRAIN_BUTTON 1
			effect_amount MUL_ATTRIBUTE FURIOUS_THE_MONKEY ATTR_WOOD_COST -2				
			effect_amount MUL_ATTRIBUTE FURIOUS_THE_MONKEY_BOY ATTR_FOOD_COST -1			
			effect_amount SET_ATTRIBUTE FURIOUS_THE_MONKEY_BOY ATTR_FOOD_COST 250
			effect_amount MUL_ATTRIBUTE FURIOUS_THE_MONKEY_BOY ATTR_GOLD_COST -1			
			effect_amount SET_ATTRIBUTE FURIOUS_THE_MONKEY_BOY ATTR_GOLD_COST 250
			effect_amount ENABLE_OBJECT FURIOUS_THE_MONKEY_BOY ATTR_ENABLE 0		
		end_random	
	endif
endif


/* CAPTURE THE RELIC */
if CTRUP
	effect_amount ENABLE_TECH RI_MONASTERY ATTR_DISABLE 210
	effect_amount ADD_ATTRIBUTE MONASTERY ATTR_HITPOINTS 20000
	effect_amount ADD_ATTRIBUTE MONASTERY_F ATTR_HITPOINTS 20000
	effect_amount ADD_ATTRIBUTE MONASTERY_C ATTR_HITPOINTS 20000
	effect_amount ADD_ATTRIBUTE MONASTERY_I ATTR_HITPOINTS 20000
	effect_amount ADD_ATTRIBUTE MONASTERY ATTR_HERO_STATUS 4
	effect_amount ADD_ATTRIBUTE MONASTERY_F ATTR_HERO_STATUS 4
	effect_amount ADD_ATTRIBUTE MONASTERY_C ATTR_HERO_STATUS 4
	effect_amount ADD_ATTRIBUTE MONASTERY_I ATTR_HERO_STATUS 4
	effect_amount ADD_ATTRIBUTE MONASTERY ATTR_HERO_HEAL_TIME 1
	effect_amount ADD_ATTRIBUTE MONASTERY_F ATTR_HERO_HEAL_TIME 1
	effect_amount ADD_ATTRIBUTE MONASTERY_C ATTR_HERO_HEAL_TIME 1
	effect_amount ADD_ATTRIBUTE MONASTERY_I ATTR_HERO_HEAL_TIME 1
	effect_amount ADD_ATTRIBUTE MONASTERY ATTR_ARMOR 968
	effect_amount ADD_ATTRIBUTE MONASTERY_F ATTR_ARMOR 968
	effect_amount ADD_ATTRIBUTE MONASTERY_C ATTR_ARMOR 968
	effect_amount ADD_ATTRIBUTE MONASTERY_I ATTR_ARMOR 968
	effect_amount ADD_ATTRIBUTE MONASTERY ATTR_ARMOR 1224
	effect_amount ADD_ATTRIBUTE MONASTERY_F ATTR_ARMOR 1224
	effect_amount ADD_ATTRIBUTE MONASTERY_C ATTR_ARMOR 1224
	effect_amount ADD_ATTRIBUTE MONASTERY_I ATTR_ARMOR 1224
	effect_amount ADD_ATTRIBUTE MONASTERY ATTR_ARMOR 3071
	effect_amount ADD_ATTRIBUTE MONASTERY_F ATTR_ARMOR 3071
	effect_amount ADD_ATTRIBUTE MONASTERY_C ATTR_ARMOR 3071
	effect_amount ADD_ATTRIBUTE MONASTERY_I ATTR_ARMOR 3071
	effect_amount ADD_ATTRIBUTE MONASTERY ATTR_ARMOR 5576
	effect_amount ADD_ATTRIBUTE MONASTERY_F ATTR_ARMOR 5576
	effect_amount ADD_ATTRIBUTE MONASTERY_C ATTR_ARMOR 5576
	effect_amount ADD_ATTRIBUTE MONASTERY_I ATTR_ARMOR 5576
endif

/* DEATH MATCH */

if DEATHMATCH
	effect_amount ENABLE_TECH RI_SPIES ATTR_DISABLE 408
endif



/* ******************* CTR & KOTH middle platform *********************** */

if KOTHUP
	#define MIDDLEAREA 
elseif CTR
	#define MIDDLEAREA 
elseif CTRUP
	#define MIDDLEAREA 
endif



/* *******************STRUCTURED LANDS*********************** */

if MIDDLEAREA
	start_random
		 percent_chance 5	#define FORESTMAP /* Black Forest, Forest Nothing */
		 percent_chance 10	#define EMPTYMAP /* lots of roads/ shores, little buildable areea */
		 percent_chance 10	#define RIVERMAP /* rivers, tree wall, michi */
		 percent_chance 15	#define ARABIAMAP /* open map, mainly buildable terrain, small lands */
		 percent_chance 20	#define ISLANDMAP /* water map, separated islands */
		 percent_chance 20	#define MIDDLEMAP /* large middle area, surrounded by water or forest, in middle could be extra land */
		 percent_chance 20	#define MADNESSMAP /* like random everything v3 */
	end_random
else
	start_random
		 percent_chance 7	#define FORESTMAP /* Black Forest, Forest Nothing */
		 percent_chance 7	#define EMPTYMAP /* lots of roads/ shores, little buildable areea */
		 percent_chance 12	#define RIVERMAP /* rivers, tree wall, michi */
		 percent_chance 12	#define ARABIAMAP /* open map, mainly buildable terrain, small lands */
		 percent_chance 12	#define ISLANDMAP /* water map, separated islands */
		 percent_chance 12	#define MIDDLEMAP /* large middle area, surrounded by water or forest, in middle could be extra land */
		 percent_chance 43	#define MADNESSMAP /* like random everything v3 */
	end_random
endif

/* ***************STRUCTURISED TERRAINTYPE********************* */

start_random
	 percent_chance 8	#define BARRENSTYLE		/* dirt, desert, ice, rock */
	 percent_chance 8	#define ARCTICSTYLE		/* ice, snow */
	 percent_chance 8	#define BALTICSTYLE		/* pine, snowgrass, grass, leaves */
	 percent_chance 8	#define ASIANSTYLE		/* bamboo, grass, snowgrass, dirt */
	 percent_chance 8	#define TEMPERATESTYLE	/* grass, oakforest, leaves, shallows */
	 percent_chance 8	#define SAVANNAHSTYLE	/* savannah, baobab, acacia */
	 percent_chance 8	#define OASISSTYLE		/* palmdesert, dirt, desert */
	 percent_chance 8	#define SUBTROPICALSTYLE /* jungle, grass, beach, palmdesert */
	 percent_chance 8	#define TROPICALSTYLE	/* jungle, palmforest, forest, grass, mangrove */
	 percent_chance 8	#define MANGROVESTYLE	/* mangrove, jungle, shallows, beach */
	 percent_chance 20	#define RANDOMSTYLE		/* anything */
end_random



/* ------------------------------------------------------------------------------------------- */
/* *********************************** TERRAINS PER STYLE ********************************** */
/* ------------------------------------------------------------------------------------------- */


/* *********************buildable grounds*************************** */

/* SOIL1 - SOIL5 ordered from common to rare */


	if BARRENSTYLE
		if WK
		#const SOIL1 36 /* snowdirt */
		else
		#const SOIL1 33 /* snowdirt */
		endif
		
		#const SOIL2 6 /* dirt */
		#const SOIL3 14 /* desert */
		
		if HD
		#const SOIL4 42 /* dirt4 */
		#const SOIL5 44 /* moorland */
		else
		#const SOIL4 3 /* dirt3 */
		#const SOIL5 9 /* grass3 */ 
		endif

		
	elseif ARCTICSTYLE
		#const SOIL1 32	/* snow */
		#const SOIL2 34 /* snow grass */
		if WK
		#const SOIL3 36 /* snowdirt */
		else
		#const SOIL3 33 /* snowdirt */
		endif
		#const SOIL4 32	/* snow */
		#const SOIL5 34 /* snow grass */

		
	elseif BALTICSTYLE
		start_random 
			percent_chance 50
			#const SOIL1 0	/* grass */
			#const SOIL2 34 /* snow grass */
			percent_chance 50
			#const SOIL1 34 /* snow grass */
			#const SOIL2 0	/* grass */
		end_random
		#const SOIL3 12 /* grass2 */
		#const SOIL4 9 /* grass3 */
		#const SOIL5 0	/* grass */


	elseif ASIANSTYLE
		#const SOIL1 0	/* grass */
		#const SOIL2 34 /* snow grass */
		#const SOIL3 3 /* dirt3 */
		#const SOIL4 9 /* grass3 */
		#const SOIL5 6	/* dirt */

	
	elseif TEMPERATESTYLE
		#const SOIL1 0	/* grass */
		#const SOIL2 9 /* grass3 */
		#const SOIL3 3 /* dirt3 */
		#const SOIL4 12 /* grass2 */
		#const SOIL5 0	/* grass */	
		 
	elseif SAVANNAHSTYLE
		if HD
			#const SOIL1 41 /* savannah */
			#const SOIL2 6 /* dirt */			
			#const SOIL3 45 /* cracked desert */
			#const SOIL4 14 /* desert */	
			#const SOIL5 42 /* dirt4 */			
		elseif WK
			#const SOIL1 3 /* dirt3 */
			#const SOIL2 6 /* dirt */			
			#const SOIL3 38 /* cracked desert */
			#const SOIL4 14 /* desert */			
			#const SOIL5 9 /* grass3 */			
		else
			#const SOIL1 3 /* dirt3 */
			#const SOIL2 6 /* dirt */
			#const SOIL3 14 /* desert */
			#const SOIL4 6 /* dirt */
			#const SOIL5 9 /* grass3 */			
		endif
	

	elseif OASISSTYLE
			#const SOIL1 14 /* desert */
			#const SOIL2 6 /* dirt */
		
		if HD
			#const SOIL3 45 /* cracked earth */
			#const SOIL4 14 /* desert */
			#const SOIL5 45 /* cracked earth */			
		elseif WK
			#const SOIL3 38 /* cracked earth */
			#const SOIL4 14 /* desert */
			#const SOIL5 38 /* cracked earth */			
		else
			#const SOIL3 14 /* desert */
			#const SOIL4 6 /* dirt */
			#const SOIL5 3 /* dirt3 */			
		endif
			
	elseif SUBTROPICALSTYLE
		#const SOIL1 0	/* grass */
		#const SOIL2 3 /* dirt3 */
		#const SOIL3 6 /* dirt */
		#const SOIL4 9 /* grass3 */
		#const SOIL5 12 /* grass2 */		
		
	elseif TROPICALSTYLE
		if HD
			#const SOIL1 60 /* jungle grass */
			#const SOIL2 12 /* grass2 */
			#const SOIL3 62 /* Jungle leaves */
			#const SOIL4 44 /* moorland */
		else
			#const SOIL1 12 /* grass2 */
			#const SOIL2 0 /* grass */
			#const SOIL3 5 /* leaves */	
			#const SOIL4 9 /* grass3 */
		endif
		#cost SOIL5 0 /* grass */
 		
	elseif MANGROVESTYLE
		if HD
			#const SOIL1 54 /* mangrove shallow */
			#const SOIL2 60 /* jungle grass */
			#const SOIL3 62 /* Jungle leaves */
			#const SOIL4 44 /* moorland */
		elseif WK
			#const SOIL1 11 /* mangrove shallow */
			#const SOIL2 12 /* grass2 */
			#const SOIL3 0 /* grass */
			#const SOIL4 5 /* leaves */	
		else
			#const SOIL1 5 /* leaves */
			#const SOIL2 12 /* grass2 */
			#const SOIL3 0 /* grass */
			#const SOIL4 5 /* leaves */
		endif
		#const SOIL5 12 /* grass2 */
	endif
		
		
/* ********************restricted grounds**************************** */
/* FLOOR1 and FLOOR2, one is restricting resources, the other is restricting buildings aswell */
/* FLOOR3 and FLOOR4 are more rare */
/* SHORE1 and SHORE3 are for connections, SHORE2 is beach, better for patches */	
	
#const FLOOR0 40 /* grey rock,road */
	
	if BARRENSTYLE 
		if HD
			#const FLOOR1 43 /* desert road */
			#const FLOOR2 46 /* quicksand */
			#const FLOOR3 40 /* rock */			
			#const FLOOR4 38 /* roadsnow */
			#const SHORE1 51 /* beach2 */
		elseif WK
			#const FLOOR1 25 /* broken road */
			#const FLOOR2 40 /* rock */
			#const FLOOR3 35 /* ice */			
			#const FLOOR4 33 /* roadsnow */			
			#const SHORE1 2 /* beach */
		else
			#const FLOOR1 25 /* broken road */
			#const FLOOR2 24 /* road */
			#const FLOOR3 35 /* ice */
			#const FLOOR4 38 /* roadsnow */			
			#const SHORE1 2 /* beach */ 
		endif		
				
		#const SHORE2 37 /* icy beach */ 
		#const SHORE3 26 /* ice2, ships can sail trough */


	elseif ARCTICSTYLE
		#const FLOOR1 35 /* ice */
		#const FLOOR3 35 /* ice */
		if WK
		#const FLOOR2 33 /* roadsnow */		
		#const FLOOR4 33 /* roadsnow */
		else
		#const FLOOR2 38 /* roadsnow */		
		#const FLOOR4 38 /* roadsnow */
		endif
		#const SHORE1 26 /* ice2, ships can sail trough */
		#const SHORE2 37 /* icy beach */
		#const SHORE3 2 /* beach */  		
	
	elseif BALTICSTYLE
		if WK
		#const FLOOR1 33 /* roadsnow */
		#const FLOOR4 33 /* roadsnow */		
		else
		#const FLOOR1 38 /* roadsnow */
		#const FLOOR4 38 /* roadsnow */		
		endif
		#const FLOOR2 35 /* ice */
		#const FLOOR3 25 /* broken road */


		#const SHORE1 4 /* shallows */	
		#const SHORE2 37 /* icy beach */ 		
		#const SHORE3 26 /* ice2, ships can sail trough */
	
		
	elseif ASIANSTYLE
	
		
		#const FLOOR1 40 /* koth road */
		if HD
		#const FLOOR2 38 /* roadsnow */		
		#const SHORE1 59 /* new shallows */	
		#const SHORE2 53 /* white beach */
		#const SHORE3 54 /* mangrove shallows */
		elseif WK
		#const FLOOR2 33 /* roadsnow */
		#const SHORE1 4 /* shallows */	
		#const SHORE2 2 /* beach */ 		
		#const SHORE3 11 /* mangrove shallows */		
		else
		#const FLOOR2 38 /* roadsnow */
		#const SHORE1 4 /* shallows */	
		#const SHORE2 2 /* beach */ 		
		#const SHORE3 26 /* ice2, ships can sail trough */		
		endif
		#const FLOOR3 35 /* ice */
		#const FLOOR4 25 /* broken road */
		
		
	elseif TEMPERATESTYLE
		#const FLOOR1 24 /* road */
		#const FLOOR2 39 /* roadgrass */
		#const FLOOR3 25 /* broken road */
		#const FLOOR4 40 /* koth road */
		
		#const SHORE1 4 /* shallows */		
		#const SHORE2 2 /* beach */ 
		#const SHORE3 26 /* ice2, ships can sail trough */		
		
	elseif SAVANNAHSTYLE
	
		if HD
			#const FLOOR1 43 /* desert road */
			#const FLOOR2 46 /* quicksand */	
		
			#const SHORE1 59 /* new shallows */	
			#const SHORE2 53 /* white beach */
			#const SHORE3 54 /* mangrove shallows */
		elseif WK
			#const FLOOR1 25 /* broken road */
			#const FLOOR2 40 /* koth road */

			#const SHORE1 4 /* shallows */		
			#const SHORE2 2 /* beach */ 
			#const SHORE3 11 /* mangrove shallows */				
		else
			#const FLOOR1 25 /* broken road */
			#const FLOOR2 40 /* koth road */

			#const SHORE1 4 /* shallows */		
			#const SHORE2 2 /* beach */ 
			#const SHORE3 4 /* shallows */	
		endif
		
			#const FLOOR3 24 /* road */
			#const FLOOR4 25 /* broken road */
		
		
	elseif OASISSTYLE
		if HD
			#const FLOOR1 43 /* desert road */
			#const FLOOR2 46 /* quicksand */	
		
			#const SHORE1 59 /* new shallows */	
			#const SHORE2 53 /* white beach */
			#const SHORE3 54 /* mangrove shallows */
		elseif WK
			#const FLOOR1 25 /* broken road */
			#const FLOOR2 24 /* road */
			
			#const SHORE1 4 /* shallows */		
			#const SHORE2 2 /* beach */ 
			#const SHORE3 11 /* mangrove shallows */					
		else
			#const FLOOR1 25 /* broken road */
			#const FLOOR2 24 /* road */

			#const SHORE1 4 /* shallows */		
			#const SHORE2 2 /* beach */ 
			#const SHORE3 4 /* shallows */
		endif

		#const FLOOR3 25 /* broken road */
		#const FLOOR4 40 /* koth road */	
		
	elseif SUBTROPICALSTYLE
		
		#const FLOOR1 39 /* roadgrass */
		#const FLOOR2 25 /* broken road */
		#const FLOOR3 24 /* road */
		#const FLOOR4 40 /* koth road */		
		
		if HD
			#const SHORE1 59 /* new shallows */	
			#const SHORE2 51 /* white beach with vegetation */
			#const SHORE3 54 /* mangrove shallows */
		elseif WK
			#const SHORE1 4 /* shallows */		
			#const SHORE2 2 /* beach */ 
			#const SHORE3 11 /* mangrove shallows */	
		else
			#const SHORE1 4 /* shallows */		
			#const SHORE2 2 /* beach */ 
			#const SHORE3 4 /* shallows */	
		endif
			
	elseif TROPICALSTYLE
		
		if HD
			#const FLOOR1 61 /* jungle road */
			
			#const SHORE1 54 /* mangrove shallows */
			#const SHORE2 51 /* white beach with vegetation */
		elseif WK
			#const FLOOR1 39 /* roadgrass */
			
			#const SHORE1 11 /* mangrove shallows */	
			#const SHORE2 2 /* beach */ 	
		else
			#const FLOOR1 39 /* roadgrass */
			
			#const SHORE1 4 /* shallows */		
			#const SHORE2 2 /* beach */ 
		endif

		#const FLOOR2 40 /* koth road */	
		#const FLOOR3 39 /* roadgrass */
		#const FLOOR4 24 /* road */		
		
		#const SHORE3 4 /* shallows */		

		
	elseif MANGROVESTYLE
		if HD
			#const FLOOR1 54 /* mangrove shallows */	
			#const FLOOR2 61 /* jungle road */		
			#const SHORE1 54 /* mangrove shallows */
			#const SHORE2 51 /* white beach with vegetation */
		elseif WK
			#const FLOOR1 11 /* mangrove shallows */	
			#const FLOOR2 39 /* roadgrass */	
			#const SHORE1 11 /* mangrove shallows */	
			#const SHORE2 2 /* beach */
		else
			#const FLOOR1 39 /* roadgrass */
			#const FLOOR2 24 /* Road */				
			#const SHORE1 4 /* shallows */		
			#const SHORE2 2 /* beach */ 
		endif

		#const FLOOR3 39 /* roadgrass */			
		#const FLOOR4 12 /* grass2 */	
		#const SHORE3 4 /* shallows */		
	
	endif
	
/* ********************* Forest terrain ************************ */

/* WOODS1-WOODS4, with according FORESTPATH1-FORESTPATH4 */

	if BARRENSTYLE

		if HD
			#const WOODS1 50 /* acacia */
			#const FORESTPATH1 41 /* savannah */
			
			#const WOODS2 48 /* dragonforest */	
			#const FORESTPATH2 6 /* dirt */
			
			#const WOODS3 49 /* baobab */
			#const FORESTPATH3 42 /* dirt4 */			
			
			#const WOODS4 18 /* bamboo */
			#const FORESTPATH4 5 /* leaves */	
						
			
		elseif WK
			#const WOODS1 41 /* acacia */
			#const FORESTPATH1 6 /* dirt */				
			
			#const WOODS2 13 /* UPGRADED dragonforest */
			#const FORESTPATH2 6 /* dirt */			
			
			#const WOODS3 16 /* baobab */
			#const FORESTPATH3 6 /* dirt */			
	
			#const WOODS4 18 /* bamboo */
			#const FORESTPATH4 5 /* leaves */	
			
		else
			#const WOODS1 10 /* forest */
			#const FORESTPATH1 5 /* leaves */
			
			#const WOODS2 19 /* pine forest */
			#const FORESTPATH2 5 /* leaves */
			
			#const WOODS3 18 /* bamboo */
			#const FORESTPATH3 5 /* leaves */	
			
			#const WOODS4 20 /* oakforest */
			#const FORESTPATH4 5 /* leaves */				
		endif
		
	
	elseif ARCTICSTYLE
		#const WOODS1 21 /* snow forest */
		#const FORESTPATH1 34 /* snow grass */
		#const WOODS2 21 /* snow forest */
		#const FORESTPATH2 34 /* snow grass */		
		#const WOODS3 21 /* snow forest */
		#const FORESTPATH3 34 /* snow grass */
		#const WOODS4 21 /* snow forest */		
		#const FORESTPATH4 34 /* snow grass */

	elseif BALTICSTYLE
		#const WOODS1 21 /* snow forest */
		#const FORESTPATH1 34 /* snow grass */
		#const WOODS2 19 /* pine forest */
		#const FORESTPATH2 5 /* leaves */		
		#const WOODS3 10 /* forest */
		#const FORESTPATH3 5 /* leaves */
		#const WOODS4 21 /* snow forest */		
		#const FORESTPATH4 34 /* snow grass */	
		
	elseif ASIANSTYLE
		#const WOODS1 18 /* bamboo */
		#const FORESTPATH1 5 /* leaves */	
		if HD
			#const WOODS2 48 /* dragon forest */
			#const FORESTPATH2 6 /* dirt */
		elseif WK 
			#const WOODS2 13 /* UPGRADED dragonforest */
			#const FORESTPATH2 6 /* dirt */	
		else
			#const WOODS2 20 /* oakforest */
			#const FORESTPATH2 5 /* leaves */
		endif
		#const WOODS3 19 /* pineforest */
		#const FORESTPATH3 34 /* snowgrass */
		#const WOODS4 17 /* jungle */
		#const FORESTPATH4 5 /* leaves */
	
	elseif TEMPERATESTYLE	
		#const WOODS1 10 /* forest */
		#const FORESTPATH1 5 /* leaves */
		#const WOODS2 19 /* pine forest */
		#const FORESTPATH2 5 /* leaves */		
		#const WOODS3 10 /* forest */
		#const FORESTPATH3 5 /* leaves */
		#const WOODS4 19 /* pine forest */
		#const FORESTPATH4 5 /* leaves */	
		
	elseif SAVANNAHSTYLE
		if HD
			#const WOODS1 50 /* acacia */
			#const FORESTPATH1 41 /* savannah */
			#const WOODS2 49 /* baobab */
			#const FORESTPATH2 42 /* dirt4 */
			#const WOODS3 13 /* palm desert */
			#const FORESTPATH3 14 /* desert */
			#const WOODS4 10 /* forest */
			#const FORESTPATH4 5 /* leaves */
		
		elseif WK
			#const WOODS1 41 /* acacia */
			#const FORESTPATH1 6 /* dirt */
			#const WOODS2 16 /* baobab */
			#const FORESTPATH2 6 /* dirt */
			#const WOODS3 13 /* palm desert */
			#const FORESTPATH3 14 /* desert */
			#const WOODS4 10 /* forest */
			#const FORESTPATH4 5 /* leaves */
		else
			#const WOODS1 10 /* forest */
			#const FORESTPATH1 5 /* leaves */
			#const WOODS2 13 /* palm desert */
			#const FORESTPATH2 14 /* desert */
			#const WOODS3 20 /* oakforest */
			#const FORESTPATH3 5 /* leaves */
			#const WOODS4 13 /* palm desert */
			#const FORESTPATH4 14 /* desert */
		endif		

	
	elseif OASISSTYLE
		#const WOODS1 13 /* palm desert */
		#const FORESTPATH1 14 /* desert */
		#const WOODS2 13 /* palm desert */
		#const FORESTPATH2 14 /* desert */
		#const WOODS3 17 /* jungle */
		#const FORESTPATH3 5 /* leaves */
		#const WOODS4 10 /* forest */
		#const FORESTPATH4 5 /* leaves */
	
	elseif SUBTROPICALSTYLE
		#const WOODS1 17 /* jungle */
		#const FORESTPATH1 5 /* leaves */
		#const WOODS2 13 /* palm desert */
		#const FORESTPATH2 14 /* desert */
		#const WOODS3 10 /* forest */
		#const FORESTPATH3 5 /* leaves */
		#const WOODS4 17 /* jungle */
		#const FORESTPATH4 5 /* leaves */

	
	elseif TROPICALSTYLE
	
		if HD
			#const WOODS1 56 /* rain forest */
			#const FORESTPATH1 62 /* jungleleaves */
			#const WOODS4 55 /* mangrove forest */
			#const FORESTPATH4 54 /* mangrove shallows */
		elseif WK
			#const WOODS1 10 /* UPGRADED rain forest */
			#const FORESTPATH1 5 /* leaves */
			#const WOODS4 20 /* mangrove forest */
			#const FORESTPATH4 11 /* mangrove shallows */			
		else 
			#const WOODS1 17 /* jungle */
			#const FORESTPATH1 5 /* leaves */
			#const WOODS4 17 /* jungle */
			#const FORESTPATH4 5 /* leaves */
		endif
		#const WOODS2 17 /* jungle */
		#const FORESTPATH2 5 /* leaves */
		#const WOODS3 10 /* forest */
		#const FORESTPATH3 5 /* leaves */
	
	elseif MANGROVESTYLE
	
		if HD
			#const WOODS1 55 /* mangrove forest */
			#const FORESTPATH1 54 /* mangrove shallows */
			#const WOODS2 56 /* rain forest */
			#const FORESTPATH2 62 /* jungleleaves */
			#const WOODS3 55 /* mangrove forest */
			#const FORESTPATH3 54 /* mangrove shallows */			
		elseif WK
			#const WOODS1 20 /* mangrove forest */
			#const FORESTPATH1 11 /* mangrove shallows */			
			#const WOODS2 10 /* UPGRADED rain forest */
			#const FORESTPATH2 5 /* leaves */		
			#const WOODS3 20 /* mangrove forest */
			#const FORESTPATH3 11 /* mangrove shallows */				
		else 
			#const WOODS1 20 /* forest/mangrove */
			#const FORESTPATH1 4 /* shallows */
			#const WOODS2 17 /* jungle */
			#const FORESTPATH2 5 /* leaves */
			#const WOODS3 10 /* forest */
			#const FORESTPATH3 5 /* leaves */			
		endif
			#const WOODS4 17 /* jungle */
			#const FORESTPATH4 5 /* leaves */		
		
	elseif RANDOMSTYLE

	/* soil1 */
		if HD
		start_random
				percent_chance 7
				#const SOIL1 0 /* grass */
				percent_chance 7				
				#const SOIL1 3 /* dirt3 */
				percent_chance 7				
				#const SOIL1 6 /* dirt */
				percent_chance 7
				#const SOIL1 9 /* grass3 */
				percent_chance 6				
				#const SOIL1 11 /* dirt2 */
				percent_chance 6
				#const SOIL1 12 /* grass2 */
				percent_chance 7
				#const SOIL1 14 /* desert */
				percent_chance 6
				#const SOIL1 32 /* snow */
				percent_chance 6
				#const SOIL1 33 /* dirt snow */
				percent_chance 6
				#const SOIL1 34 /* grass snow */
				percent_chance 7
				#const SOIL1 41 /* savannah */
				percent_chance 7
				#const SOIL1 42 /* dirt4 */
				percent_chance 7				
				#const SOIL1 44 /* moorland */
				percent_chance 7
				#const SOIL1 45 /* cracked desert */
				percent_chance 7
				#const SOIL1 60 /* junglegrass */
			end_random
		elseif WK
			start_random
				percent_chance 10
				#const SOIL1 0 /* grass */
				percent_chance 10				
				#const SOIL1 3 /* dirt3 */
				percent_chance 10				
				#const SOIL1 6 /* dirt */
				percent_chance 10
				#const SOIL1 9 /* grass3 */
				percent_chance 10				
				#const SOIL1 11 /* mangrove shallows */				
				percent_chance 5				
				#const SOIL1 27 /* dirt2 */
				percent_chance 7
				#const SOIL1 12 /* grass2 */
				percent_chance 10
				#const SOIL1 14 /* desert */
				percent_chance 7
				#const SOIL1 32 /* snow */
				percent_chance 7
				#const SOIL1 36 /* dirt snow */
				percent_chance 7
				#const SOIL1 38 /* cracked earth */				
				percent_chance 7
				#const SOIL1 34 /* grass snow */
			end_random
		else
			start_random
				percent_chance 10
				#const SOIL1 0 /* grass */
				percent_chance 10				
				#const SOIL1 3 /* dirt3 */
				percent_chance 10				
				#const SOIL1 6 /* dirt */
				percent_chance 10
				#const SOIL1 9 /* grass3 */
				percent_chance 10				
				#const SOIL1 11 /* dirt2 */
				percent_chance 10
				#const SOIL1 12 /* grass2 */
				percent_chance 10
				#const SOIL1 14 /* desert */
				percent_chance 10
				#const SOIL1 32 /* snow */
				percent_chance 10
				#const SOIL1 33 /* dirt snow */
				percent_chance 10
				#const SOIL1 34 /* grass snow */
			end_random
		endif		
	/* soil2 */
		if HD
			start_random
				percent_chance 7
				#const SOIL2 0 /* grass */
				percent_chance 7				
				#const SOIL2 3 /* dirt3 */
				percent_chance 7				
				#const SOIL2 6 /* dirt */
				percent_chance 7
				#const SOIL2 9 /* grass3 */
				percent_chance 6				
				#const SOIL2 11 /* dirt2 */
				percent_chance 6
				#const SOIL2 12 /* grass2 */
				percent_chance 7
				#const SOIL2 14 /* desert */
				percent_chance 6
				#const SOIL2 32 /* snow */
				percent_chance 6
				#const SOIL2 33 /* dirt snow */
				percent_chance 6
				#const SOIL2 34 /* grass snow */
				percent_chance 7
				#const SOIL2 41 /* savannah */
				percent_chance 7
				#const SOIL2 42 /* dirt4 */
				percent_chance 7				
				#const SOIL2 44 /* moorland */
				percent_chance 7
				#const SOIL2 45 /* cracked desert */
				percent_chance 7
				#const SOIL2 60 /* junglegrass */
			end_random
		elseif WK
			start_random
				percent_chance 10
				#const SOIL2 0 /* grass */
				percent_chance 10				
				#const SOIL2 3 /* dirt3 */
				percent_chance 10				
				#const SOIL2 6 /* dirt */
				percent_chance 10
				#const SOIL2 9 /* grass3 */
				percent_chance 10				
				#const SOIL2 11 /* mangrove shallows */				
				percent_chance 5				
				#const SOIL2 27 /* dirt2 */
				percent_chance 7
				#const SOIL2 12 /* grass2 */
				percent_chance 10
				#const SOIL2 14 /* desert */
				percent_chance 7
				#const SOIL2 32 /* snow */
				percent_chance 7
				#const SOIL2 36 /* dirt snow */
				percent_chance 7
				#const SOIL2 38 /* cracked earth */				
				percent_chance 7
				#const SOIL2 34 /* grass snow */
			end_random	
		else
			start_random
				percent_chance 10
				#const SOIL2 0 /* grass */
				percent_chance 10				
				#const SOIL2 3 /* dirt3 */
				percent_chance 10				
				#const SOIL2 6 /* dirt */
				percent_chance 10
				#const SOIL2 9 /* grass3 */
				percent_chance 10				
				#const SOIL2 11 /* dirt2 */
				percent_chance 10
				#const SOIL2 12 /* grass2 */
				percent_chance 10
				#const SOIL2 14 /* desert */
				percent_chance 10
				#const SOIL2 32 /* snow */
				percent_chance 10
				#const SOIL2 33 /* dirt snow */
				percent_chance 10
				#const SOIL2 34 /* grass snow */
			end_random
		endif
	/* soil3 */
		if HD
			start_random
				percent_chance 7
				#const SOIL3 0 /* grass */
				percent_chance 7				
				#const SOIL3 3 /* dirt3 */
				percent_chance 7				
				#const SOIL3 6 /* dirt */
				percent_chance 7
				#const SOIL3 9 /* grass3 */
				percent_chance 6				
				#const SOIL3 11 /* dirt2 */
				percent_chance 6
				#const SOIL3 12 /* grass2 */
				percent_chance 7
				#const SOIL3 14 /* desert */
				percent_chance 6
				#const SOIL3 32 /* snow */
				percent_chance 6
				#const SOIL3 33 /* dirt snow */
				percent_chance 6
				#const SOIL3 34 /* grass snow */
				percent_chance 7
				#const SOIL3 41 /* savannah */
				percent_chance 7
				#const SOIL3 42 /* dirt4 */
				percent_chance 7				
				#const SOIL3 44 /* moorland */
				percent_chance 7
				#const SOIL3 45 /* cracked desert */
				percent_chance 7
				#const SOIL3 60 /* junglegrass */
			end_random
		elseif WK
			start_random
				percent_chance 10
				#const SOIL3 0 /* grass */
				percent_chance 10				
				#const SOIL3 3 /* dirt3 */
				percent_chance 10				
				#const SOIL3 6 /* dirt */
				percent_chance 10
				#const SOIL3 9 /* grass3 */
				percent_chance 10				
				#const SOIL3 11 /* mangrove shallows */				
				percent_chance 5				
				#const SOIL3 27 /* dirt2 */
				percent_chance 7
				#const SOIL3 12 /* grass2 */
				percent_chance 10
				#const SOIL3 14 /* desert */
				percent_chance 7
				#const SOIL3 32 /* snow */
				percent_chance 7
				#const SOIL3 36 /* dirt snow */
				percent_chance 7
				#const SOIL3 38 /* cracked earth */				
				percent_chance 7
				#const SOIL3 34 /* grass snow */
			end_random			
		else
			start_random
				percent_chance 10
				#const SOIL3 0 /* grass */
				percent_chance 10				
				#const SOIL3 3 /* dirt3 */
				percent_chance 10				
				#const SOIL3 6 /* dirt */
				percent_chance 10
				#const SOIL3 9 /* grass3 */
				percent_chance 10				
				#const SOIL3 11 /* dirt2 */
				percent_chance 10
				#const SOIL3 12 /* grass2 */
				percent_chance 10
				#const SOIL3 14 /* desert */
				percent_chance 10
				#const SOIL3 32 /* snow */
				percent_chance 10
				#const SOIL3 33 /* dirt snow */
				percent_chance 10
				#const SOIL3 34 /* grass snow */
			end_random
		endif
	/* soil4 */
		if HD
			start_random
				percent_chance 7
				#const SOIL4 0 /* grass */
				percent_chance 7				
				#const SOIL4 3 /* dirt3 */
				percent_chance 7				
				#const SOIL4 6 /* dirt */
				percent_chance 7
				#const SOIL4 9 /* grass3 */
				percent_chance 6				
				#const SOIL4 11 /* dirt2 */
				percent_chance 6
				#const SOIL4 12 /* grass2 */
				percent_chance 7
				#const SOIL4 14 /* desert */
				percent_chance 6
				#const SOIL4 32 /* snow */
				percent_chance 6
				#const SOIL4 33 /* dirt snow */
				percent_chance 6
				#const SOIL4 34 /* grass snow */
				percent_chance 7
				#const SOIL4 41 /* savannah */
				percent_chance 7
				#const SOIL4 42 /* dirt4 */
				percent_chance 7				
				#const SOIL4 44 /* moorland */
				percent_chance 7
				#const SOIL4 45 /* cracked desert */
				percent_chance 7
				#const SOIL4 60 /* junglegrass */
			end_random
		elseif WK
			start_random
				percent_chance 10
				#const SOIL4 0 /* grass */
				percent_chance 10				
				#const SOIL4 3 /* dirt3 */
				percent_chance 10				
				#const SOIL4 6 /* dirt */
				percent_chance 10
				#const SOIL4 9 /* grass3 */
				percent_chance 10				
				#const SOIL4 11 /* mangrove shallows */				
				percent_chance 5				
				#const SOIL4 27 /* dirt2 */
				percent_chance 7
				#const SOIL4 12 /* grass2 */
				percent_chance 10
				#const SOIL4 14 /* desert */
				percent_chance 7
				#const SOIL4 32 /* snow */
				percent_chance 7
				#const SOIL4 36 /* dirt snow */
				percent_chance 7
				#const SOIL4 38 /* cracked earth */				
				percent_chance 7
				#const SOIL4 34 /* grass snow */
			end_random		
		else
			start_random
				percent_chance 10
				#const SOIL4 0 /* grass */
				percent_chance 10				
				#const SOIL4 3 /* dirt3 */
				percent_chance 10				
				#const SOIL4 6 /* dirt */
				percent_chance 10
				#const SOIL4 9 /* grass3 */
				percent_chance 10				
				#const SOIL4 11 /* dirt2 */
				percent_chance 10
				#const SOIL4 12 /* grass2 */
				percent_chance 10
				#const SOIL4 14 /* desert */
				percent_chance 10
				#const SOIL4 32 /* snow */
				percent_chance 10
				#const SOIL4 33 /* dirt snow */
				percent_chance 10
				#const SOIL4 34 /* grass snow */
			end_random
		endif
	/* soil5 */
		if HD
			start_random
				percent_chance 7
				#const SOIL5 0 /* grass */
				percent_chance 7				
				#const SOIL5 3 /* dirt3 */
				percent_chance 7				
				#const SOIL5 6 /* dirt */
				percent_chance 7
				#const SOIL5 9 /* grass3 */
				percent_chance 6				
				#const SOIL5 11 /* dirt2 */
				percent_chance 6
				#const SOIL5 12 /* grass2 */
				percent_chance 7
				#const SOIL5 14 /* desert */
				percent_chance 6
				#const SOIL5 32 /* snow */
				percent_chance 6
				#const SOIL5 33 /* dirt snow */
				percent_chance 6
				#const SOIL5 34 /* grass snow */
				percent_chance 7
				#const SOIL5 41 /* savannah */
				percent_chance 7
				#const SOIL5 42 /* dirt4 */
				percent_chance 7				
				#const SOIL5 44 /* moorland */
				percent_chance 7
				#const SOIL5 45 /* cracked desert */
				percent_chance 7
				#const SOIL5 60 /* junglegrass */
			end_random
		elseif WK
			start_random
				percent_chance 10
				#const SOIL5 0 /* grass */
				percent_chance 10				
				#const SOIL5 3 /* dirt3 */
				percent_chance 10				
				#const SOIL5 6 /* dirt */
				percent_chance 10
				#const SOIL5 9 /* grass3 */
				percent_chance 10				
				#const SOIL5 11 /* mangrove shallows */				
				percent_chance 5				
				#const SOIL5 27 /* dirt2 */
				percent_chance 7
				#const SOIL5 12 /* grass2 */
				percent_chance 10
				#const SOIL5 14 /* desert */
				percent_chance 7
				#const SOIL5 32 /* snow */
				percent_chance 7
				#const SOIL5 36 /* dirt snow */
				percent_chance 7
				#const SOIL5 38 /* cracked earth */				
				percent_chance 7
				#const SOIL5 34 /* grass snow */
			end_random			
		else
			start_random
				percent_chance 10
				#const SOIL5 0 /* grass */
				percent_chance 10				
				#const SOIL5 3 /* dirt3 */
				percent_chance 10				
				#const SOIL5 6 /* dirt */
				percent_chance 10
				#const SOIL5 9 /* grass3 */
				percent_chance 10				
				#const SOIL5 11 /* dirt2 */
				percent_chance 10
				#const SOIL5 12 /* grass2 */
				percent_chance 10
				#const SOIL5 14 /* desert */
				percent_chance 10
				#const SOIL5 32 /* snow */
				percent_chance 10
				#const SOIL5 33 /* dirt snow */
				percent_chance 10
				#const SOIL5 34 /* grass snow */
			end_random
		endif			

		
	/* floor1 */
		if HD
			start_random
			percent_chance 11
			#const FLOOR1 24 /* road */
			percent_chance 11
			#const FLOOR1 25 /* road ruined */
			percent_chance 10
			#const FLOOR1 35 /* ice */
			percent_chance 11
			#const FLOOR1 38 /* road snow */			
			percent_chance 11
			#const FLOOR1 39 /* road grass */			
			percent_chance 10
			#const FLOOR1 40 /* rocks */		
			percent_chance 13
			#const FLOOR1 43 /* dryroad */	
			percent_chance 10
			#const FLOOR1 46 /* quicksand */
			percent_chance 13
			#const FLOOR1 61 /* jungleroad */
			end_random
		elseif WK
			start_random
			percent_chance 20
			#const FLOOR1 24 /* road */
			percent_chance 20
			#const FLOOR1 25 /* road ruined */
			percent_chance 10
			#const FLOOR1 35 /* ice */
			percent_chance 20
			#const FLOOR1 33 /* road snow */			
			percent_chance 20
			#const FLOOR1 39 /* road grass */			
			percent_chance 10
			#const FLOOR1 40 /* rocks */		
			end_random	
		else
			start_random
			percent_chance 20
			#const FLOOR1 24 /* road */
			percent_chance 20
			#const FLOOR1 25 /* road ruined */
			percent_chance 10
			#const FLOOR1 35 /* ice */
			percent_chance 20
			#const FLOOR1 38 /* road snow */			
			percent_chance 20
			#const FLOOR1 39 /* road grass */			
			percent_chance 10
			#const FLOOR1 40 /* rocks */		
			end_random		
		endif		
	/* floor2 */
		if HD
			start_random
			percent_chance 11
			#const FLOOR2 24 /* road */
			percent_chance 11
			#const FLOOR2 25 /* road ruined */
			percent_chance 10
			#const FLOOR2 35 /* ice */
			percent_chance 11
			#const FLOOR2 38 /* road snow */			
			percent_chance 11
			#const FLOOR2 39 /* road grass */			
			percent_chance 10
			#const FLOOR2 40 /* rocks */		
			percent_chance 13
			#const FLOOR2 43 /* dryroad */	
			percent_chance 10
			#const FLOOR2 46 /* quicksand */
			percent_chance 13
			#const FLOOR2 61 /* jungleroad */
			end_random
		elseif WK
			start_random
			percent_chance 20
			#const FLOOR2 24 /* road */
			percent_chance 20
			#const FLOOR2 25 /* road ruined */
			percent_chance 10
			#const FLOOR2 35 /* ice */
			percent_chance 20
			#const FLOOR2 33 /* road snow */			
			percent_chance 20
			#const FLOOR2 39 /* road grass */			
			percent_chance 10
			#const FLOOR2 40 /* rocks */		
			end_random				
		else
			start_random
			percent_chance 20
			#const FLOOR2 24 /* road */
			percent_chance 20
			#const FLOOR2 25 /* road ruined */
			percent_chance 10
			#const FLOOR2 35 /* ice */
			percent_chance 20
			#const FLOOR2 38 /* road snow */			
			percent_chance 20
			#const FLOOR2 39 /* road grass */			
			percent_chance 10
			#const FLOOR2 40 /* rocks */		
			end_random		
		endif	
	/* floor3 */
		if HD
			start_random
			percent_chance 11
			#const FLOOR3 24 /* road */
			percent_chance 11
			#const FLOOR3 25 /* road ruined */
			percent_chance 10
			#const FLOOR3 35 /* ice */
			percent_chance 11
			#const FLOOR3 38 /* road snow */			
			percent_chance 11
			#const FLOOR3 39 /* road grass */			
			percent_chance 10
			#const FLOOR3 40 /* rocks */		
			percent_chance 13
			#const FLOOR3 43 /* dryroad */	
			percent_chance 10
			#const FLOOR3 46 /* quicksand */
			percent_chance 13
			#const FLOOR3 61 /* jungleroad */
			end_random
		elseif WK
			start_random
			percent_chance 20
			#const FLOOR3 24 /* road */
			percent_chance 20
			#const FLOOR3 25 /* road ruined */
			percent_chance 10
			#const FLOOR3 35 /* ice */
			percent_chance 20
			#const FLOOR3 33 /* road snow */			
			percent_chance 20
			#const FLOOR3 39 /* road grass */			
			percent_chance 10
			#const FLOOR3 40 /* rocks */		
			end_random				
		else
			start_random
			percent_chance 20
			#const FLOOR3 24 /* road */
			percent_chance 20
			#const FLOOR3 25 /* road ruined */
			percent_chance 10
			#const FLOOR3 35 /* ice */
			percent_chance 20
			#const FLOOR3 38 /* road snow */			
			percent_chance 20
			#const FLOOR3 39 /* road grass */			
			percent_chance 10
			#const FLOOR3 40 /* rocks */		
			end_random		
		endif	
	/* floor4 */
		if HD
			start_random
			percent_chance 11
			#const FLOOR4 24 /* road */
			percent_chance 11
			#const FLOOR4 25 /* road ruined */
			percent_chance 10
			#const FLOOR4 35 /* ice */
			percent_chance 11
			#const FLOOR4 38 /* road snow */			
			percent_chance 11
			#const FLOOR4 39 /* road grass */			
			percent_chance 10
			#const FLOOR4 40 /* rocks */		
			percent_chance 13
			#const FLOOR4 43 /* dryroad */	
			percent_chance 10
			#const FLOOR4 46 /* quicksand */
			percent_chance 13
			#const FLOOR4 61 /* jungleroad */
			end_random
		elseif WK
			start_random
			percent_chance 20
			#const FLOOR4 24 /* road */
			percent_chance 20
			#const FLOOR4 25 /* road ruined */
			percent_chance 10
			#const FLOOR4 35 /* ice */
			percent_chance 20
			#const FLOOR4 33 /* road snow */			
			percent_chance 20
			#const FLOOR4 39 /* road grass */			
			percent_chance 10
			#const FLOOR4 40 /* rocks */		
			end_random				
		else
			start_random
			percent_chance 20
			#const FLOOR4 24 /* road */
			percent_chance 20
			#const FLOOR4 25 /* road ruined */
			percent_chance 10
			#const FLOOR4 35 /* ice */
			percent_chance 20
			#const FLOOR4 38 /* road snow */			
			percent_chance 20
			#const FLOOR4 39 /* road grass */			
			percent_chance 10
			#const FLOOR4 40 /* rocks */		
			end_random		
		endif		
		
	/* shore1 */
		if HD
			start_random
			percent_chance 12
			#const SHORE1 2 /* beach */
			percent_chance 16			
			#const SHORE1 4 /* shallow */
			percent_chance 12
			#const SHORE1 37 /* icy beach */	
			percent_chance 12
			#const SHORE1 51 /* white beach */			
			percent_chance 12
			#const SHORE1 52 /* white beach */
			percent_chance 12
			#const SHORE1 53 /* white beach */
			percent_chance 12
			#const SHORE1 54 /* mangrove shallows */			
			percent_chance 12
			#const SHORE1 59 /* new shallows */	
			end_random
		elseif WK
			start_random
			percent_chance 35
			#const SHORE1 2 /* beach */
			percent_chance 15			
			#const SHORE1 11 /* mangrove shallow */			
			percent_chance 35			
			#const SHORE1 4 /* shallow */
			percent_chance 15
			#const SHORE1 37 /* icy beach */	
			end_random			
		else
			start_random
			percent_chance 40
			#const SHORE1 2 /* beach */
			percent_chance 35			
			#const SHORE1 4 /* shallow */
			percent_chance 25
			#const SHORE1 37 /* icy beach */	
			end_random
		endif
	/* shore2 */
		if HD
			start_random
			percent_chance 12
			#const SHORE2 2 /* beach */
			percent_chance 12			
			#const SHORE2 4 /* shallow */
			percent_chance 12
			#const SHORE2 37 /* icy beach */	
			percent_chance 12
			#const SHORE2 51 /* white beach */			
			percent_chance 12
			#const SHORE2 52 /* white beach */
			percent_chance 12
			#const SHORE2 53 /* white beach */
			percent_chance 16
			#const SHORE2 54 /* mangrove shallows */			
			percent_chance 12
			#const SHORE2 59 /* new shallows */	
			end_random
		elseif WK
			start_random
			percent_chance 35
			#const SHORE2 2 /* beach */
			percent_chance 15			
			#const SHORE2 11 /* mangrove shallow */			
			percent_chance 35			
			#const SHORE2 4 /* shallow */
			percent_chance 15
			#const SHORE2 37 /* icy beach */	
			end_random					
		else
			start_random
			percent_chance 40
			#const SHORE2 2 /* beach */
			percent_chance 35			
			#const SHORE2 4 /* shallow */
			percent_chance 25
			#const SHORE2 37 /* icy beach */	
			end_random
		endif
	/* shore3 */
		if HD
			start_random
			percent_chance 12
			#const SHORE3 2 /* beach */
			percent_chance 12			
			#const SHORE3 4 /* shallow */
			percent_chance 12
			#const SHORE3 37 /* icy beach */	
			percent_chance 12
			#const SHORE3 51 /* white beach */			
			percent_chance 12
			#const SHORE3 52 /* white beach */
			percent_chance 12
			#const SHORE3 53 /* white beach */
			percent_chance 16
			#const SHORE3 54 /* mangrove shallows */			
			percent_chance 12
			#const SHORE3 59 /* new shallows */	
			end_random
		elseif WK
			start_random
			percent_chance 35
			#const SHORE3 2 /* beach */
			percent_chance 15			
			#const SHORE3 11 /* mangrove shallow */			
			percent_chance 35			
			#const SHORE3 4 /* shallow */
			percent_chance 15
			#const SHORE3 37 /* icy beach */	
			end_random					
		else
			start_random
			percent_chance 40
			#const SHORE3 2 /* beach */
			percent_chance 35			
			#const SHORE3 4 /* shallow */
			percent_chance 25
			#const SHORE3 37 /* icy beach */	
			end_random			
		endif

			
	/* woods1 */
		if HD
			start_random
				percent_chance 8
				#const WOODS1 10 /* forest */
				percent_chance 8
				#const WOODS1 13 /* palm forest */
				percent_chance 8			
				#const WOODS1 17 /* jungle */
				percent_chance 8
				#const WOODS1 18 /* bamboo forest */
				percent_chance 8
				#const WOODS1 19 /* pine forest */
				percent_chance 7
				#const WOODS1 20 /* oak forest */
				percent_chance 8
				#const WOODS1 21 /* snow forest */
				percent_chance 9
				#const WOODS1 48 /* dragon forest */
				percent_chance 9
				#const WOODS1 49 /* baobab forest */
				percent_chance 9
				#const WOODS1 50 /* acacia forest */
				percent_chance 9
				#const WOODS1 55 /* mangrove forest */
				percent_chance 9
				#const WOODS1 56 /* rain forest */
			end_random
		elseif WK
			start_random
				percent_chance 10
				#const WOODS1 10 /* forest */
				percent_chance 10
				#const WOODS1 13 /* palm forest */
				percent_chance 12	
				#const WOODS1 16 /* baobab */	
				percent_chance 10					
				#const WOODS1 17 /* jungle */
				percent_chance 10
				#const WOODS1 18 /* bamboo forest */
				percent_chance 10
				#const WOODS1 19 /* pine forest */
				percent_chance 15
				#const WOODS1 20 /* mangrove forest */
				percent_chance 10
				#const WOODS1 21 /* snow forest */
				percent_chance 13				
				#const WOODS1 41 /* acacia */
			end_random
		else
			start_random
				percent_chance 15
				#const WOODS1 10 /* forest */
				percent_chance 15
				#const WOODS1 13 /* palm forest */
				percent_chance 15			
				#const WOODS1 17 /* jungle */
				percent_chance 15
				#const WOODS1 18 /* bamboo forest */
				percent_chance 15
				#const WOODS1 19 /* pine forest */
				percent_chance 10
				#const WOODS1 20 /* oak forest */
				percent_chance 15
				#const WOODS1 21 /* snow forest */
			end_random
		endif
	/* woods2 */
		if HD
			start_random
				percent_chance 8
				#const WOODS2 10 /* forest */
				percent_chance 8
				#const WOODS2 13 /* palm forest */
				percent_chance 8			
				#const WOODS2 17 /* jungle */
				percent_chance 8
				#const WOODS2 18 /* bamboo forest */
				percent_chance 8
				#const WOODS2 19 /* pine forest */
				percent_chance 7
				#const WOODS2 20 /* oak forest */
				percent_chance 8
				#const WOODS2 21 /* snow forest */
				percent_chance 9
				#const WOODS2 48 /* dragon forest */
				percent_chance 9
				#const WOODS2 49 /* baobab forest */
				percent_chance 9
				#const WOODS2 50 /* acacia forest */
				percent_chance 9
				#const WOODS2 55 /* mangrove forest */
				percent_chance 9
				#const WOODS2 56 /* rain forest */
			end_random
		elseif WK
			start_random
				percent_chance 10
				#const WOODS2 10 /* forest */
				percent_chance 10
				#const WOODS2 13 /* palm forest */
				percent_chance 12	
				#const WOODS2 16 /* baobab */	
				percent_chance 10					
				#const WOODS2 17 /* jungle */
				percent_chance 10
				#const WOODS2 18 /* bamboo forest */
				percent_chance 10
				#const WOODS2 19 /* pine forest */
				percent_chance 15
				#const WOODS2 20 /* mangrove forest */
				percent_chance 10
				#const WOODS2 21 /* snow forest */
				percent_chance 13				
				#const WOODS2 41 /* acacia */	
			end_random
		else
			start_random
				percent_chance 15
				#const WOODS2 10 /* forest */
				percent_chance 15
				#const WOODS2 13 /* palm forest */
				percent_chance 15			
				#const WOODS2 17 /* jungle */
				percent_chance 15
				#const WOODS2 18 /* bamboo forest */
				percent_chance 15
				#const WOODS2 19 /* pine forest */
				percent_chance 10
				#const WOODS2 20 /* oak forest */
				percent_chance 15
				#const WOODS2 21 /* snow forest */
			end_random
		endif
	/* woods3 */
		if HD
			start_random
				percent_chance 8
				#const WOODS3 10 /* forest */
				percent_chance 8
				#const WOODS3 13 /* palm forest */
				percent_chance 8			
				#const WOODS3 17 /* jungle */
				percent_chance 8
				#const WOODS3 18 /* bamboo forest */
				percent_chance 8
				#const WOODS3 19 /* pine forest */
				percent_chance 7
				#const WOODS3 20 /* oak forest */
				percent_chance 8
				#const WOODS3 21 /* snow forest */
				percent_chance 9
				#const WOODS3 48 /* dragon forest */
				percent_chance 9
				#const WOODS3 49 /* baobab forest */
				percent_chance 9
				#const WOODS3 50 /* acacia forest */
				percent_chance 9
				#const WOODS3 55 /* mangrove forest */
				percent_chance 9
				#const WOODS3 56 /* rain forest */
			end_random
		elseif WK
			start_random
				percent_chance 10
				#const WOODS3 10 /* forest */
				percent_chance 10
				#const WOODS3 13 /* palm forest */
				percent_chance 12	
				#const WOODS3 16 /* baobab */	
				percent_chance 10					
				#const WOODS3 17 /* jungle */
				percent_chance 10
				#const WOODS3 18 /* bamboo forest */
				percent_chance 10
				#const WOODS3 19 /* pine forest */
				percent_chance 15
				#const WOODS3 20 /* mangrove forest */
				percent_chance 10
				#const WOODS3 21 /* snow forest */
				percent_chance 13				
				#const WOODS3 41 /* acacia */	
			end_random
		else
			start_random
				percent_chance 15
				#const WOODS3 10 /* forest */
				percent_chance 15
				#const WOODS3 13 /* palm forest */
				percent_chance 15			
				#const WOODS3 17 /* jungle */
				percent_chance 15
				#const WOODS3 18 /* bamboo forest */
				percent_chance 15
				#const WOODS3 19 /* pine forest */
				percent_chance 10
				#const WOODS3 20 /* oak forest */
				percent_chance 15
				#const WOODS3 21 /* snow forest */
			end_random
		endif
	/* woods4 */
		if HD
			start_random
				percent_chance 8
				#const WOODS4 10 /* forest */
				percent_chance 8
				#const WOODS4 13 /* palm forest */
				percent_chance 8			
				#const WOODS4 17 /* jungle */
				percent_chance 8
				#const WOODS4 18 /* bamboo forest */
				percent_chance 8
				#const WOODS4 19 /* pine forest */
				percent_chance 7
				#const WOODS4 20 /* oak forest */
				percent_chance 8
				#const WOODS4 21 /* snow forest */
				percent_chance 9
				#const WOODS4 48 /* dragon forest */
				percent_chance 9
				#const WOODS4 49 /* baobab forest */
				percent_chance 9
				#const WOODS4 50 /* acacia forest */
				percent_chance 9
				#const WOODS4 55 /* mangrove forest */
				percent_chance 9
				#const WOODS4 56 /* rain forest */
			end_random
		elseif WK
			start_random
				percent_chance 10
				#const WOODS4 10 /* forest */
				percent_chance 10
				#const WOODS4 13 /* palm forest */
				percent_chance 12	
				#const WOODS4 16 /* baobab */	
				percent_chance 10					
				#const WOODS4 17 /* jungle */
				percent_chance 10
				#const WOODS4 18 /* bamboo forest */
				percent_chance 10
				#const WOODS4 19 /* pine forest */
				percent_chance 15
				#const WOODS4 20 /* mangrove forest */
				percent_chance 10
				#const WOODS4 21 /* snow forest */
				percent_chance 13				
				#const WOODS4 41 /* acacia */	
			end_random
		else
			start_random
				percent_chance 15
				#const WOODS4 10 /* forest */
				percent_chance 15
				#const WOODS4 13 /* palm forest */
				percent_chance 15			
				#const WOODS4 17 /* jungle */
				percent_chance 15
				#const WOODS4 18 /* bamboo forest */
				percent_chance 15
				#const WOODS4 19 /* pine forest */
				percent_chance 10
				#const WOODS4 20 /* oak forest */
				percent_chance 15
				#const WOODS4 21 /* snow forest */
			end_random
		endif			
	/* forestpath */
		if HD
			start_random
				percent_chance 50
				#const FORESTPATH1 5 /* leaves */
				percent_chance 20
				#const FORESTPATH1 54 /* mangrove shallows */
				percent_chance 30
				#const FORESTPATH1 62 /* jungleleaves */	
			end_random
			
			start_random
				percent_chance 50
				#const FORESTPATH2 5 /* leaves */
				percent_chance 20
				#const FORESTPATH2 54 /* mangrove shallows */
				percent_chance 30
				#const FORESTPATH2 62 /* jungleleaves */	
			end_random
			
			start_random
				percent_chance 50
				#const FORESTPATH3 5 /* leaves */
				percent_chance 20
				#const FORESTPATH3 54 /* mangrove shallows */
				percent_chance 30
				#const FORESTPATH3 62 /* jungleleaves */	
			end_random	
			
			start_random
				percent_chance 50
				#const FORESTPATH4 5 /* leaves */
				percent_chance 20
				#const FORESTPATH4 54 /* mangrove shallows */
				percent_chance 30
				#const FORESTPATH4 62 /* jungleleaves */	
			end_random
		elseif WK
			start_random
				percent_chance 95		
				#const FORESTPATH1 5 /* leaves */
				percent_chance 5		
				#const FORESTPATH1 11 /* mangrove shallows */	
			end_random
			
			start_random
				percent_chance 95		
				#const FORESTPATH2 5 /* leaves */
				percent_chance 5		
				#const FORESTPATH2 11 /* mangrove shallows */	
			end_random
			
			start_random
				percent_chance 95		
				#const FORESTPATH3 5 /* leaves */
				percent_chance 5		
				#const FORESTPATH3 11 /* mangrove shallows */	
			end_random
			
			start_random
				percent_chance 95		
				#const FORESTPATH4 5 /* leaves */
				percent_chance 5		
				#const FORESTPATH4 11 /* mangrove shallows */	
			end_random
		else
				#const FORESTPATH1 5 /* leaves */
				#const FORESTPATH2 5 /* leaves */
				#const FORESTPATH3 5 /* leaves */
				#const FORESTPATH4 5 /* leaves */				
		endif
		
	endif

/* FOREST UPGRADES FOR WK */



if BARRENSTYLE
	#define UPGRADEDRAGONFOREST
elseif ASIANSTYLE
	#define UPGRADEDRAGONFOREST
elseif TROPICALSTYLE
	#define UPGRADERAINFOREST
elseif MANGROVESTYLE
	#define UPGRADERAINFOREST
endif	
	
if UPGRADEDRAGONFOREST
	effect_amount GAIA_UPGRADE_UNIT PALM_FOREST_TREE DLC_DRAGONTREE 0
endif

if UPGRADERAINFOREST
	effect_amount GAIA_UPGRADE_UNIT FOREST_TREE RAINFOREST_TREE 0
endif	
	
/* *************** stragglers and decoration *************** */

/* STRAGGLER1-STRAGGLER3, contains wood (100w) */
/* PEAK1, PEAK2 is 4x4 obstuction */
/* BOULDER1 is 1x1 obstruction */
/* BOULDER2 is 2x2 or 3x3 obstruction */
/* COVER1-COVER4 is non-collisional, from small to large */

	if BARRENSTYLE

		if AOC
			#const STRAGGLER1 407 /* black dry tree */
			#const STRAGGLER2 404 /* brown dry tree */		
			#const STRAGGLER3 405 /* tree brownleaves */
			#const PEAK1 744 /* sandy mountain */
			#const PEAK2 745 /* sandy mountain */
			#const BOULDER1 623 /* grey rock */
			#const BOULDER2 273	/* cliff */
				start_random
					percent_chance 40
						#const COVER1 709 /* cactus */
					percent_chance 30
						#const COVER1 809 /* stump */
					percent_chance 30
						#const COVER1 711 /* rugs */
				end_random				
			#const COVER2 723 /* Crater */
			#const COVER3 241 /* Cracks */
				start_random	
					percent_chance 25
						#const COVER4 334 /* flowers/moss */
					percent_chance 25
						#const COVER4 335 /* flowers/moss */
					percent_chance 25
						#const COVER4 336 /* flowers/moss */
					percent_chance 25
						#const COVER4 337 /* flowers/moss */
				end_random	
				
		else
			#const STRAGGLER1 407 /* black dry tree */		
			#const STRAGGLER2 1053 /* african bush */
			#const STRAGGLER3 404 /* brown dry tree */		
				start_random
					percent_chance 40
						#const PEAK1 744 /* sandy mountain */
						#const PEAK2 1047 /* snowy mountain */
					percent_chance 30
						#const PEAK1 1045 /* snowy mountain */
						#const PEAK2 1046 /* snowy mountain */
					percent_chance 30
						#const PEAK1 744 /* sandy mountain */
						#const PEAK2 745 /* sandy mountain */
				end_random
				
				start_random
					percent_chance 40
						#const BOULDER1 918 /* brown rock */
					percent_chance 30
						#const BOULDER1 1048 /* small desert rock */	
					percent_chance 30
						#const BOULDER1 1049 /* tall desert rock */	
				end_random
				
			#const BOULDER2 1050 /* large desert rock */	
			#const COVER2 1091 /* animal skeleton */
			
				start_random
					percent_chance 50
						#const COVER1 709 /* cactus */
						#const COVER3 241 /* Cracks */
					percent_chance 50
						#const COVER1 809 /* stump */
						#const COVER3 723 /* Crater */
				end_random		
				start_random
					percent_chance 60
					#const COVER4 1033 /* dead grass */
					percent_chance 10
						#const COVER4 334 /* flowers/moss */
					percent_chance 10
						#const COVER4 335 /* flowers/moss */
					percent_chance 10
						#const COVER4 336 /* flowers/moss */
					percent_chance 10
						#const COVER4 337 /* flowers/moss */
				end_random	
		endif	
	
	elseif ARCTICSTYLE

			#const STRAGGLER1 413 /* Varies. Same created by SNOW_FOREST terrain */
			#const STRAGGLER2 350 /* Varies. Same created by PINE_FOREST terrain */
			#const STRAGGLER3 407 /* black dry tree */
			#const BOULDER1 623 /* grey rock */
			#const BOULDER2 720 /* nine bands */
			
			if AOC
			#const PEAK1 744 /* sandy mountain */
			#const PEAK2 745 /* sandy mountain */
			
			#const COVER1 821 /* head */			
			#const COVER2 820 /* grave */	
			#const COVER3 809 /* stump */
				start_random	
					percent_chance 25
						#const COVER4 334 /* flowers/moss */
					percent_chance 25
						#const COVER4 335 /* flowers/moss */
					percent_chance 25
						#const COVER4 336 /* flowers/moss */
					percent_chance 25
						#const COVER4 337 /* flowers/moss */
				end_random	
			
			else
			
			#const PEAK1 1045 /* snow mountain */
				start_random
					percent_chance 50
						#const PEAK2 1046 /* snow mountain */
					percent_chance 50
						#const PEAK2 1047 /* snow mountain */
				end_random
			#const COVER1 728 /* icepatch */
			#const COVER2 821 /* head */
			#const COVER3 809 /* stump */
				start_random	
					percent_chance 25
						#const COVER4 334 /* flowers/moss */
					percent_chance 25
						#const COVER4 335 /* flowers/moss */
					percent_chance 25
						#const COVER4 336 /* flowers/moss */
					percent_chance 25
						#const COVER4 337 /* flowers/moss */
				end_random	
		endif	
		
	elseif BALTICSTYLE

		#const STRAGGLER1 350 /* Varies. Same created by PINE_FOREST terrain */
		#const STRAGGLER2 413 /* Varies. Same created by SNOW_FOREST terrain */

		#const BOULDER1 720 /* nine bands */
		#const BOULDER2 345 /* villa ruins */
		#const COVER1 809 /* stump */
		#const COVER2 821 /* head */	
			start_random
				percent_chance 15
					#const COVER3 334 /* flowers/moss */
				percent_chance 15
					#const COVER3 335 /* flowers/moss */
				percent_chance 15
					#const COVER3 336 /* flowers/moss */
				percent_chance 15
					#const COVER3 337 /* flowers/moss */
				percent_chance 40
					#const COVER3 859 /* flowerbed */						
			end_random
			
				start_random	
					percent_chance 25
						#const COVER4 334 /* flowers/moss */
					percent_chance 25
						#const COVER4 335 /* flowers/moss */
					percent_chance 25
						#const COVER4 336 /* flowers/moss */
					percent_chance 25
						#const COVER4 337 /* flowers/moss */
				end_random	

			
		if AOC
			#const STRAGGLER3 349 /* Varies. Same created by FOREST terrain */
			#const PEAK1 310 /* grassy mountain */
			#const PEAK2 311 /* grassy mountain */

		else
			#const STRAGGLER3 1054 /* snow bush */
				start_random
					percent_chance 50
						#const PEAK1 1042 /* alp mountain */
					percent_chance 50
						#const PEAK1 1043 /* alp mountain */
				end_random
				start_random
					percent_chance 50
						#const PEAK2 1044 /* alp mountain */
					percent_chance 50
						#const PEAK2 1045 /* snow mountain */
				end_random

		endif	
		
	elseif ASIANSTYLE
					
		if AOC
			#const STRAGGLER1 348 /* Varies. Same created by BAMBOO terrain */
			#const STRAGGLER2 349 /* Varies. Same created by FOREST terrain */
			#const STRAGGLER3 413 /* Varies. Same created by SNOW_FOREST terrain */
			
			#const BOULDER1 858 /* broken cart */
			#const BOULDER2 623 /* grey rock */
		
			#const PEAK1 310 /* grassy mountain */
			#const PEAK2 311 /* grassy mountain */
			
			#const COVER1 737 /* bamboo stump */
			#const COVER2 818 /* plants */
			#const COVER3 859 /* flowerbed */
				start_random
					percent_chance 25
						#const COVER4 334 /* flowers/moss */
					percent_chance 25
						#const COVER4 335 /* flowers/moss */
					percent_chance 25
						#const COVER4 336 /* flowers/moss */
					percent_chance 25
						#const COVER4 337 /* flowers/moss */
				end_random
		else
			#const STRAGGLER1 348 /* Varies. Same created by BAMBOO terrain */
			#const STRAGGLER2 1051 /* dragon tree */
			#const STRAGGLER3 413 /* Varies. Same created by SNOW_FOREST terrain */

				start_random 
					percent_chance 20
						#const BOULDER1 1201 /* pagoda1 */
					percent_chance 20
						#const BOULDER1 1202 /* pagoda2 */				
					percent_chance 20
						#const BOULDER1 1203 /* pagoda3 */
					percent_chance 20
						#const BOULDER1 1173 /* small buddha */
					percent_chance 20
						#const BOULDER1 1174 /* small buddha */
				end_random
				
				start_random
					percent_chance 30			
						#const BOULDER2 1148 /* beach rock */
					percent_chance 35			
						#const BOULDER2 1171 /* large buddha */
					percent_chance 35			
						#const BOULDER2 1172 /* large buddha */	
				end_random
			#const PEAK1 1041 /* grassy mountain */			
			#const PEAK2 311 /* grassy mountain */
			
			#const COVER1 737 /* bamboo stump */
			#const COVER2 1177 /* vases */
				start_random
					percent_chance 50
						#const COVER3 301 /* grass patch */
					percent_chance 50
						#const COVER3 859 /* flowerbed */
				end_random
				start_random
					percent_chance 25
						#const COVER4 334 /* flowers/moss */
					percent_chance 25
						#const COVER4 335 /* flowers/moss */
					percent_chance 25
						#const COVER4 336 /* flowers/moss */
					percent_chance 25
						#const COVER4 337 /* flowers/moss */
				end_random

		endif
	
	elseif TEMPERATESTYLE	

		#const STRAGGLER1 349 /* Varies. Same created by FOREST terrain */
		#const STRAGGLER2 350 /* Varies. Same created by PINE_FOREST terrain */
			
		if AOC
			#const STRAGGLER3 349 /* Varies. Same created by FOREST terrain */
			#const PEAK1 310 /* grassy mountain */
			#const PEAK2 311 /* grassy mountain */
				start_random
					percent_chance 30		
						#const BOULDER1 817 /* statue */
					percent_chance 40			
						#const BOULDER1 857 /* haystack */
					percent_chance 30			
						#const BOULDER1 623 /* rocks */
				end_random
				start_random
					percent_chance 50	
						#const BOULDER2 856 /* temple ruins */
					percent_chance 50	
						#const BOULDER2 345 /* villa ruins */
				end_random
			#const COVER1 809 /* stump */
			#const COVER2 819 /* sign */
			#const COVER3 859 /* flowerbed */
				start_random
					percent_chance 25
						#const COVER4 334 /* flowers/moss */
					percent_chance 25
						#const COVER4 335 /* flowers/moss */
					percent_chance 25
						#const COVER4 336 /* flowers/moss */
					percent_chance 25
						#const COVER4 337 /* flowers/moss */
				end_random
			
		else
			#const STRAGGLER3 302 /* jungle bush */
			#const PEAK1 1041 /* grassy mountain */			
			#const PEAK2 311 /* grassy mountain */
				start_random
					percent_chance 30		
						#const BOULDER1 857 /* haystack */
					percent_chance 15		
						#const BOULDER1 914 /* quarry */
					percent_chance 15		
						#const BOULDER1 915 /* lumber */
					percent_chance 15		
						#const BOULDER1 916 /* goods */	
					percent_chance 25		
						#const BOULDER1 817 /* statue */							
				end_random
				start_random
					percent_chance 30	
						#const BOULDER2 856 /* temple ruins */
					percent_chance 30	
						#const BOULDER2 345 /* villa ruins */
					percent_chance 40	
						#const BOULDER2 758 /* burned building */
				end_random
			#const COVER1 809 /* stump */
			#const COVER2 933 /* barrels */
				start_random
					percent_chance 50
						#const COVER3 301 /* grass patch */
					percent_chance 50
						#const COVER3 859 /* flowerbed */
				end_random
				start_random
					percent_chance 40
						#const COVER3 301 /* grass patch */
					percent_chance 15
						#const COVER4 334 /* flowers/moss */
					percent_chance 15
						#const COVER4 335 /* flowers/moss */
					percent_chance 15
						#const COVER4 336 /* flowers/moss */
					percent_chance 15
						#const COVER4 337 /* flowers/moss */
				end_random
		endif	
		
	elseif SAVANNAHSTYLE
	
		if AOC
			#const STRAGGLER1 351 /*	Varies. Same created by PALM_DESERT terrain */
			#const STRAGGLER2 349 /* Varies. Same created by FOREST terrain */
			#const STRAGGLER3 404 /* brown dry tree */	
			
			#const PEAK1 744 /* sandy mountain */
			#const PEAK2 745 /* sandy mountain */
			#const BOULDER1 623 /* grey rock */
			#const BOULDER2 273	/* cliff */
				start_random
					percent_chance 50
						#const COVER1 709 /* cactus */
					percent_chance 50
						#const COVER1 711 /* rugs */
				end_random		
			#const COVER2 723 /* Crater */
			#const COVER3 241 /* Cracks */			
				start_random
					percent_chance 15
						#const COVER4 334 /* flowers/moss */
					percent_chance 15
						#const COVER4 335 /* flowers/moss */
					percent_chance 15
						#const COVER4 336 /* flowers/moss */
					percent_chance 15
						#const COVER4 337 /* flowers/moss */
					percent_chance 40
						#const COVER4 859 /* flowerbed */						
				end_random	
			
		else
			#const STRAGGLER1 1063 /* savannah tree */
			#const STRAGGLER2 1052 /* Baobab tree */
			#const STRAGGLER3 1053 /* african bush */	
			
			#const PEAK1 744 /* sandy mountain */
			#const PEAK2 745 /* sandy mountain */
			
				start_random
					percent_chance 40
						#const BOULDER1 1089 /* grannary */
					percent_chance 30
						#const BOULDER1 1048 /* small desert rock */	
					percent_chance 30
						#const BOULDER1 1049 /* tall desert rock */	
				end_random
				
			#const BOULDER2 1050 /* large desert rock */
				
			#const COVER1 1091 /* animal skeleton */		
			#const COVER2 241 /* Cracks */
				start_random
					percent_chance 8
						#const COVER3 334 /* flowers/moss */
					percent_chance 8
						#const COVER3 335 /* flowers/moss */
					percent_chance 8
						#const COVER3 336 /* flowers/moss */
					percent_chance 8
						#const COVER3 337 /* flowers/moss */
					percent_chance 28
						#const COVER3 859 /* flowerbed */	
					percent_chance 40
						#const COVER3 301 /* grass patch */
				end_random 
				
			#const COVER4 1033 /* dead grass */
		endif

	elseif OASISSTYLE

		if AOC
			#const STRAGGLER1 351 /*	Varies. Same created by PALM_DESERT terrain */
			#const STRAGGLER2 349 /* Varies. Same created by FOREST terrain */
			#const STRAGGLER3 414 /*	Varies. Same created by JUNGLE terrain */
			
			#const PEAK1 744 /* sandy mountain */
			#const PEAK2 745 /* sandy mountain */
			#const BOULDER1 858 /* broken cart */
			#const BOULDER2 273	/* cliff */

			#const COVER1 711 /* rugs */
				start_random
					percent_chance 40
						#const COVER2 709 /* cactus */
					percent_chance 30
						#const COVER2 818 /* plants */
					percent_chance 30
						#const COVER2 819 /* sign */
				end_random		
			#const COVER3 241 /* Cracks */	
			
			start_random
				percent_chance 10
					#const COVER4 334 /* flowers/moss */
				percent_chance 10
					#const COVER4 335 /* flowers/moss */
				percent_chance 10
					#const COVER4 336 /* flowers/moss */
				percent_chance 10
					#const COVER4 337 /* flowers/moss */
				percent_chance 60
					#const COVER4 859 /* flowerbed */						
			end_random	
			
		else
			#const STRAGGLER1 351 /*	Varies. Same created by PALM_DESERT terrain */
			#const STRAGGLER2 1053 /* african bush */	
			#const STRAGGLER3 349 /* Varies. Same created by FOREST terrain */
			
			#const PEAK1 744 /* sandy mountain */
			#const PEAK2 745 /* sandy mountain */
			
				start_random
					percent_chance 50
						#const BOULDER1 1048 /* small desert rock */	
					percent_chance 50
						#const BOULDER1 1049 /* tall desert rock */	
				end_random
				
			#const BOULDER2 1050 /* large desert rock */
				
			#const COVER1 1091 /* animal skeleton */
			#const COVER2 711 /* rugs */			
			#const COVER3 241 /* Cracks */
				start_random
					percent_chance 8
						#const COVER4 334 /* flowers/moss */
					percent_chance 8
						#const COVER4 335 /* flowers/moss */
					percent_chance 8
						#const COVER4 336 /* flowers/moss */
					percent_chance 8
						#const COVER4 337 /* flowers/moss */
					percent_chance 28
						#const COVER4 859 /* flowerbed */	
					percent_chance 40
						#const COVER4 1033 /* dead grass */
				end_random 
		endif
	
	elseif SUBTROPICALSTYLE

		if AOC
			#const STRAGGLER1 414 /*	Varies. Same created by JUNGLE terrain */
			#const STRAGGLER2 351 /*	Varies. Same created by PALM_DESERT terrain */
			#const STRAGGLER3 349 /* Varies. Same created by FOREST terrain */
			
			#const PEAK1 310 /* grassy mountain */
			#const PEAK2 311 /* grassy mountain */
			
			#const BOULDER1 855 /* old head */
			#const BOULDER2 856	/* temple ruins */

			#const COVER1 818 /* plants */
			#const COVER2 241 /* Cracks */	
			#const COVER3 859 /* flowerbed */						

				start_random
					percent_chance 25
						#const COVER4 334 /* flowers/moss */
					percent_chance 25
						#const COVER4 335 /* flowers/moss */
					percent_chance 25
						#const COVER4 336 /* flowers/moss */
					percent_chance 25
						#const COVER4 337 /* flowers/moss */
				end_random			
		else
			#const STRAGGLER1 414 /*	Varies. Same created by JUNGLE terrain */
			#const STRAGGLER2 351 /*	Varies. Same created by PALM_DESERT terrain */	
			#const STRAGGLER3 1053 /* african bush */	
			
			#const PEAK1 1041 /* grassy mountain */			
			#const PEAK2 311 /* grassy mountain */
			
				start_random
					percent_chance 50
						#const BOULDER1 855 /* old head */	
					percent_chance 50
						#const BOULDER1 1149 /* jungle rock */	
				end_random
				
				start_random
					percent_chance 50				
						#const BOULDER2 1050 /* large desert rock */
					percent_chance 50
						#const BOULDER2 1176 /* trowulan gate */	
				end_random
				
			#const COVER1 910 /* impaled body */
			#const COVER2 818 /* plants */			
			#const COVER3 241 /* Cracks */
				start_random
					percent_chance 20
						#const COVER4 301 /* grass patch */
					percent_chance 50
						#const COVER4 859 /* flowerbed */	
					percent_chance 30
						#const COVER4 1033 /* dead grass */
				end_random 
		endif	
	elseif TROPICALSTYLE

		if AOC
			#const STRAGGLER1 414 /*	Varies. Same created by JUNGLE terrain */
			#const STRAGGLER2 414 /*	Varies. Same created by JUNGLE terrain */
			#const STRAGGLER3 349 /* Varies. Same created by FOREST terrain */
			
			#const PEAK1 310 /* grassy mountain */
			#const PEAK2 311 /* grassy mountain */
			
			#const BOULDER1 855 /* old head */
			#const BOULDER2 623 /* grey rock */

			#const COVER1 818 /* plants */
			#const COVER2 859 /* flowerbed */	
				start_random
					percent_chance 25
						#const COVER3 334 /* flowers/moss */
					percent_chance 25
						#const COVER3 335 /* flowers/moss */
					percent_chance 25
						#const COVER3 336 /* flowers/moss */
					percent_chance 25
						#const COVER3 337 /* flowers/moss */						
				end_random						

				start_random
					percent_chance 40				
						#const COVER4 859 /* flowerbed */	
					percent_chance 15
						#const COVER4 334 /* flowers/moss */
					percent_chance 15
						#const COVER4 335 /* flowers/moss */
					percent_chance 15
						#const COVER4 336 /* flowers/moss */
					percent_chance 15
						#const COVER4 337 /* flowers/moss */
				end_random			
		else
			#const STRAGGLER1 1146 /* rainforest tree */
			#const STRAGGLER2 1144 /* mangrove tree */	
			#const STRAGGLER3 302 /* jungle bush */	
			
			#const PEAK1 1041 /* grassy mountain */			
			#const PEAK2 311 /* grassy mountain */
			
				start_random
					percent_chance 30
						#const BOULDER1 855 /* old head */	
					percent_chance 70
						#const BOULDER1 1149 /* jungle rock */	
				end_random
				
				start_random
					percent_chance 50
						#const BOULDER2 1176 /* trowulan gate */
					percent_chance 50
						#const BOULDER1 472 /* loot */	
				end_random
				
				start_random
					percent_chance 50				
						#const COVER1 910 /* impaled body */
					percent_chance 50	
						#const COVER1 818 /* plants */		
				end_random
			#const COVER2 1175 /* Fern Patch */
				start_random
					percent_chance 25
						#const COVER3 334 /* flowers/moss */
					percent_chance 25
						#const COVER3 335 /* flowers/moss */
					percent_chance 25
						#const COVER3 336 /* flowers/moss */
					percent_chance 25
						#const COVER3 337 /* flowers/moss */						
				end_random	
				
				start_random
					percent_chance 40				
						#const COVER4 859 /* flowerbed */	
					percent_chance 15
						#const COVER4 334 /* flowers/moss */
					percent_chance 15
						#const COVER4 335 /* flowers/moss */
					percent_chance 15
						#const COVER4 336 /* flowers/moss */
					percent_chance 15
						#const COVER4 337 /* flowers/moss */
				end_random						
		endif	
		
	elseif MANGROVESTYLE

		if AOC
			#const STRAGGLER1 414 /*	Varies. Same created by JUNGLE terrain */
			#const STRAGGLER2 414 /*	Varies. Same created by JUNGLE terrain */
			#const STRAGGLER3 349 /* Varies. Same created by FOREST terrain */
			
			#const PEAK1 310 /* grassy mountain */
			#const PEAK2 311 /* grassy mountain */
			
			#const BOULDER1 623 /* grey rock */
			#const BOULDER2 855 /* old head */
				start_random
					percent_chance 50
						#const COVER1 818 /* plants */
					percent_chance 50			
						#const COVER1 737 /* bamboo stumps */							
				end_random	
				
				start_random
					percent_chance 50
						#const COVER2 389 /* sea rock 1 */
					percent_chance 50	
						#const COVER2 396 /* sea rock 2 */					
				end_random
				
				start_random
					percent_chance 25
						#const COVER3 334 /* flowers/moss */
					percent_chance 25
						#const COVER3 335 /* flowers/moss */
					percent_chance 25
						#const COVER3 336 /* flowers/moss */
					percent_chance 25
						#const COVER3 337 /* flowers/moss */						
				end_random						

				start_random
					percent_chance 40				
						#const COVER4 859 /* flowerbed */	
					percent_chance 15
						#const COVER4 334 /* flowers/moss */
					percent_chance 15
						#const COVER4 335 /* flowers/moss */
					percent_chance 15
						#const COVER4 336 /* flowers/moss */
					percent_chance 15
						#const COVER4 337 /* flowers/moss */
				end_random		
		else
			#const STRAGGLER1 1144 /* mangrove tree */	
			#const STRAGGLER2 1146 /* rainforest tree */
			#const STRAGGLER3 302 /* jungle bush */	
			
			#const PEAK1 1041 /* grassy mountain */			
			#const PEAK2 311 /* grassy mountain */
			
				start_random
					percent_chance 70
						#const BOULDER1 1191 /* stupa */	
					percent_chance 30
						#const BOULDER1 1149 /* jungle rock */	
				end_random
				


			#const BOULDER2 1148 /* beach rock */
	
			#const COVER1 447 /* shallows */
				
				start_random
					percent_chance 50			
						#const COVER2 818 /* plants */	
					percent_chance 50			
						#const COVER2 737 /* bamboo stumps */							
				end_random	
				
				start_random
					percent_chance 50
						#const COVER3 389 /* sea rock 1 */
					percent_chance 50	
						#const COVER3 396 /* sea rock 2 */					
				end_random
				
				start_random
					percent_chance 25
						#const COVER4 334 /* flowers/moss */
					percent_chance 25
						#const COVER4 335 /* flowers/moss */
					percent_chance 25
						#const COVER4 336 /* flowers/moss */
					percent_chance 25
						#const COVER4 337 /* flowers/moss */
				end_random								
		endif	
	else
		
		if AOC
			#const STRAGGLER1 349 /* Varies. Same created by FOREST terrain */
			#const STRAGGLER2 350 /* Varies. Same created by PINE_FOREST terrain */
			#const STRAGGLER3 414 /*	Varies. Same created by JUNGLE terrain */
			#const PEAK1 310 /* grassy mountain */
			#const PEAK2 311 /* grassy mountain */
				start_random
					percent_chance 30		
						#const BOULDER1 817 /* statue */
					percent_chance 40			
						#const BOULDER1 857 /* haystack */
					percent_chance 30			
						#const BOULDER1 623 /* rocks */
				end_random
				start_random
					percent_chance 50	
						#const BOULDER2 856 /* temple ruins */
					percent_chance 50	
						#const BOULDER2 345 /* villa ruins */
				end_random
			#const COVER1 809 /* stump */
			#const COVER2 819 /* sign */
			#const COVER3 859 /* flowerbed */
				start_random
					percent_chance 25
						#const COVER4 334 /* flowers/moss */
					percent_chance 25
						#const COVER4 335 /* flowers/moss */
					percent_chance 25
						#const COVER4 336 /* flowers/moss */
					percent_chance 25
						#const COVER4 337 /* flowers/moss */
				end_random
			
		else
			#const STRAGGLER1 349 /* Varies. Same created by FOREST terrain */
			#const STRAGGLER2 350 /* Varies. Same created by PINE_FOREST terrain */
			#const STRAGGLER3 302 /* jungle bush */
			#const PEAK1 1041 /* grassy mountain */			
			#const PEAK2 311 /* grassy mountain */
				start_random
					percent_chance 30		
						#const BOULDER1 857 /* haystack */
					percent_chance 15		
						#const BOULDER1 914 /* quarry */
					percent_chance 15		
						#const BOULDER1 915 /* lumber */
					percent_chance 15		
						#const BOULDER1 916 /* goods */	
					percent_chance 25		
						#const BOULDER1 817 /* statue */							
				end_random
				start_random
					percent_chance 30	
						#const BOULDER2 856 /* temple ruins */
					percent_chance 30	
						#const BOULDER2 345 /* villa ruins */
					percent_chance 40	
						#const BOULDER2 758 /* burned building */
				end_random
			#const COVER1 809 /* stump */
			#const COVER2 933 /* barrels */
				start_random
					percent_chance 50
						#const COVER3 301 /* grass patch */
					percent_chance 50
						#const COVER3 859 /* flowerbed */
				end_random
				start_random
					percent_chance 40
						#const COVER3 301 /* grass patch */
					percent_chance 15
						#const COVER4 334 /* flowers/moss */
					percent_chance 15
						#const COVER4 335 /* flowers/moss */
					percent_chance 15
						#const COVER4 336 /* flowers/moss */
					percent_chance 15
						#const COVER4 337 /* flowers/moss */
				end_random
		endif	
	
	endif


/* units on water */
	if AOC
	start_random
		percent_chance 10
			#const SEAUNIT1 13 /* fishing ship */
		percent_chance 10
			#const SEAUNIT1 15 /* Junk */
		percent_chance 10
			#const SEAUNIT1 545 /* Transport Ship */
		percent_chance 10
			#const SEAUNIT1 17 /* trade cog */
		percent_chance 10
			#const SEAUNIT1 539 /* Galley */	
		percent_chance 10
			#const SEAUNIT1 527 /* Demo */
		percent_chance 5
			#const SEAUNIT1 528 /* Heavy demo */
		percent_chance 5
			#const SEAUNIT1 250 /* Longboat */
		percent_chance 3
			#const SEAUNIT1 420 /* Cannon Galleon */
		percent_chance 4
			#const SEAUNIT1 528 /* Admiral Yi Sun Shin */
		percent_chance 5
			#const SEAUNIT1 536 /* Converter galley */
		percent_chance 3
			#const SEAUNIT1 436 /* Flying Dutchman */
		percent_chance 5
			#const SEAUNIT1 199 /* fish trap */	
		percent_chance 10
			#const SEAUNIT1 785 /* SEA_TOWER */	
	end_random
	else
	start_random
		percent_chance 9
			#const SEAUNIT1 13 /* fishing ship */
		percent_chance 7
			#const SEAUNIT1 15 /* Junk */
		percent_chance 6
			#const SEAUNIT1 545 /* Transport Ship */
		percent_chance 8
			#const SEAUNIT1 17 /* trade cog */
		percent_chance 6
			#const SEAUNIT1 539 /* Galley */	
		percent_chance 4
			#const SEAUNIT1 527 /* Demo */
		percent_chance 3
			#const SEAUNIT1 528 /* Heavy demo */
		percent_chance 3
			#const SEAUNIT1 250 /* Longboat */
		percent_chance 2
			#const SEAUNIT1 420 /* Cannon Galleon */
		percent_chance 3
			#const SEAUNIT1 528 /* Admiral Yi Sun Shin */
		percent_chance 4
			#const SEAUNIT1 536 /* Converter galley */
		percent_chance 3
			#const SEAUNIT1 436 /* Flying Dutchman */
		percent_chance 4
			#const SEAUNIT1 199 /* fish trap */
		percent_chance 6
			#const SEAUNIT1 785 /* SEA_TOWER */			
		percent_chance 3
			#const SEAUNIT1 1004 /* DLC_CARAVEL */
		percent_chance 4
			#const SEAUNIT1 1022 /* MONKBOAT */		
		percent_chance 6
			#const SEAUNIT1 1103 /* DLC_FIREGALLEY */
		percent_chance 5
			#const SEAUNIT1 1104 /* DLC_DEMORAFT */
		percent_chance 6
			#const SEAUNIT1 938 /* DRAGON_SHIP */	
		percent_chance 8
			#const SEAUNIT1 778 /* CANOE */				
	end_random
endif

/* collectable water units */

	if AOC
	start_random
		percent_chance 10
			#const SEAUNIT2 13 /* fishing ship */
		percent_chance 10
			#const SEAUNIT2 15 /* Junk */
		percent_chance 10
			#const SEAUNIT2 545 /* Transport Ship */
		percent_chance 10
			#const SEAUNIT2 17 /* trade cog */
		percent_chance 10
			#const SEAUNIT2 539 /* Galley */	
		percent_chance 10
			#const SEAUNIT2 527 /* Demo */
		percent_chance 10
			#const SEAUNIT2 536 /* Converter galley */
		percent_chance 10
			#const SEAUNIT2 436 /* Flying Dutchman */
		percent_chance 10
			#const SEAUNIT2 199 /* fish trap */	
		percent_chance 10
			#const SEAUNIT2 785 /* SEA_TOWER */	
	end_random
	else
	start_random
		percent_chance 8
			#const SEAUNIT2 13 /* fishing ship */
		percent_chance 8
			#const SEAUNIT2 15 /* Junk */
		percent_chance 8
			#const SEAUNIT2 545 /* Transport Ship */
		percent_chance 8
			#const SEAUNIT2 17 /* trade cog */
		percent_chance 8
			#const SEAUNIT2 539 /* Galley */	
		percent_chance 6
			#const SEAUNIT2 527 /* Demo */
		percent_chance 7
			#const SEAUNIT2 536 /* Converter galley */
		percent_chance 8
			#const SEAUNIT2 436 /* Flying Dutchman */
		percent_chance 8
			#const SEAUNIT2 199 /* fish trap */	
		percent_chance 8
			#const SEAUNIT2 785 /* SEA_TOWER */		
		percent_chance 7
			#const SEAUNIT2 1022 /* MONKBOAT */		
		percent_chance 8
			#const SEAUNIT2 1103 /* DLC_FIREGALLEY */
		percent_chance 8
			#const SEAUNIT2 1104 /* DLC_DEMORAFT */
		percent_chance 8
			#const SEAUNIT2 778 /* CANOE */				
	end_random
endif	
	
	

/* gaia animals */

if AOC
	if TROPICALSTYLE
		#const CATTLE 833 /* turkey */
		#const HUNT1 65 /* deer */
		#const HUNT2 65 /* deer */
		#const BIGHUNT 822 /* javelina */
		#const PREDATOR 812 /* jaguar */
		#const GRAZER 835 /* wild horse */
		#const BIRD1 816 /* macaw */
		#const BIRD2 96 /* hawk */		
	
	elseif SUBTROPICALSTYLE
		#const CATTLE 833 /* turkey */
		#const HUNT1 65 /* deer */
		#const HUNT2 65 /* deer */
		#const BIGHUNT 822 /* javelina */
		#const PREDATOR 812 /* jaguar */
		#const GRAZER 835 /* wild horse */
		#const BIRD1 816 /* macaw */
		#const BIRD2 96 /* hawk */		

	elseif MANGROVESTYLE
		#const CATTLE 833 /* turkey */
		#const HUNT1 65 /* deer */
		#const HUNT2 65 /* deer */
		#const BIGHUNT 822 /* javelina */
		#const PREDATOR 812 /* jaguar */
		#const GRAZER 835 /* wild horse */
		#const BIRD1 816 /* macaw */
		#const BIRD2 96 /* hawk */	
		
	else
		#const CATTLE 594 /* sheep */
		#const HUNT1 65 /* deer */
		#const HUNT2 65 /* deer */
		#const BIGHUNT 48 /* boar */
		#const PREDATOR 126 /* wolf */
		#const GRAZER 835 /* wild horse */
		#const BIRD1 96 /* hawk */	
		#const BIRD2 96 /* hawk */
	endif
	
else
	if BARRENSTYLE
		start_random
			percent_chance 50	
				#const CATTLE 1060 /* goat */
			percent_chance 50			
				#const CATTLE 305 /* llama */
		end_random
		#const HUNT1 65	/* deer */
		#const HUNT2 65	/* deer */
		start_random
			percent_chance 30
				#const BIGHUNT 48 /* boar */
			percent_chance 70
				#const BIGHUNT 412 /* elephant */
		end_random
		
		start_random
			percent_chance 40
				#const PREDATOR 126 /* wolf */
			percent_chance 30
				#const PREDATOR 1029 /* lion */	
			percent_chance 30
				#const PREDATOR 486 /* bear */		
		end_random
		
		start_random
			percent_chance 50
				#const GRAZER 884 /* wild camel */
			percent_chance 50
				#const GRAZER 835 /* wild horse */
		end_random
		
		#const BIRD1 917 /* vulture */
		#const BIRD2 96	/* hawk */		
		
	elseif ARCTICSTYLE
		#const CATTLE 594 /* sheep */
		#const HUNT1 65 /* deer */
		#const HUNT2 65 /* deer */
		#const BIGHUNT 48 /* boar */
		start_random
			percent_chance 70
				#const PREDATOR 126 /* wolf */
			percent_chance 30
				#const PREDATOR 486 /* bear */		
		end_random
		#const GRAZER 835 /* wild horse */
		#const BIRD1 96	/* hawk */
		#const BIRD2 1056 /* falcon */	
		
	elseif BALTICSTYLE
		start_random
			percent_chance 50
				#const CATTLE 705 /* cow */
			percent_chance 50
				#const CATTLE 594 /* sheep */
		end_random
		#const HUNT1 65 /* deer */
		#const HUNT2 65 /* deer */
		#const BIGHUNT 48 /* boar */
		start_random
			percent_chance 50
				#const PREDATOR 126 /* wolf */
			percent_chance 50
				#const PREDATOR 486 /* bear */		
		end_random
		#const GRAZER 835 /* wild horse */
		#const BIRD1 1056 /* falcon */
		#const BIRD2 96	/* hawk */		
	
	elseif ASIANSTYLE
		#const CATTLE 1142 /* water buffalo */
		#const HUNT1 65 /* deer */
		#const HUNT2 65 /* deer */
		start_random
			percent_chance 50
				#const BIGHUNT 48 /* boar */
			percent_chance 50	
				#const BIGHUNT 1139 /* rhino */
		end_random
		start_random
			percent_chance 20
				#const PREDATOR 126 /* wolf */
			percent_chance 20
				#const PREDATOR 486 /* bear */
			percent_chance 60
				#const PREDATOR 1137 /* tiger */						
		end_random
		#const GRAZER 835 /* wild horse */
		#const BIRD1 96	/* hawk */	
		#const BIRD2 816 /* macaw */
	
	
	elseif TEMPERATESTYLE
		start_random
			percent_chance 50
				#const CATTLE 705 /* cow */
			percent_chance 50
				#const CATTLE 594 /* sheep */
		end_random
		#const HUNT1 65 /* deer */
		#const HUNT2 65 /* deer */
		#const BIGHUNT 48 /* boar */
		#const PREDATOR 126 /* wolf */
		#const GRAZER 835 /* wild horse */
		#const BIRD1 1056 /* falcon */
		#const BIRD2 96	/* hawk */	


	elseif SAVANNAHSTYLE
		#const CATTLE 1060 /* goat */
		#const HUNT1 1026 /* ostrich */
		#const HUNT2 1019 /* zebra */
		#const BIGHUNT 412	/* elephant */
		#const PREDATOR 1029 /* lion */
		#const GRAZER 884 /* wild camel */
		#const BIRD1 1028 /* stork */
		#const BIRD2 917 /* vulture */			
	
	elseif OASISSTYLE
		#const CATTLE 1060 /* goat */
		#const HUNT1 1026 /* ostrich */
		#const HUNT2 1019 /* zebra */
		#const BIGHUNT 412	/* elephant */
		start_random
			percent_chance 50		
				#const PREDATOR 1029 /* lion */
			percent_chance 50	
				#const PREDATOR 1031 /* crocodile */	
		end_random
		#const GRAZER 884 /* wild camel */
		#const BIRD1 1028 /* stork */
		#const BIRD2 917 /* vulture */		

	elseif SUBTROPICALSTYLE
		start_random
			percent_chance 50			
				#const CATTLE 833 /* turkey */
			percent_chance 50			
				#const CATTLE 305 /* llama */
		end_random
		
		#const HUNT1 65 /* deer */
		#const HUNT2 65 /* deer */
		
		start_random
			percent_chance 50
				#const BIGHUNT 822 /* javelina */
			percent_chance 50	
				#const BIGHUNT 1139 /* rhino */
		end_random
		start_random
			percent_chance 50		
				#const PREDATOR 812 /* jaguar */
			percent_chance 50	
				#const PREDATOR 1031 /* crocodile */
			#const WOODS4 20ndom
			percent_chance 50
				#const GRAZER 884 /* wild camel */
			percent_chance 50
				#const GRAZER 835 /* wild horse */
		end_random
		#const BIRD1 1028 /* stork */
		#const BIRD2 816 /* macaw */		
	
	elseif TROPICALSTYLE
		start_random
			percent_chance 50			
				#const CATTLE 833 /* turkey */
			percent_chance 50			
				#const CATTLE 305 /* llama */
		end_random
		
		#const HUNT1 65 /* deer */
		#const HUNT2 1026 /* ostrich */
		
		start_random
			percent_chance 50
				#const BIGHUNT 822 /* javelina */
			percent_chance 50	
				#const BIGHUNT 1139 /* rhino */
		end_random
		start_random
			percent_chance 50		
				#const PREDATOR 812 /* jaguar */
			percent_chance 50	
				#const PREDATOR 1137 /* tiger */	
		end_random
		
		#const GRAZER 835 /* wild horse */
				
		#const BIRD1 816 /* macaw */
		#const BIRD2 1028 /* stork */			
	
	elseif MANGROVESTYLE
		#const CATTLE 1142 /* water buffalo */
		#const HUNT1 65 /* deer */
		#const HUNT2 65 /* deer */
		#const BIGHUNT 1139 /* rhino */
		start_random
			percent_chance 30
				#const PREDATOR 1031 /* crocodile */
			percent_chance 40
				#const PREDATOR 1135 /* Komodo dragon */
			percent_chance 30
				#const PREDATOR 1137 /* tiger */						
		end_random
		#const GRAZER 835 /* wild horse */
		#const BIRD1 816 /* macaw */
		#const BIRD2 96	/* hawk */			
	
	elseif RANDOMSTYLE
	
		start_random
			percent_chance 25
			#const CATTLE 594 /* sheep */
			percent_chance 15
			#const CATTLE 833 /* turkey */
			percent_chance 15
			#const CATTLE 305 /* llama */
			percent_chance 15
			#const CATTLE 705 /* cow */
			percent_chance 15
			#const CATTLE 1060 /* goat */
			percent_chance 15
			#const CATTLE 1142 /* water buffalo */
		end_random
		
		
		start_random
			percent_chance 30
			#const HUNT1 1026 /* ostrich */
			percent_chance 30
			#const HUNT1 1019 /* zebra */
			percent_chance 40
			#const HUNT1 65 /* deer */
		end_random
		start_random
			percent_chance 30
			#const HUNT2 1026 /* ostrich */
			percent_chance 30
			#const HUNT2 1019 /* zebra */
			percent_chance 40
			#const HUNT2 65 /* deer */
		end_random

		
		start_random
			percent_chance 20
			#const BIGHUNT 822 /* javelina */
			percent_chance 15	
			#const BIGHUNT 1139 /* rhino */
			percent_chance 15				
			#const BIGHUNT 412	/* elephant */
			percent_chance 50
			#const BIGHUNT 48 /* boar */
		end_random
		
		
		start_random
			percent_chance 14
			#const PREDATOR 1031 /* crocodile */
			percent_chance 14
			#const PREDATOR 1135 /* Komodo dragon */
			percent_chance 14
			#const PREDATOR 1137 /* tiger */	
			percent_chance 14		
			#const PREDATOR 1029 /* lion */
			percent_chance 14	
			#const PREDATOR 812 /* jaguar */
			percent_chance 16
			#const PREDATOR 126 /* wolf */
			percent_chance 14
			#const PREDATOR 486 /* bear */					
		end_random
		
		start_random
			percent_chance 50
			#const GRAZER 884 /* wild camel */
			percent_chance 50
			#const GRAZER 835 /* wild horse */
		end_random

		start_random
			percent_chance 20		
			#const BIRD1 816 /* macaw */
			percent_chance 20
			#const BIRD1 96	/* hawk */
			percent_chance 20
			#const BIRD1 1056 /* falcon */
			percent_chance 20			
			#const BIRD1 1028 /* stork */
			percent_chance 20	
			#const BIRD1 917 /* vulture */
		end_random
		
		start_random
			percent_chance 20		
			#const BIRD1 816 /* macaw */
			percent_chance 20
			#const BIRD1 96	/* hawk */
			percent_chance 20
			#const BIRD1 1056 /* falcon */
			percent_chance 20			
			#const BIRD1 1028 /* stork */
			percent_chance 20	
			#const BIRD1 917 /* vulture */
		end_random
	endif	
endif

/* water */

if HD

	start_random
		percent_chance 60
		#const WATER1 58
		percent_chance 40
		#const WATER1 1
	end_random
	#const WATER2 23
	start_random
		percent_chance 60
		#const WATER3 57
		percent_chance 40
		#const WATER3 22
	end_random

	
else
	#const WATER1 1
	#const WATER2 23
	#const WATER3 22
endif


/* fish */
if AOC
	start_random
		percent_chance 15
			#const FISH1 450 /* Marlin1 */
		percent_chance 15
			#const FISH1 451 /* Marlin2 */
		percent_chance 10
			#const FISH1 455 /* Dorado */
		percent_chance 10
			#const FISH1 456 /* Salmon */
		percent_chance 15
			#const FISH1 457 /* Tuna */
		percent_chance 20
			#const FISH1 458 /* Snapper */
		percent_chance 15
			#const FISH1 458 /* Perch */
	end_random
	
		start_random
		percent_chance 15
			#const FISH2 450 /* Marlin1 */
		percent_chance 15
			#const FISH2 451 /* Marlin2 */
		percent_chance 10
			#const FISH2 455 /* Dorado */
		percent_chance 10
			#const FISH2 456 /* Salmon */
		percent_chance 15
			#const FISH2 457 /* Tuna */
		percent_chance 20
			#const FISH2 458 /* Snapper */
		percent_chance 15
			#const FISH2 458 /* Perch */
	end_random
	
	#const SHOREFISH 69 /* shorefish */
else	

	start_random
	 	percent_chance 20
			#const FISH1 61 /* Dolphin */
		percent_chance 15
			#const FISH1 450 /* Marlin1 */
		percent_chance 15
			#const FISH1 451 /* Marlin2 */
		percent_chance 10
			#const FISH1 455 /* Dorado */
		percent_chance 10
			#const FISH1 456 /* Salmon */
		percent_chance 10
			#const FISH1 457 /* Tuna */
		percent_chance 10
			#const FISH1 458 /* Snapper */
		percent_chance 10
			#const FISH1 458 /* Perch */
	end_random

	start_random
	 	percent_chance 20
			#const FISH2 61 /* Dolphin */
		percent_chance 15
			#const FISH2 450 /* Marlin1 */
		percent_chance 15
			#const FISH2 451 /* Marlin2 */
		percent_chance 10
			#const FISH2 455 /* Dorado */
		percent_chance 10
			#const FISH2 456 /* Salmon */
		percent_chance 10
			#const FISH2 457 /* Tuna */
		percent_chance 10
			#const FISH2 458 /* Snapper */
		percent_chance 10
			#const FISH2 458 /* Perch */
	end_random	
	
	start_random	
		percent_chance 30
			#const SHOREFISH 1141 /* Box Turtle */
		percent_chance 70
			#const SHOREFISH 69 /* shore fish */
	end_random

endif	
	
<LAND_GENERATION>
	
/* 	baseterrain: */	
	
if FORESTMAP
	start_random
		percent_chance 70	
		base_terrain WOODS1
		percent_chance 20
		base_terrain WOODS2
		percent_chance 5	
		base_terrain WOODS3
		percent_chance 5
		base_terrain WOODS4
	end_random
	
elseif EMPTYMAP
	start_random
		percent_chance 25
		base_terrain FLOOR1
		percent_chance 20
		base_terrain FLOOR2
		percent_chance 10
		base_terrain FLOOR3
		percent_chance 5
		base_terrain FLOOR4
		percent_chance 10
		base_terrain SHORE1
		percent_chance 25
		base_terrain SHORE2
		percent_chance 5
		base_terrain SHORE3
	end_random

elseif RIVERMAP
	start_random
		percent_chance 74	
		base_terrain WATER1
		
		percent_chance 1	
		base_terrain SOIL1
		percent_chance 1
		base_terrain SOIL2
		percent_chance 1	
		base_terrain SOIL3
		percent_chance 1
		base_terrain SOIL4
		percent_chance 1
		terrain_type FORESTPATH1
		percent_chance 1
		terrain_type FORESTPATH2


		
		percent_chance 1
		base_terrain FLOOR1
		percent_chance 1
		base_terrain FLOOR2
		percent_chance 1
		base_terrain FLOOR3
		percent_chance 1
		base_terrain FLOOR4	
		
		percent_chance 2
		base_terrain SHORE1
		percent_chance 2
		base_terrain SHORE2
		percent_chance 1
		base_terrain SHORE3
		
		percent_chance 3
		base_terrain WOODS1
		percent_chance 3
		base_terrain WOODS2
		percent_chance 3
		base_terrain WOODS3
		percent_chance 2
		base_terrain WOODS4
	end_random	
	
	
elseif ARABIAMAP
	start_random
		percent_chance 60	
		base_terrain SOIL1
		percent_chance 20
		base_terrain SOIL2
		percent_chance 7
		base_terrain SOIL3
		percent_chance 3
		base_terrain SOIL4
		percent_chance 5
		terrain_type FORESTPATH1
		percent_chance 3
		terrain_type FORESTPATH2
		percent_chance 2
		terrain_type FORESTPATH3
	end_random

elseif ISLANDMAP
	start_random
		percent_chance 85	
		base_terrain WATER1
		percent_chance 5
		base_terrain SHORE1
		percent_chance 8
		base_terrain SHORE2
		percent_chance 2
		base_terrain SHORE3
	end_random	

elseif MIDDLEMAP	
	start_random
		percent_chance 25
		base_terrain WOODS1
		percent_chance 15
		base_terrain WOODS2
		percent_chance 5
		base_terrain WOODS3
		percent_chance 45	
		base_terrain WATER1
		percent_chance 2
		base_terrain SHORE1
		percent_chance 3
		base_terrain SHORE2
		percent_chance 3
		base_terrain FLOOR1
		percent_chance 2
		base_terrain FLOOR2
	end_random	
	
elseif RANDOMSTYLE	

		start_random
			percent_chance 10
			terrain_type SOIL1
			percent_chance 10
			terrain_type SOIL2
			percent_chance 10
			terrain_type SOIL3
			percent_chance 6
			terrain_type SOIL4
			percent_chance 4
			terrain_type SOIL5
			percent_chance 4
			terrain_type WOODS1
			percent_chance 3
			terrain_type WOODS2
			percent_chance 2
			terrain_type WOODS3
			percent_chance 1
			terrain_type WOODS4
			percent_chance 4
			terrain_type FORESTPATH1
			percent_chance 3
			terrain_type FORESTPATH2
			percent_chance 2
			terrain_type FORESTPATH3
			percent_chance 1
			terrain_type FORESTPATH4
			percent_chance 20
			terrain_type WATER1
			percent_chance 5
			terrain_type SHORE1
			percent_chance 5
			terrain_type SHORE2
			percent_chance 4
			terrain_type FLOOR1
			percent_chance 3
			terrain_type FLOOR2
			percent_chance 2
			terrain_type FLOOR3
			percent_chance 1
			terrain_type FLOOR4
		end_random
endif

/* ***************************************** MIDDLEMAP FOR ARENA/CONTINENTAL STYLE ******************************* */


if MIDDLEMAP

create_land
{
	/* terrain */
		start_random
			percent_chance 10
			terrain_type SOIL1
			percent_chance 10
			terrain_type SOIL2
			percent_chance 10
			terrain_type SOIL3
			percent_chance 6
			terrain_type SOIL4
			percent_chance 4
			terrain_type SOIL5
			percent_chance 4
			terrain_type WOODS1
			percent_chance 3
			terrain_type WOODS2
			percent_chance 2
			terrain_type WOODS3
			percent_chance 1
			terrain_type WOODS4
			percent_chance 4
			terrain_type FORESTPATH1
			percent_chance 3
			terrain_type FORESTPATH2
			percent_chance 2
			terrain_type FORESTPATH3
			percent_chance 1
			terrain_type FORESTPATH4
			percent_chance 20
			terrain_type WATER1
			percent_chance 5
			terrain_type SHORE1
			percent_chance 5
			terrain_type SHORE2
			percent_chance 4
			terrain_type FLOOR1
			percent_chance 3
			terrain_type FLOOR2
			percent_chance 2
			terrain_type FLOOR3
			percent_chance 1
			terrain_type FLOOR4
		end_random

	
	/* Size */
	start_random	
		percent_chance 20
		top_border 5
		bottom_border 5
		right_border 5
		left_border 5
		percent_chance 20
		top_border 10
		bottom_border 10
		right_border 10
		left_border 10
		percent_chance 20
		top_border 15
		bottom_border 15
		right_border 15
		left_border 15
		percent_chance 20
		top_border 20
		bottom_border 20
		right_border 20
		left_border 20		
		percent_chance 20
		top_border 25
		bottom_border 25
		right_border 25
		left_border 25
	end_random
	
	start_random	
		percent_chance 25 /* migration */
		land_percent 60
		base_size 10
		border_fuzziness 60	
		clumping_factor 10
		other_zone_avoidance_distance 6
		percent_chance 25 /* i dont know */
		land_percent 80
		base_size 10
		border_fuzziness 5	
		clumping_factor 10
		percent_chance 25 /* arena */
		land_percent 80	
		base_size 10			
		percent_chance 25 /* arena */
		land_percent 90
		base_size 10
	end_random
		
}

endif


/* EXTRA LANDS */

start_random
	percent_chance 20
		#define ONELAND
	percent_chance 20
		#define ONELAND
		#define TWOLAND
	percent_chance 20
		#define ONELAND
		#define TWOLAND
		#define THREELAND
	percent_chance 20
		#define ONELAND
		#define TWOLAND
		#define THREELAND
		#define FOURLAND
	percent_chance 20
		#define ONELAND
		#define TWOLAND
		#define THREELAND
		#define FOURLAND
		#define FIVELAND
end_random


if THREELAND
create_land  
{
		start_random
			percent_chance 7
			terrain_type SOIL1
			percent_chance 7
			terrain_type SOIL2
			percent_chance 7
			terrain_type SOIL3
			percent_chance 5
			terrain_type SOIL4
			percent_chance 4
			terrain_type SOIL5
			percent_chance 9
			terrain_type WOODS1
			percent_chance 8
			terrain_type WOODS2
			percent_chance 6
			terrain_type WOODS3
			percent_chance 4
			terrain_type WOODS4
			percent_chance 3
			terrain_type FORESTPATH1
			percent_chance 2
			terrain_type FORESTPATH2
			percent_chance 2
			terrain_type FORESTPATH3
			percent_chance 1
			terrain_type FORESTPATH4
			percent_chance 16
			terrain_type WATER1
			percent_chance 5
			terrain_type SHORE1
			percent_chance 4
			terrain_type SHORE2
			percent_chance 4
			terrain_type FLOOR1
			percent_chance 3
			terrain_type FLOOR2
			percent_chance 2
			terrain_type FLOOR3
			percent_chance 1
			terrain_type FLOOR4
		end_random

start_random 
	percent_chance 5
  	land_percent 5
	percent_chance 10
  	land_percent 15
	percent_chance 10
  	land_percent 20
	percent_chance 10
  	land_percent 30	
	percent_chance 10
  	land_percent 35
	percent_chance 10
  	land_percent 40	
	percent_chance 10
  	land_percent 45
	percent_chance 10
  	land_percent 50
	percent_chance 10
  	land_percent 55
	percent_chance 10
  	land_percent 75
	percent_chance 5
  	land_percent 90
end_random

start_random 
	percent_chance 10
		top_border -5
		right_border -5
		left_border -5
		bottom_border -5
	percent_chance 30
		top_border 0
		right_border 0
		left_border 0
		bottom_border 0
	percent_chance 20
		top_border 8
		right_border 8
		left_border 8
		bottom_border 8
	percent_chance 20
		top_border 14
		right_border 14
		left_border 14
		bottom_border 14
	percent_chance 10
		top_border 19
		right_border 19
		left_border 19
		bottom_border 19
	percent_chance 5
		top_border 25
		right_border 25
		left_border 25
		bottom_border 25
	percent_chance 5
		top_border 30
		right_border 30
		left_border 30
		bottom_border 30
end_random

start_random 
	percent_chance 10
  	base_size 6	
	percent_chance 10
  	base_size 7	
	percent_chance 10
  	base_size 8	
	percent_chance 10
  	base_size 9
	percent_chance 10
  	base_size 10
	percent_chance 10
  	base_size 11	
	percent_chance 10
  	base_size 12	
	percent_chance 10
  	base_size 13	
	percent_chance 10
  	base_size 14
	percent_chance 10
  	base_size 15
end_random

start_random 
	percent_chance 10
  	border_fuzziness 0
	percent_chance 10
  	border_fuzziness 1
	percent_chance 10
  	border_fuzziness 10
	percent_chance 10
  	border_fuzziness 20
	percent_chance 10
  	border_fuzziness 30
	percent_chance 10
  	border_fuzziness 50	
	percent_chance 10
  	border_fuzziness 65	
	percent_chance 10
  	border_fuzziness 80	
	percent_chance 10
  	border_fuzziness 95
	percent_chance 10
  	border_fuzziness 100
end_random

start_random 
	percent_chance 10
  	clumping_factor -99
	percent_chance 10
  	clumping_factor -50
	percent_chance 10
  	clumping_factor -25
	percent_chance 10
  	clumping_factor 5
	percent_chance 10
  	clumping_factor 15
	percent_chance 10
  	clumping_factor 25	
	percent_chance 10
  	clumping_factor 50	
	percent_chance 10
  	clumping_factor 75	
	percent_chance 10
  	clumping_factor 90
	percent_chance 10
  	clumping_factor 99
end_random


start_random
	percent_chance 20
	zone 1
	percent_chance 20
	zone 2
	percent_chance 30
	set_zone_randomly
	percent_chance 30
	set_zone_by_team
end_random

start_random
	percent_chance 10
	other_zone_avoidance_distance 0
	percent_chance 10
	other_zone_avoidance_distance 1
	percent_chance 10
	other_zone_avoidance_distance 2
	percent_chance 10
	other_zone_avoidance_distance 3
	percent_chance 10
	other_zone_avoidance_distance 4
	percent_chance 10
	other_zone_avoidance_distance 6
	percent_chance 10
	other_zone_avoidance_distance 8
	percent_chance 10
	other_zone_avoidance_distance 11
	percent_chance 10
	other_zone_avoidance_distance 15
	percent_chance 10
	other_zone_avoidance_distance 20
end_random
}
endif


if FIVELAND
create_land  
{
		start_random
			percent_chance 7
			terrain_type SOIL1
			percent_chance 7
			terrain_type SOIL2
			percent_chance 7
			terrain_type SOIL3
			percent_chance 5
			terrain_type SOIL4
			percent_chance 4
			terrain_type SOIL5
			percent_chance 9
			terrain_type WOODS1
			percent_chance 8
			terrain_type WOODS2
			percent_chance 6
			terrain_type WOODS3
			percent_chance 4
			terrain_type WOODS4
			percent_chance 3
			terrain_type FORESTPATH1
			percent_chance 2
			terrain_type FORESTPATH2
			percent_chance 2
			terrain_type FORESTPATH3
			percent_chance 1
			terrain_type FORESTPATH4
			percent_chance 16
			terrain_type WATER1
			percent_chance 5
			terrain_type SHORE1
			percent_chance 4
			terrain_type SHORE2
			percent_chance 4
			terrain_type FLOOR1
			percent_chance 3
			terrain_type FLOOR2
			percent_chance 2
			terrain_type FLOOR3
			percent_chance 1
			terrain_type FLOOR4
		end_random

start_random 
	percent_chance 5
  	land_percent 5
	percent_chance 10
  	land_percent 15
	percent_chance 10
  	land_percent 20
	percent_chance 10
  	land_percent 30	
	percent_chance 10
  	land_percent 35
	percent_chance 10
  	land_percent 40	
	percent_chance 10
  	land_percent 45
	percent_chance 10
  	land_percent 50
	percent_chance 10
  	land_percent 55
	percent_chance 10
  	land_percent 75
	percent_chance 5
  	land_percent 90
end_random

start_random 
	percent_chance 10
		top_border -5
		right_border -5
		left_border -5
		bottom_border -5
	percent_chance 30
		top_border 0
		right_border 0
		left_border 0
		bottom_border 0
	percent_chance 20
		top_border 8
		right_border 8
		left_border 8
		bottom_border 8
	percent_chance 20
		top_border 14
		right_border 14
		left_border 14
		bottom_border 14
	percent_chance 10
		top_border 19
		right_border 19
		left_border 19
		bottom_border 19
	percent_chance 5
		top_border 25
		right_border 25
		left_border 25
		bottom_border 25
	percent_chance 5
		top_border 30
		right_border 30
		left_border 30
		bottom_border 30
end_random

start_random 
	percent_chance 10
  	base_size 6	
	percent_chance 10
  	base_size 7	
	percent_chance 10
  	base_size 8	
	percent_chance 10
  	base_size 9
	percent_chance 10
  	base_size 10
	percent_chance 10
  	base_size 11	
	percent_chance 10
  	base_size 12	
	percent_chance 10
  	base_size 13	
	percent_chance 10
  	base_size 14
	percent_chance 10
  	base_size 15
end_random

start_random 
	percent_chance 10
  	border_fuzziness 0
	percent_chance 10
  	border_fuzziness 1
	percent_chance 10
  	border_fuzziness 10
	percent_chance 10
  	border_fuzziness 20
	percent_chance 10
  	border_fuzziness 30
	percent_chance 10
  	border_fuzziness 50	
	percent_chance 10
  	border_fuzziness 65	
	percent_chance 10
  	border_fuzziness 80	
	percent_chance 10
  	border_fuzziness 95
	percent_chance 10
  	border_fuzziness 100
end_random

start_random 
	percent_chance 10
  	clumping_factor -99
	percent_chance 10
  	clumping_factor -50
	percent_chance 10
  	clumping_factor -25
	percent_chance 10
  	clumping_factor 5
	percent_chance 10
  	clumping_factor 15
	percent_chance 10
  	clumping_factor 25	
	percent_chance 10
  	clumping_factor 50	
	percent_chance 10
  	clumping_factor 75	
	percent_chance 10
  	clumping_factor 90
	percent_chance 10
  	clumping_factor 99
end_random


start_random
	percent_chance 20
	zone 1
	percent_chance 20
	zone 2
	percent_chance 30
	set_zone_randomly
	percent_chance 30
	set_zone_by_team
end_random

start_random
	percent_chance 10
	other_zone_avoidance_distance 0
	percent_chance 10
	other_zone_avoidance_distance 1
	percent_chance 10
	other_zone_avoidance_distance 2
	percent_chance 10
	other_zone_avoidance_distance 3
	percent_chance 10
	other_zone_avoidance_distance 4
	percent_chance 10
	other_zone_avoidance_distance 6
	percent_chance 10
	other_zone_avoidance_distance 8
	percent_chance 10
	other_zone_avoidance_distance 11
	percent_chance 10
	other_zone_avoidance_distance 15
	percent_chance 10
	other_zone_avoidance_distance 20
end_random
}
endif
/* ***************************************** PLAYER LANDS ********************************************* */

/* spawn locations */

if MIDDLEAREA /* keeps playerlands near edge, preferably with a distance from middle for CTR and KOTH */
		#define SPREAD

else
	if VILLAGE	
		start_random
			percent_chance 10	#define CROWDED /* playerlands in the middle */
			percent_chance 10	#define INLINE /* playerlands in a strip, vertical or horizontal */
			percent_chance 80	#define SPREAD /* playerlands nicely spread */
		end_random
	elseif TOWN
		start_random
			percent_chance 5	#define CROWDED /* playerlands in the middle */
			percent_chance 5	#define INLINE /* playerlands in a strip, vertical or horizontal */
			percent_chance 90	#define SPREAD /* playerlands nicely spread */
		end_random
	else
			#define SPREAD
	endif
endif
	 
	
/* *********************** PLAYER LANDS *********************** */	
	

if ONETOWN
	create_player_lands
	{
	/* terrain type */
	if MADNESSMAP
		start_random
			percent_chance 20
			terrain_type SOIL1
			percent_chance 20
			terrain_type SOIL2
			percent_chance 14
			terrain_type SOIL3
			percent_chance 10
			terrain_type SOIL4
			percent_chance 6
			terrain_type SOIL5
			percent_chance 4
			terrain_type FORESTPATH1
			percent_chance 3
			terrain_type FORESTPATH2
			percent_chance 2
			terrain_type FORESTPATH3
			percent_chance 1
			terrain_type FORESTPATH4
			percent_chance 5
			terrain_type SHORE1
			percent_chance 5
			terrain_type SHORE2
			percent_chance 4
			terrain_type FLOOR1
			percent_chance 3
			terrain_type FLOOR2
			percent_chance 2
			terrain_type FLOOR3
			percent_chance 1
			terrain_type FLOOR4
		end_random
	elseif FORESTMAP
		start_random
			percent_chance 10
			terrain_type SOIL1
			percent_chance 8
			terrain_type SOIL2
			percent_chance 6
			terrain_type SOIL3
			percent_chance 4
			terrain_type SOIL4
			percent_chance 2
			terrain_type SOIL5
			percent_chance 30
			terrain_type FORESTPATH1
			percent_chance 20
			terrain_type FORESTPATH2
			percent_chance 10
			terrain_type FORESTPATH3
			percent_chance 10
			terrain_type FORESTPATH4
		end_random
	else
		start_random
			percent_chance 40
			terrain_type SOIL1	
			percent_chance 30
			terrain_type SOIL2
			percent_chance 15
			terrain_type SOIL3
			percent_chance 10
			terrain_type SOIL4
			percent_chance 5
			terrain_type SOIL5
		end_random
	endif

	/* borders */

	if CROWDED
		start_random 
			percent_chance 30
				top_border 8
				right_border 8
				left_border 8
				bottom_border 8
			percent_chance 30
				top_border 12
				right_border 12
				left_border 12
				bottom_border 12
			percent_chance 20
				top_border 16
				right_border 16
				left_border 16
				bottom_border 16
			percent_chance 10
				top_border 20
				right_border 20
				left_border 20
				bottom_border 20
			percent_chance 10
				top_border 24
				right_border 24
				left_border 24
				bottom_border 24
		end_random
		
	elseif INLINE
		start_random 
			percent_chance 10
				top_border 0
				right_border 25
				left_border 25
				bottom_border 0
			percent_chance 10
				top_border 0
				right_border 20
				left_border 20
				bottom_border 0
			percent_chance 20
				top_border 0
				right_border 15
				left_border 15
				bottom_border 0
			percent_chance 10
				top_border 0
				right_border 10
				left_border 10
				bottom_border 0
			percent_chance 10
				top_border 25
				right_border 0
				left_border 0
				bottom_border 25
			percent_chance 10
				top_border 20
				right_border 0
				left_border 0
				bottom_border 20
			percent_chance 20
				top_border 15
				right_border 0
				left_border 0
				bottom_border 15
			percent_chance 10
				top_border 10
				right_border 0
				left_border 0
				bottom_border 10
		end_random
		
	elseif SPREAD
		start_random 
			percent_chance 20
				top_border -5
				right_border -5
				left_border -5
				bottom_border -5
			percent_chance 50
				top_border 0
				right_border 0
				left_border 0
				bottom_border 0
			percent_chance 15
				top_border 3
				right_border 3
				left_border 3
				bottom_border 3
			percent_chance 15
				top_border 6
				right_border 6
				left_border 6
				bottom_border 6
		end_random
	endif


	/* player land size */	
	if FORESTMAP
		start_random 
			percent_chance 10
			land_percent 7
			percent_chance 10
			land_percent 14
			percent_chance 25
			land_percent 20
			percent_chance 25
			land_percent 40	
			percent_chance 30
			land_percent 55	
		end_random
		
		start_random 
			percent_chance 25
			base_size 8
			percent_chance 25
			base_size 10
			percent_chance 25
			base_size 12
			percent_chance 25
			base_size 15
		end_random
		
	elseif EMPTYMAP
			start_random 
			percent_chance 20
				land_percent 8
			percent_chance 20
				land_percent 16
			percent_chance 20
				land_percent 30
				percent_chance 20
				land_percent 40
			percent_chance 20
				land_percent 50
			end_random
	
		start_random 
			percent_chance 25
			base_size 9
			percent_chance 25
			base_size 11
			percent_chance 25
			base_size 13
			percent_chance 25
			base_size 15
		end_random
		
	elseif RIVERMAP
	
		start_random 
			percent_chance 70
			land_percent 100
			percent_chance 30
			land_percent 80
		end_random
	
		start_random 
			percent_chance 25
			base_size 9
			percent_chance 25
			base_size 11
			percent_chance 25
			base_size 13
			percent_chance 25
			base_size 15
		end_random
		
	elseif ARABIAMAP	

			land_percent 25

		start_random 
			percent_chance 25
			base_size 9
			percent_chance 25
			base_size 10
			percent_chance 25
			base_size 11
			percent_chance 25
			base_size 13
		end_random	
	
	elseif ISLANDMAP		

			start_random 
			percent_chance 20
				land_percent 15
			percent_chance 20
				land_percent 20
			percent_chance 20
				land_percent 25
			percent_chance 20
				land_percent 35
			percent_chance 20
				land_percent 50
			end_random	
				
		start_random 
			percent_chance 25
			base_size 9
			percent_chance 25
			base_size 11
			percent_chance 25
			base_size 13
			percent_chance 25
			base_size 15
		end_random	
	
	elseif MIDDLEMAP
	
		start_random 
			percent_chance 5
			land_percent 7
			percent_chance 10
			land_percent 12
			percent_chance 10
			land_percent 16
			percent_chance 10
			land_percent 20	
			percent_chance 10
			land_percent 25
			percent_chance 10
			land_percent 30	
			percent_chance 10
			land_percent 40
			percent_chance 10
			land_percent 50
			percent_chance 10
			land_percent 65
			percent_chance 10
			land_percent 80
			percent_chance 5
			land_percent 100
		end_random
	
		start_random 
			percent_chance 25
			base_size 8
			percent_chance 25
			base_size 10
			percent_chance 25
			base_size 12
			percent_chance 25
			base_size 15
		end_random	
		
	else
					
		start_random 
			percent_chance 5
			land_percent 7
			percent_chance 10
			land_percent 12
			percent_chance 10
			land_percent 16
			percent_chance 10
			land_percent 20	
			percent_chance 10
			land_percent 25
			percent_chance 10
			land_percent 30	
			percent_chance 10
			land_percent 40
			percent_chance 10
			land_percent 50
			percent_chance 10
			land_percent 65
			percent_chance 10
			land_percent 80
			percent_chance 5
			land_percent 100
		end_random

		if SPREAD
			start_random 
				percent_chance 10
				base_size 8	
				percent_chance 15
				base_size 10	
				percent_chance 15
				base_size 12
				percent_chance 15
				base_size 14
				percent_chance 15
				base_size 16	
				percent_chance 10
				base_size 18	
				percent_chance 10
				base_size 20	
				percent_chance 10
				base_size 22
			end_random
			else
			start_random 
				percent_chance 10
				base_size 8	
				percent_chance 20
				base_size 9	
				percent_chance 20
				base_size 10	
				percent_chance 20
				base_size 12
				percent_chance 20
				base_size 14
				percent_chance 10
				base_size 16	
			end_random	
		endif
	endif
		
	/* spacing of player lands */

	if RIVERMAP
			if SPREAD
                start_random
                    percent_chance 20
                    other_zone_avoidance_distance 14
                    percent_chance 20
                    other_zone_avoidance_distance 11
                    percent_chance 20
                    other_zone_avoidance_distance 8
                    percent_chance 20
                    other_zone_avoidance_distance 6
                    percent_chance 20
                    other_zone_avoidance_distance 5
                end_random
            else
                start_random
                    percent_chance 20
                    other_zone_avoidance_distance 4
                    percent_chance 20
                    other_zone_avoidance_distance 3
                    percent_chance 20
                    other_zone_avoidance_distance 8
                    percent_chance 20
                    other_zone_avoidance_distance 6
                    percent_chance 20
                    other_zone_avoidance_distance 5
                end_random
			endif

		
	elseif ISLANDMAP
            if SPREAD
                start_random
                    percent_chance 20
                    other_zone_avoidance_distance 20
                    percent_chance 20
                    other_zone_avoidance_distance 15
                    percent_chance 20
                    other_zone_avoidance_distance 11
                    percent_chance 20
                    other_zone_avoidance_distance 9
                    percent_chance 20
                    other_zone_avoidance_distance 7
                end_random
            else
                start_random
                    percent_chance 20
                    other_zone_avoidance_distance 11
                    percent_chance 20
                    other_zone_avoidance_distance 9
                    percent_chance 20
                    other_zone_avoidance_distance 7
                    percent_chance 20
                    other_zone_avoidance_distance 6
                    percent_chance 20
                    other_zone_avoidance_distance 5
                end_random
            endif


	elseif EMPTYMAP
            if SPREAD
                start_random
                    percent_chance 10
                    other_zone_avoidance_distance 20
                    percent_chance 10
                    other_zone_avoidance_distance 17
                    percent_chance 10
                    other_zone_avoidance_distance 14
                    percent_chance 30
                    other_zone_avoidance_distance 0
                    percent_chance 10
                    other_zone_avoidance_distance 1
                    percent_chance 10
                    other_zone_avoidance_distance 3
                    percent_chance 10
                    other_zone_avoidance_distance 7
                    percent_chance 10
                    other_zone_avoidance_distance 10
                end_random
            else
                start_random
                    percent_chance 10
                    other_zone_avoidance_distance 6
                    percent_chance 10
                    other_zone_avoidance_distance 4
                    percent_chance 10
                    other_zone_avoidance_distance 2
                    percent_chance 30
                    other_zone_avoidance_distance 0
                    percent_chance 10
                    other_zone_avoidance_distance 1
                    percent_chance 10
                    other_zone_avoidance_distance 3
                    percent_chance 10
                    other_zone_avoidance_distance 7
                    percent_chance 10
                    other_zone_avoidance_distance 10
                end_random
            endif

	elseif FORESTMAP
            if SPREAD
                start_random
                    percent_chance 10
                    other_zone_avoidance_distance 20
                    percent_chance 10
                    other_zone_avoidance_distance 17
                    percent_chance 10
                    other_zone_avoidance_distance 14
                    percent_chance 30
                    other_zone_avoidance_distance 0
                    percent_chance 10
                    other_zone_avoidance_distance 1
                    percent_chance 10
                    other_zone_avoidance_distance 3
                    percent_chance 10
                    other_zone_avoidance_distance 7
                    percent_chance 10
                    other_zone_avoidance_distance 10
                end_random
            else
                start_random
                    percent_chance 10
                    other_zone_avoidance_distance 6
                    percent_chance 10
                    other_zone_avoidance_distance 4
                    percent_chance 10
                    other_zone_avoidance_distance 2
                    percent_chance 30
                    other_zone_avoidance_distance 0
                    percent_chance 10
                    other_zone_avoidance_distance 1
                    percent_chance 10
                    other_zone_avoidance_distance 3
                    percent_chance 10
                    other_zone_avoidance_distance 7
                    percent_chance 10
                    other_zone_avoidance_distance 10
                end_random
            endif

	elseif ARABIAMAP
            if SPREAD
                start_random
                    percent_chance 10
                    other_zone_avoidance_distance 20
                    percent_chance 10
                    other_zone_avoidance_distance 17
                    percent_chance 10
                    other_zone_avoidance_distance 14
                    percent_chance 30
                    other_zone_avoidance_distance 0
                    percent_chance 10
                    other_zone_avoidance_distance 1
                    percent_chance 10
                    other_zone_avoidance_distance 3
                    percent_chance 10
                    other_zone_avoidance_distance 7
                    percent_chance 10
                    other_zone_avoidance_distance 10
                end_random
            else
                start_random
                    percent_chance 10
                    other_zone_avoidance_distance 6
                    percent_chance 10
                    other_zone_avoidance_distance 4
                    percent_chance 10
                    other_zone_avoidance_distance 2
                    percent_chance 30
                    other_zone_avoidance_distance 0
                    percent_chance 10
                    other_zone_avoidance_distance 1
                    percent_chance 10
                    other_zone_avoidance_distance 3
                    percent_chance 10
                    other_zone_avoidance_distance 7
                    percent_chance 10
                    other_zone_avoidance_distance 10
                end_random
            endif

	elseif MIDDLEMAP
	
		start_random
			percent_chance 75
			other_zone_avoidance_distance 0
			percent_chance 5
			other_zone_avoidance_distance 1
			percent_chance 5
			other_zone_avoidance_distance 2
			percent_chance 5
			other_zone_avoidance_distance 3
			percent_chance 5
			other_zone_avoidance_distance 4
			percent_chance 5
			other_zone_avoidance_distance 5

		end_random

	else
		
        start_random
            percent_chance 10
            other_zone_avoidance_distance 0
            percent_chance 10
            other_zone_avoidance_distance 1
            percent_chance 10
            other_zone_avoidance_distance 2
            percent_chance 10
            other_zone_avoidance_distance 3
            percent_chance 10
            other_zone_avoidance_distance 4
            percent_chance 10
            other_zone_avoidance_distance 6
            percent_chance 10
            other_zone_avoidance_distance 8
            percent_chance 10
            other_zone_avoidance_distance 11
            percent_chance 10
            other_zone_avoidance_distance 15
            percent_chance 10
            other_zone_avoidance_distance 20
        end_random

	endif	

	/* elevation */
	
	start_random
		percent_chance 15
		base_elevation 1
		percent_chance 65
		base_elevation 2
		percent_chance 4
		base_elevation 3
		percent_chance 4
		base_elevation 4
		percent_chance 4
		base_elevation 5
		percent_chance 4
		base_elevation 6
		percent_chance 4
		base_elevation 7
	end_random	
	
	/* fuzziness */
	
	start_random 
		percent_chance 10
		border_fuzziness 0
		percent_chance 10
		border_fuzziness 1
		percent_chance 10
		border_fuzziness 10
		percent_chance 10
		border_fuzziness 20
		percent_chance 10
		border_fuzziness 30
		percent_chance 10
		border_fuzziness 50	
		percent_chance 10
		border_fuzziness 65	
		percent_chance 10
		border_fuzziness 80	
		percent_chance 10
		border_fuzziness 95
		percent_chance 10
		border_fuzziness 100
	end_random

	/* clumping_factor */
	
	start_random 
		percent_chance 10
		clumping_factor -99
		percent_chance 8
		clumping_factor -50
		percent_chance 8
		clumping_factor -25
		percent_chance 8
		clumping_factor 5
		percent_chance 8
		clumping_factor 15
		percent_chance 8
		clumping_factor 25	
		percent_chance 10
		clumping_factor 50	
		percent_chance 10
		clumping_factor 75	
		percent_chance 10
		clumping_factor 90
		percent_chance 20
		clumping_factor 99
	end_random

	/* zone */

	start_random
		percent_chance 50
		set_zone_randomly
		percent_chance 50
		set_zone_by_team
	end_random
	
	}
endif

if TWOTOWN
	create_player_lands
	{
	/* terrain type */
	if MADNESSMAP
		start_random
			percent_chance 20
			terrain_type SOIL1
			percent_chance 20
			terrain_type SOIL2
			percent_chance 14
			terrain_type SOIL3
			percent_chance 10
			terrain_type SOIL4
			percent_chance 6
			terrain_type SOIL5
			percent_chance 4
			terrain_type FORESTPATH1
			percent_chance 3
			terrain_type FORESTPATH2
			percent_chance 2
			terrain_type FORESTPATH3
			percent_chance 1
			terrain_type FORESTPATH4
			percent_chance 5
			terrain_type SHORE1
			percent_chance 5
			terrain_type SHORE2
			percent_chance 4
			terrain_type FLOOR1
			percent_chance 3
			terrain_type FLOOR2
			percent_chance 2
			terrain_type FLOOR3
			percent_chance 1
			terrain_type FLOOR4
		end_random
	elseif FORESTMAP
		start_random
			percent_chance 10
			terrain_type SOIL1
			percent_chance 8
			terrain_type SOIL2
			percent_chance 6
			terrain_type SOIL3
			percent_chance 4
			terrain_type SOIL4
			percent_chance 2
			terrain_type SOIL5
			percent_chance 30
			terrain_type FORESTPATH1
			percent_chance 20
			terrain_type FORESTPATH2
			percent_chance 10
			terrain_type FORESTPATH3
			percent_chance 10
			terrain_type FORESTPATH4
		end_random
	else
		start_random
			percent_chance 40
			terrain_type SOIL1	
			percent_chance 30
			terrain_type SOIL2
			percent_chance 15
			terrain_type SOIL3
			percent_chance 10
			terrain_type SOIL4
			percent_chance 5
			terrain_type SOIL5
		end_random
	endif

	/* borders */

	if CROWDED
		start_random 
			percent_chance 30
				top_border 8
				right_border 8
				left_border 8
				bottom_border 8
			percent_chance 30
				top_border 12
				right_border 12
				left_border 12
				bottom_border 12
			percent_chance 20
				top_border 16
				right_border 16
				left_border 16
				bottom_border 16
			percent_chance 10
				top_border 20
				right_border 20
				left_border 20
				bottom_border 20
			percent_chance 10
				top_border 24
				right_border 24
				left_border 24
				bottom_border 24
		end_random
		
	elseif INLINE
		start_random 
			percent_chance 10
				top_border 0
				right_border 25
				left_border 25
				bottom_border 0
			percent_chance 10
				top_border 0
				right_border 20
				left_border 20
				bottom_border 0
			percent_chance 20
				top_border 0
				right_border 15
				left_border 15
				bottom_border 0
			percent_chance 10
				top_border 0
				right_border 10
				left_border 10
				bottom_border 0
			percent_chance 10
				top_border 25
				right_border 0
				left_border 0
				bottom_border 25
			percent_chance 10
				top_border 20
				right_border 0
				left_border 0
				bottom_border 20
			percent_chance 20
				top_border 15
				right_border 0
				left_border 0
				bottom_border 15
			percent_chance 10
				top_border 10
				right_border 0
				left_border 0
				bottom_border 10
		end_random
		
	elseif SPREAD
		start_random 
			percent_chance 20
				top_border -5
				right_border -5
				left_border -5
				bottom_border -5
			percent_chance 50
				top_border 0
				right_border 0
				left_border 0
				bottom_border 0
			percent_chance 15
				top_border 3
				right_border 3
				left_border 3
				bottom_border 3
			percent_chance 15
				top_border 6
				right_border 6
				left_border 6
				bottom_border 6
		end_random
	endif


	/* player land size */	
	if FORESTMAP
		start_random 
			percent_chance 10
			land_percent 7
			percent_chance 10
			land_percent 14
			percent_chance 25
			land_percent 20
			percent_chance 25
			land_percent 40	
			percent_chance 30
			land_percent 55	
		end_random
		
		start_random 
			percent_chance 25
			base_size 8
			percent_chance 25
			base_size 10
			percent_chance 25
			base_size 12
			percent_chance 25
			base_size 15
		end_random
		
	elseif EMPTYMAP
			start_random 
			percent_chance 20
				land_percent 8
			percent_chance 20
				land_percent 16
			percent_chance 20
				land_percent 30
				percent_chance 20
				land_percent 40
			percent_chance 20
				land_percent 50
			end_random
	
		start_random 
			percent_chance 25
			base_size 9
			percent_chance 25
			base_size 11
			percent_chance 25
			base_size 13
			percent_chance 25
			base_size 15
		end_random
		
	elseif RIVERMAP
	
		start_random 
			percent_chance 70
			land_percent 100
			percent_chance 30
			land_percent 80
		end_random
	
		start_random 
			percent_chance 25
			base_size 9
			percent_chance 25
			base_size 11
			percent_chance 25
			base_size 13
			percent_chance 25
			base_size 15
		end_random
		
	elseif ARABIAMAP	

			land_percent 25

		start_random 
			percent_chance 25
			base_size 9
			percent_chance 25
			base_size 10
			percent_chance 25
			base_size 11
			percent_chance 25
			base_size 13
		end_random	
	
	elseif ISLANDMAP		

			start_random 
			percent_chance 20
				land_percent 15
			percent_chance 20
				land_percent 20
			percent_chance 20
				land_percent 25
			percent_chance 20
				land_percent 35
			percent_chance 20
				land_percent 50
			end_random	
				
		start_random 
			percent_chance 25
			base_size 9
			percent_chance 25
			base_size 11
			percent_chance 25
			base_size 13
			percent_chance 25
			base_size 15
		end_random	
	
	elseif MIDDLEMAP
	
		start_random 
			percent_chance 5
			land_percent 7
			percent_chance 10
			land_percent 12
			percent_chance 10
			land_percent 16
			percent_chance 10
			land_percent 20	
			percent_chance 10
			land_percent 25
			percent_chance 10
			land_percent 30	
			percent_chance 10
			land_percent 40
			percent_chance 10
			land_percent 50
			percent_chance 10
			land_percent 65
			percent_chance 10
			land_percent 80
			percent_chance 5
			land_percent 100
		end_random
	
		start_random 
			percent_chance 25
			base_size 8
			percent_chance 25
			base_size 10
			percent_chance 25
			base_size 12
			percent_chance 25
			base_size 15
		end_random	
		
	else
					
		start_random 
			percent_chance 5
			land_percent 7
			percent_chance 10
			land_percent 12
			percent_chance 10
			land_percent 16
			percent_chance 10
			land_percent 20	
			percent_chance 10
			land_percent 25
			percent_chance 10
			land_percent 30	
			percent_chance 10
			land_percent 40
			percent_chance 10
			land_percent 50
			percent_chance 10
			land_percent 65
			percent_chance 10
			land_percent 80
			percent_chance 5
			land_percent 100
		end_random

		if SPREAD
			start_random 
				percent_chance 10
				base_size 8	
				percent_chance 15
				base_size 10	
				percent_chance 15
				base_size 12
				percent_chance 15
				base_size 14
				percent_chance 15
				base_size 16	
				percent_chance 10
				base_size 18	
				percent_chance 10
				base_size 20	
				percent_chance 10
				base_size 22
			end_random
			else
			start_random 
				percent_chance 10
				base_size 8	
				percent_chance 20
				base_size 9	
				percent_chance 20
				base_size 10	
				percent_chance 20
				base_size 12
				percent_chance 20
				base_size 14
				percent_chance 10
				base_size 16	
			end_random	
		endif
	endif
		
	/* spacing of player lands */

	if RIVERMAP
			if SPREAD
                start_random
                    percent_chance 20
                    other_zone_avoidance_distance 14
                    percent_chance 20
                    other_zone_avoidance_distance 11
                    percent_chance 20
                    other_zone_avoidance_distance 8
                    percent_chance 20
                    other_zone_avoidance_distance 6
                    percent_chance 20
                    other_zone_avoidance_distance 5
                end_random
            else
                start_random
                    percent_chance 20
                    other_zone_avoidance_distance 4
                    percent_chance 20
                    other_zone_avoidance_distance 3
                    percent_chance 20
                    other_zone_avoidance_distance 8
                    percent_chance 20
                    other_zone_avoidance_distance 6
                    percent_chance 20
                    other_zone_avoidance_distance 5
                end_random
			endif

		
	elseif ISLANDMAP
            if SPREAD
                start_random
                    percent_chance 20
                    other_zone_avoidance_distance 20
                    percent_chance 20
                    other_zone_avoidance_distance 15
                    percent_chance 20
                    other_zone_avoidance_distance 11
                    percent_chance 20
                    other_zone_avoidance_distance 9
                    percent_chance 20
                    other_zone_avoidance_distance 7
                end_random
            else
                start_random
                    percent_chance 20
                    other_zone_avoidance_distance 11
                    percent_chance 20
                    other_zone_avoidance_distance 9
                    percent_chance 20
                    other_zone_avoidance_distance 7
                    percent_chance 20
                    other_zone_avoidance_distance 6
                    percent_chance 20
                    other_zone_avoidance_distance 5
                end_random
            endif


	elseif EMPTYMAP
            if SPREAD
                start_random
                    percent_chance 10
                    other_zone_avoidance_distance 20
                    percent_chance 10
                    other_zone_avoidance_distance 17
                    percent_chance 10
                    other_zone_avoidance_distance 14
                    percent_chance 30
                    other_zone_avoidance_distance 0
                    percent_chance 10
                    other_zone_avoidance_distance 1
                    percent_chance 10
                    other_zone_avoidance_distance 3
                    percent_chance 10
                    other_zone_avoidance_distance 7
                    percent_chance 10
                    other_zone_avoidance_distance 10
                end_random
            else
                start_random
                    percent_chance 10
                    other_zone_avoidance_distance 6
                    percent_chance 10
                    other_zone_avoidance_distance 4
                    percent_chance 10
                    other_zone_avoidance_distance 2
                    percent_chance 30
                    other_zone_avoidance_distance 0
                    percent_chance 10
                    other_zone_avoidance_distance 1
                    percent_chance 10
                    other_zone_avoidance_distance 3
                    percent_chance 10
                    other_zone_avoidance_distance 7
                    percent_chance 10
                    other_zone_avoidance_distance 10
                end_random
            endif

	elseif FORESTMAP
            if SPREAD
                start_random
                    percent_chance 10
                    other_zone_avoidance_distance 20
                    percent_chance 10
                    other_zone_avoidance_distance 17
                    percent_chance 10
                    other_zone_avoidance_distance 14
                    percent_chance 30
                    other_zone_avoidance_distance 0
                    percent_chance 10
                    other_zone_avoidance_distance 1
                    percent_chance 10
                    other_zone_avoidance_distance 3
                    percent_chance 10
                    other_zone_avoidance_distance 7
                    percent_chance 10
                    other_zone_avoidance_distance 10
                end_random
            else
                start_random
                    percent_chance 10
                    other_zone_avoidance_distance 6
                    percent_chance 10
                    other_zone_avoidance_distance 4
                    percent_chance 10
                    other_zone_avoidance_distance 2
                    percent_chance 30
                    other_zone_avoidance_distance 0
                    percent_chance 10
                    other_zone_avoidance_distance 1
                    percent_chance 10
                    other_zone_avoidance_distance 3
                    percent_chance 10
                    other_zone_avoidance_distance 7
                    percent_chance 10
                    other_zone_avoidance_distance 10
                end_random
            endif

	elseif ARABIAMAP
            if SPREAD
                start_random
                    percent_chance 10
                    other_zone_avoidance_distance 20
                    percent_chance 10
                    other_zone_avoidance_distance 17
                    percent_chance 10
                    other_zone_avoidance_distance 14
                    percent_chance 30
                    other_zone_avoidance_distance 0
                    percent_chance 10
                    other_zone_avoidance_distance 1
                    percent_chance 10
                    other_zone_avoidance_distance 3
                    percent_chance 10
                    other_zone_avoidance_distance 7
                    percent_chance 10
                    other_zone_avoidance_distance 10
                end_random
            else
                start_random
                    percent_chance 10
                    other_zone_avoidance_distance 6
                    percent_chance 10
                    other_zone_avoidance_distance 4
                    percent_chance 10
                    other_zone_avoidance_distance 2
                    percent_chance 30
                    other_zone_avoidance_distance 0
                    percent_chance 10
                    other_zone_avoidance_distance 1
                    percent_chance 10
                    other_zone_avoidance_distance 3
                    percent_chance 10
                    other_zone_avoidance_distance 7
                    percent_chance 10
                    other_zone_avoidance_distance 10
                end_random
            endif

	elseif MIDDLEMAP
	
		start_random
			percent_chance 75
			other_zone_avoidance_distance 0
			percent_chance 5
			other_zone_avoidance_distance 1
			percent_chance 5
			other_zone_avoidance_distance 2
			percent_chance 5
			other_zone_avoidance_distance 3
			percent_chance 5
			other_zone_avoidance_distance 4
			percent_chance 5
			other_zone_avoidance_distance 5

		end_random

	else
		
        start_random
            percent_chance 10
            other_zone_avoidance_distance 0
            percent_chance 10
            other_zone_avoidance_distance 1
            percent_chance 10
            other_zone_avoidance_distance 2
            percent_chance 10
            other_zone_avoidance_distance 3
            percent_chance 10
            other_zone_avoidance_distance 4
            percent_chance 10
            other_zone_avoidance_distance 6
            percent_chance 10
            other_zone_avoidance_distance 8
            percent_chance 10
            other_zone_avoidance_distance 11
            percent_chance 10
            other_zone_avoidance_distance 15
            percent_chance 10
            other_zone_avoidance_distance 20
        end_random

	endif	

	/* elevation */
	
	start_random
		percent_chance 15
		base_elevation 1
		percent_chance 65
		base_elevation 2
		percent_chance 4
		base_elevation 3
		percent_chance 4
		base_elevation 4
		percent_chance 4
		base_elevation 5
		percent_chance 4
		base_elevation 6
		percent_chance 4
		base_elevation 7
	end_random
	
	/* fuzziness */
	
	start_random 
		percent_chance 10
		border_fuzziness 0
		percent_chance 10
		border_fuzziness 1
		percent_chance 10
		border_fuzziness 10
		percent_chance 10
		border_fuzziness 20
		percent_chance 10
		border_fuzziness 30
		percent_chance 10
		border_fuzziness 50	
		percent_chance 10
		border_fuzziness 65	
		percent_chance 10
		border_fuzziness 80	
		percent_chance 10
		border_fuzziness 95
		percent_chance 10
		border_fuzziness 100
	end_random

	/* clumping_factor */
	
	start_random 
		percent_chance 10
		clumping_factor -99
		percent_chance 8
		clumping_factor -50
		percent_chance 8
		clumping_factor -25
		percent_chance 8
		clumping_factor 5
		percent_chance 8
		clumping_factor 15
		percent_chance 8
		clumping_factor 25	
		percent_chance 10
		clumping_factor 50	
		percent_chance 10
		clumping_factor 75	
		percent_chance 10
		clumping_factor 90
		percent_chance 20
		clumping_factor 99
	end_random

	/* zone */

	start_random
		percent_chance 50
		set_zone_randomly
		percent_chance 50
		set_zone_by_team
	end_random
	
	}
endif
	
if THREETOWN
	create_player_lands
	{
	/* terrain type */
	if MADNESSMAP
		start_random
			percent_chance 20
			terrain_type SOIL1
			percent_chance 20
			terrain_type SOIL2
			percent_chance 14
			terrain_type SOIL3
			percent_chance 10
			terrain_type SOIL4
			percent_chance 6
			terrain_type SOIL5
			percent_chance 4
			terrain_type FORESTPATH1
			percent_chance 3
			terrain_type FORESTPATH2
			percent_chance 2
			terrain_type FORESTPATH3
			percent_chance 1
			terrain_type FORESTPATH4
			percent_chance 5
			terrain_type SHORE1
			percent_chance 5
			terrain_type SHORE2
			percent_chance 4
			terrain_type FLOOR1
			percent_chance 3
			terrain_type FLOOR2
			percent_chance 2
			terrain_type FLOOR3
			percent_chance 1
			terrain_type FLOOR4
		end_random
	elseif FORESTMAP
		start_random
			percent_chance 10
			terrain_type SOIL1
			percent_chance 8
			terrain_type SOIL2
			percent_chance 6
			terrain_type SOIL3
			percent_chance 4
			terrain_type SOIL4
			percent_chance 2
			terrain_type SOIL5
			percent_chance 30
			terrain_type FORESTPATH1
			percent_chance 20
			terrain_type FORESTPATH2
			percent_chance 10
			terrain_type FORESTPATH3
			percent_chance 10
			terrain_type FORESTPATH4
		end_random
	else
		start_random
			percent_chance 40
			terrain_type SOIL1	
			percent_chance 30
			terrain_type SOIL2
			percent_chance 15
			terrain_type SOIL3
			percent_chance 10
			terrain_type SOIL4
			percent_chance 5
			terrain_type SOIL5
		end_random
	endif

	/* borders */

	if CROWDED
		start_random 
			percent_chance 30
				top_border 8
				right_border 8
				left_border 8
				bottom_border 8
			percent_chance 30
				top_border 12
				right_border 12
				left_border 12
				bottom_border 12
			percent_chance 20
				top_border 16
				right_border 16
				left_border 16
				bottom_border 16
			percent_chance 10
				top_border 20
				right_border 20
				left_border 20
				bottom_border 20
			percent_chance 10
				top_border 24
				right_border 24
				left_border 24
				bottom_border 24
		end_random
		
	elseif INLINE
		start_random 
			percent_chance 10
				top_border 0
				right_border 25
				left_border 25
				bottom_border 0
			percent_chance 10
				top_border 0
				right_border 20
				left_border 20
				bottom_border 0
			percent_chance 20
				top_border 0
				right_border 15
				left_border 15
				bottom_border 0
			percent_chance 10
				top_border 0
				right_border 10
				left_border 10
				bottom_border 0
			percent_chance 10
				top_border 25
				right_border 0
				left_border 0
				bottom_border 25
			percent_chance 10
				top_border 20
				right_border 0
				left_border 0
				bottom_border 20
			percent_chance 20
				top_border 15
				right_border 0
				left_border 0
				bottom_border 15
			percent_chance 10
				top_border 10
				right_border 0
				left_border 0
				bottom_border 10
		end_random
		
	elseif SPREAD
		start_random 
			percent_chance 20
				top_border -5
				right_border -5
				left_border -5
				bottom_border -5
			percent_chance 50
				top_border 0
				right_border 0
				left_border 0
				bottom_border 0
			percent_chance 15
				top_border 3
				right_border 3
				left_border 3
				bottom_border 3
			percent_chance 15
				top_border 6
				right_border 6
				left_border 6
				bottom_border 6
		end_random
	endif


	/* player land size */	
	if FORESTMAP
		start_random 
			percent_chance 10
			land_percent 7
			percent_chance 10
			land_percent 14
			percent_chance 25
			land_percent 20
			percent_chance 25
			land_percent 40	
			percent_chance 30
			land_percent 55	
		end_random
		
		start_random 
			percent_chance 25
			base_size 8
			percent_chance 25
			base_size 10
			percent_chance 25
			base_size 12
			percent_chance 25
			base_size 15
		end_random
		
	elseif EMPTYMAP
			start_random 
			percent_chance 20
				land_percent 8
			percent_chance 20
				land_percent 16
			percent_chance 20
				land_percent 30
				percent_chance 20
				land_percent 40
			percent_chance 20
				land_percent 50
			end_random
	
		start_random 
			percent_chance 25
			base_size 9
			percent_chance 25
			base_size 11
			percent_chance 25
			base_size 13
			percent_chance 25
			base_size 15
		end_random
		
	elseif RIVERMAP
	
		start_random 
			percent_chance 70
			land_percent 100
			percent_chance 30
			land_percent 80
		end_random
	
		start_random 
			percent_chance 25
			base_size 9
			percent_chance 25
			base_size 11
			percent_chance 25
			base_size 13
			percent_chance 25
			base_size 15
		end_random
		
	elseif ARABIAMAP	

			land_percent 25

		start_random 
			percent_chance 25
			base_size 9
			percent_chance 25
			base_size 10
			percent_chance 25
			base_size 11
			percent_chance 25
			base_size 13
		end_random	
	
	elseif ISLANDMAP		

			start_random 
			percent_chance 20
				land_percent 15
			percent_chance 20
				land_percent 20
			percent_chance 20
				land_percent 25
			percent_chance 20
				land_percent 35
			percent_chance 20
				land_percent 50
			end_random	
				
		start_random 
			percent_chance 25
			base_size 9
			percent_chance 25
			base_size 11
			percent_chance 25
			base_size 13
			percent_chance 25
			base_size 15
		end_random		
	
	elseif MIDDLEMAP
	
		start_random 
			percent_chance 5
			land_percent 7
			percent_chance 10
			land_percent 12
			percent_chance 10
			land_percent 16
			percent_chance 10
			land_percent 20	
			percent_chance 10
			land_percent 25
			percent_chance 10
			land_percent 30	
			percent_chance 10
			land_percent 40
			percent_chance 10
			land_percent 50
			percent_chance 10
			land_percent 65
			percent_chance 10
			land_percent 80
			percent_chance 5
			land_percent 100
		end_random
	
		start_random 
			percent_chance 25
			base_size 8
			percent_chance 25
			base_size 10
			percent_chance 25
			base_size 12
			percent_chance 25
			base_size 15
		end_random	
		
	else
					
		start_random 
			percent_chance 5
			land_percent 7
			percent_chance 10
			land_percent 12
			percent_chance 10
			land_percent 16
			percent_chance 10
			land_percent 20	
			percent_chance 10
			land_percent 25
			percent_chance 10
			land_percent 30	
			percent_chance 10
			land_percent 40
			percent_chance 10
			land_percent 50
			percent_chance 10
			land_percent 65
			percent_chance 10
			land_percent 80
			percent_chance 5
			land_percent 100
		end_random

		if SPREAD
			start_random 
				percent_chance 10
				base_size 8	
				percent_chance 15
				base_size 10	
				percent_chance 15
				base_size 12
				percent_chance 15
				base_size 14
				percent_chance 15
				base_size 16	
				percent_chance 10
				base_size 18	
				percent_chance 10
				base_size 20	
				percent_chance 10
				base_size 22
			end_random
			else
			start_random 
				percent_chance 10
				base_size 8	
				percent_chance 20
				base_size 9	
				percent_chance 20
				base_size 10	
				percent_chance 20
				base_size 12
				percent_chance 20
				base_size 14
				percent_chance 10
				base_size 16	
			end_random	
		endif
	endif
		
	/* spacing of player lands */

	if RIVERMAP
			if SPREAD
                start_random
                    percent_chance 20
                    other_zone_avoidance_distance 14
                    percent_chance 20
                    other_zone_avoidance_distance 11
                    percent_chance 20
                    other_zone_avoidance_distance 8
                    percent_chance 20
                    other_zone_avoidance_distance 6
                    percent_chance 20
                    other_zone_avoidance_distance 5
                end_random
            else
                start_random
                    percent_chance 20
                    other_zone_avoidance_distance 4
                    percent_chance 20
                    other_zone_avoidance_distance 3
                    percent_chance 20
                    other_zone_avoidance_distance 8
                    percent_chance 20
                    other_zone_avoidance_distance 6
                    percent_chance 20
                    other_zone_avoidance_distance 5
                end_random
			endif

		
	elseif ISLANDMAP
            if SPREAD
                start_random
                    percent_chance 20
                    other_zone_avoidance_distance 20
                    percent_chance 20
                    other_zone_avoidance_distance 15
                    percent_chance 20
                    other_zone_avoidance_distance 11
                    percent_chance 20
                    other_zone_avoidance_distance 9
                    percent_chance 20
                    other_zone_avoidance_distance 7
                end_random
            else
                start_random
                    percent_chance 20
                    other_zone_avoidance_distance 11
                    percent_chance 20
                    other_zone_avoidance_distance 9
                    percent_chance 20
                    other_zone_avoidance_distance 7
                    percent_chance 20
                    other_zone_avoidance_distance 6
                    percent_chance 20
                    other_zone_avoidance_distance 5
                end_random
            endif


	elseif EMPTYMAP
            if SPREAD
                start_random
                    percent_chance 10
                    other_zone_avoidance_distance 20
                    percent_chance 10
                    other_zone_avoidance_distance 17
                    percent_chance 10
                    other_zone_avoidance_distance 14
                    percent_chance 30
                    other_zone_avoidance_distance 0
                    percent_chance 10
                    other_zone_avoidance_distance 1
                    percent_chance 10
                    other_zone_avoidance_distance 3
                    percent_chance 10
                    other_zone_avoidance_distance 7
                    percent_chance 10
                    other_zone_avoidance_distance 10
                end_random
            else
                start_random
                    percent_chance 10
                    other_zone_avoidance_distance 6
                    percent_chance 10
                    other_zone_avoidance_distance 4
                    percent_chance 10
                    other_zone_avoidance_distance 2
                    percent_chance 30
                    other_zone_avoidance_distance 0
                    percent_chance 10
                    other_zone_avoidance_distance 1
                    percent_chance 10
                    other_zone_avoidance_distance 3
                    percent_chance 10
                    other_zone_avoidance_distance 7
                    percent_chance 10
                    other_zone_avoidance_distance 10
                end_random
            endif

	elseif FORESTMAP
            if SPREAD
                start_random
                    percent_chance 10
                    other_zone_avoidance_distance 20
                    percent_chance 10
                    other_zone_avoidance_distance 17
                    percent_chance 10
                    other_zone_avoidance_distance 14
                    percent_chance 30
                    other_zone_avoidance_distance 0
                    percent_chance 10
                    other_zone_avoidance_distance 1
                    percent_chance 10
                    other_zone_avoidance_distance 3
                    percent_chance 10
                    other_zone_avoidance_distance 7
                    percent_chance 10
                    other_zone_avoidance_distance 10
                end_random
            else
                start_random
                    percent_chance 10
                    other_zone_avoidance_distance 6
                    percent_chance 10
                    other_zone_avoidance_distance 4
                    percent_chance 10
                    other_zone_avoidance_distance 2
                    percent_chance 30
                    other_zone_avoidance_distance 0
                    percent_chance 10
                    other_zone_avoidance_distance 1
                    percent_chance 10
                    other_zone_avoidance_distance 3
                    percent_chance 10
                    other_zone_avoidance_distance 7
                    percent_chance 10
                    other_zone_avoidance_distance 10
                end_random
            endif

	elseif ARABIAMAP
            if SPREAD
                start_random
                    percent_chance 10
                    other_zone_avoidance_distance 20
                    percent_chance 10
                    other_zone_avoidance_distance 17
                    percent_chance 10
                    other_zone_avoidance_distance 14
                    percent_chance 30
                    other_zone_avoidance_distance 0
                    percent_chance 10
                    other_zone_avoidance_distance 1
                    percent_chance 10
                    other_zone_avoidance_distance 3
                    percent_chance 10
                    other_zone_avoidance_distance 7
                    percent_chance 10
                    other_zone_avoidance_distance 10
                end_random
            else
                start_random
                    percent_chance 10
                    other_zone_avoidance_distance 6
                    percent_chance 10
                    other_zone_avoidance_distance 4
                    percent_chance 10
                    other_zone_avoidance_distance 2
                    percent_chance 30
                    other_zone_avoidance_distance 0
                    percent_chance 10
                    other_zone_avoidance_distance 1
                    percent_chance 10
                    other_zone_avoidance_distance 3
                    percent_chance 10
                    other_zone_avoidance_distance 7
                    percent_chance 10
                    other_zone_avoidance_distance 10
                end_random
            endif

	elseif MIDDLEMAP
	
		start_random
			percent_chance 75
			other_zone_avoidance_distance 0
			percent_chance 5
			other_zone_avoidance_distance 1
			percent_chance 5
			other_zone_avoidance_distance 2
			percent_chance 5
			other_zone_avoidance_distance 3
			percent_chance 5
			other_zone_avoidance_distance 4
			percent_chance 5
			other_zone_avoidance_distance 5

		end_random

	else
		
        start_random
            percent_chance 10
            other_zone_avoidance_distance 0
            percent_chance 10
            other_zone_avoidance_distance 1
            percent_chance 10
            other_zone_avoidance_distance 2
            percent_chance 10
            other_zone_avoidance_distance 3
            percent_chance 10
            other_zone_avoidance_distance 4
            percent_chance 10
            other_zone_avoidance_distance 6
            percent_chance 10
            other_zone_avoidance_distance 8
            percent_chance 10
            other_zone_avoidance_distance 11
            percent_chance 10
            other_zone_avoidance_distance 15
            percent_chance 10
            other_zone_avoidance_distance 20
        end_random

	endif	

	/* elevation */
	
	start_random
		percent_chance 15
		base_elevation 1
		percent_chance 65
		base_elevation 2
		percent_chance 4
		base_elevation 3
		percent_chance 4
		base_elevation 4
		percent_chance 4
		base_elevation 5
		percent_chance 4
		base_elevation 6
		percent_chance 4
		base_elevation 7
	end_random	
	
	/* fuzziness */
	
	start_random 
		percent_chance 10
		border_fuzziness 0
		percent_chance 10
		border_fuzziness 1
		percent_chance 10
		border_fuzziness 10
		percent_chance 10
		border_fuzziness 20
		percent_chance 10
		border_fuzziness 30
		percent_chance 10
		border_fuzziness 50	
		percent_chance 10
		border_fuzziness 65	
		percent_chance 10
		border_fuzziness 80	
		percent_chance 10
		border_fuzziness 95
		percent_chance 10
		border_fuzziness 100
	end_random

	/* clumping_factor */
	
	start_random 
		percent_chance 10
		clumping_factor -99
		percent_chance 8
		clumping_factor -50
		percent_chance 8
		clumping_factor -25
		percent_chance 8
		clumping_factor 5
		percent_chance 8
		clumping_factor 15
		percent_chance 8
		clumping_factor 25	
		percent_chance 10
		clumping_factor 50	
		percent_chance 10
		clumping_factor 75	
		percent_chance 10
		clumping_factor 90
		percent_chance 20
		clumping_factor 99
	end_random

	/* zone */

	start_random
		percent_chance 50
		set_zone_randomly
		percent_chance 50
		set_zone_by_team
	end_random
	
	}
endif

if FOURTOWN
	create_player_lands
	{
	/* terrain type */
	if MADNESSMAP
		start_random
			percent_chance 20
			terrain_type SOIL1
			percent_chance 20
			terrain_type SOIL2
			percent_chance 14
			terrain_type SOIL3
			percent_chance 10
			terrain_type SOIL4
			percent_chance 6
			terrain_type SOIL5
			percent_chance 4
			terrain_type FORESTPATH1
			percent_chance 3
			terrain_type FORESTPATH2
			percent_chance 2
			terrain_type FORESTPATH3
			percent_chance 1
			terrain_type FORESTPATH4
			percent_chance 5
			terrain_type SHORE1
			percent_chance 5
			terrain_type SHORE2
			percent_chance 4
			terrain_type FLOOR1
			percent_chance 3
			terrain_type FLOOR2
			percent_chance 2
			terrain_type FLOOR3
			percent_chance 1
			terrain_type FLOOR4
		end_random
	elseif FORESTMAP
		start_random
			percent_chance 10
			terrain_type SOIL1
			percent_chance 8
			terrain_type SOIL2
			percent_chance 6
			terrain_type SOIL3
			percent_chance 4
			terrain_type SOIL4
			percent_chance 2
			terrain_type SOIL5
			percent_chance 30
			terrain_type FORESTPATH1
			percent_chance 20
			terrain_type FORESTPATH2
			percent_chance 10
			terrain_type FORESTPATH3
			percent_chance 10
			terrain_type FORESTPATH4
		end_random
	else
		start_random
			percent_chance 40
			terrain_type SOIL1	
			percent_chance 30
			terrain_type SOIL2
			percent_chance 15
			terrain_type SOIL3
			percent_chance 10
			terrain_type SOIL4
			percent_chance 5
			terrain_type SOIL5
		end_random
	endif

	/* borders */

	if CROWDED
		start_random 
			percent_chance 30
				top_border 8
				right_border 8
				left_border 8
				bottom_border 8
			percent_chance 30
				top_border 12
				right_border 12
				left_border 12
				bottom_border 12
			percent_chance 20
				top_border 16
				right_border 16
				left_border 16
				bottom_border 16
			percent_chance 10
				top_border 20
				right_border 20
				left_border 20
				bottom_border 20
			percent_chance 10
				top_border 24
				right_border 24
				left_border 24
				bottom_border 24
		end_random
		
	elseif INLINE
		start_random 
			percent_chance 10
				top_border 0
				right_border 25
				left_border 25
				bottom_border 0
			percent_chance 10
				top_border 0
				right_border 20
				left_border 20
				bottom_border 0
			percent_chance 20
				top_border 0
				right_border 15
				left_border 15
				bottom_border 0
			percent_chance 10
				top_border 0
				right_border 10
				left_border 10
				bottom_border 0
			percent_chance 10
				top_border 25
				right_border 0
				left_border 0
				bottom_border 25
			percent_chance 10
				top_border 20
				right_border 0
				left_border 0
				bottom_border 20
			percent_chance 20
				top_border 15
				right_border 0
				left_border 0
				bottom_border 15
			percent_chance 10
				top_border 10
				right_border 0
				left_border 0
				bottom_border 10
		end_random
		
	elseif SPREAD
		start_random 
			percent_chance 20
				top_border -5
				right_border -5
				left_border -5
				bottom_border -5
			percent_chance 50
				top_border 0
				right_border 0
				left_border 0
				bottom_border 0
			percent_chance 15
				top_border 3
				right_border 3
				left_border 3
				bottom_border 3
			percent_chance 15
				top_border 6
				right_border 6
				left_border 6
				bottom_border 6
		end_random
	endif


	/* player land size */	
	if FORESTMAP
		start_random 
			percent_chance 10
			land_percent 7
			percent_chance 10
			land_percent 14
			percent_chance 25
			land_percent 20
			percent_chance 25
			land_percent 40	
			percent_chance 30
			land_percent 55	
		end_random
		
		start_random 
			percent_chance 25
			base_size 8
			percent_chance 25
			base_size 10
			percent_chance 25
			base_size 12
			percent_chance 25
			base_size 15
		end_random
		
	elseif EMPTYMAP
			start_random 
			percent_chance 20
				land_percent 8
			percent_chance 20
				land_percent 16
			percent_chance 20
				land_percent 30
				percent_chance 20
				land_percent 40
			percent_chance 20
				land_percent 50
			end_random
	
		start_random 
			percent_chance 25
			base_size 9
			percent_chance 25
			base_size 11
			percent_chance 25
			base_size 13
			percent_chance 25
			base_size 15
		end_random
		
	elseif RIVERMAP
	
		start_random 
			percent_chance 70
			land_percent 100
			percent_chance 30
			land_percent 80
		end_random
	
		start_random 
			percent_chance 25
			base_size 9
			percent_chance 25
			base_size 11
			percent_chance 25
			base_size 13
			percent_chance 25
			base_size 15
		end_random
		
	elseif ARABIAMAP	

			land_percent 25

		start_random 
			percent_chance 25
			base_size 9
			percent_chance 25
			base_size 10
			percent_chance 25
			base_size 11
			percent_chance 25
			base_size 13
		end_random	
	
	elseif ISLANDMAP		

			start_random 
			percent_chance 20
				land_percent 15
			percent_chance 20
				land_percent 20
			percent_chance 20
				land_percent 25
			percent_chance 20
				land_percent 35
			percent_chance 20
				land_percent 50
			end_random	
				
		start_random 
			percent_chance 25
			base_size 9
			percent_chance 25
			base_size 11
			percent_chance 25
			base_size 13
			percent_chance 25
			base_size 15
		end_random	
	
	elseif MIDDLEMAP
	
		start_random 
			percent_chance 5
			land_percent 7
			percent_chance 10
			land_percent 12
			percent_chance 10
			land_percent 16
			percent_chance 10
			land_percent 20	
			percent_chance 10
			land_percent 25
			percent_chance 10
			land_percent 30	
			percent_chance 10
			land_percent 40
			percent_chance 10
			land_percent 50
			percent_chance 10
			land_percent 65
			percent_chance 10
			land_percent 80
			percent_chance 5
			land_percent 100
		end_random
	
		start_random 
			percent_chance 25
			base_size 8
			percent_chance 25
			base_size 10
			percent_chance 25
			base_size 12
			percent_chance 25
			base_size 15
		end_random	
		
	else
					
		start_random 
			percent_chance 5
			land_percent 7
			percent_chance 10
			land_percent 12
			percent_chance 10
			land_percent 16
			percent_chance 10
			land_percent 20	
			percent_chance 10
			land_percent 25
			percent_chance 10
			land_percent 30	
			percent_chance 10
			land_percent 40
			percent_chance 10
			land_percent 50
			percent_chance 10
			land_percent 65
			percent_chance 10
			land_percent 80
			percent_chance 5
			land_percent 100
		end_random

		if SPREAD
			start_random 
				percent_chance 10
				base_size 8	
				percent_chance 15
				base_size 10	
				percent_chance 15
				base_size 12
				percent_chance 15
				base_size 14
				percent_chance 15
				base_size 16	
				percent_chance 10
				base_size 18	
				percent_chance 10
				base_size 20	
				percent_chance 10
				base_size 22
			end_random
			else
			start_random 
				percent_chance 10
				base_size 8	
				percent_chance 20
				base_size 9	
				percent_chance 20
				base_size 10	
				percent_chance 20
				base_size 12
				percent_chance 20
				base_size 14
				percent_chance 10
				base_size 16	
			end_random	
		endif
	endif
		
	/* spacing of player lands */

	if RIVERMAP
			if SPREAD
                start_random
                    percent_chance 20
                    other_zone_avoidance_distance 14
                    percent_chance 20
                    other_zone_avoidance_distance 11
                    percent_chance 20
                    other_zone_avoidance_distance 8
                    percent_chance 20
                    other_zone_avoidance_distance 6
                    percent_chance 20
                    other_zone_avoidance_distance 5
                end_random
            else
                start_random
                    percent_chance 20
                    other_zone_avoidance_distance 4
                    percent_chance 20
                    other_zone_avoidance_distance 3
                    percent_chance 20
                    other_zone_avoidance_distance 8
                    percent_chance 20
                    other_zone_avoidance_distance 6
                    percent_chance 20
                    other_zone_avoidance_distance 5
                end_random
			endif

		
	elseif ISLANDMAP
            if SPREAD
                start_random
                    percent_chance 20
                    other_zone_avoidance_distance 20
                    percent_chance 20
                    other_zone_avoidance_distance 15
                    percent_chance 20
                    other_zone_avoidance_distance 11
                    percent_chance 20
                    other_zone_avoidance_distance 9
                    percent_chance 20
                    other_zone_avoidance_distance 7
                end_random
            else
                start_random
                    percent_chance 20
                    other_zone_avoidance_distance 11
                    percent_chance 20
                    other_zone_avoidance_distance 9
                    percent_chance 20
                    other_zone_avoidance_distance 7
                    percent_chance 20
                    other_zone_avoidance_distance 6
                    percent_chance 20
                    other_zone_avoidance_distance 5
                end_random
            endif


	elseif EMPTYMAP
            if SPREAD
                start_random
                    percent_chance 10
                    other_zone_avoidance_distance 20
                    percent_chance 10
                    other_zone_avoidance_distance 17
                    percent_chance 10
                    other_zone_avoidance_distance 14
                    percent_chance 30
                    other_zone_avoidance_distance 0
                    percent_chance 10
                    other_zone_avoidance_distance 1
                    percent_chance 10
                    other_zone_avoidance_distance 3
                    percent_chance 10
                    other_zone_avoidance_distance 7
                    percent_chance 10
                    other_zone_avoidance_distance 10
                end_random
            else
                start_random
                    percent_chance 10
                    other_zone_avoidance_distance 6
                    percent_chance 10
                    other_zone_avoidance_distance 4
                    percent_chance 10
                    other_zone_avoidance_distance 2
                    percent_chance 30
                    other_zone_avoidance_distance 0
                    percent_chance 10
                    other_zone_avoidance_distance 1
                    percent_chance 10
                    other_zone_avoidance_distance 3
                    percent_chance 10
                    other_zone_avoidance_distance 7
                    percent_chance 10
                    other_zone_avoidance_distance 10
                end_random
            endif

	elseif FORESTMAP
            if SPREAD
                start_random
                    percent_chance 10
                    other_zone_avoidance_distance 20
                    percent_chance 10
                    other_zone_avoidance_distance 17
                    percent_chance 10
                    other_zone_avoidance_distance 14
                    percent_chance 30
                    other_zone_avoidance_distance 0
                    percent_chance 10
                    other_zone_avoidance_distance 1
                    percent_chance 10
                    other_zone_avoidance_distance 3
                    percent_chance 10
                    other_zone_avoidance_distance 7
                    percent_chance 10
                    other_zone_avoidance_distance 10
                end_random
            else
                start_random
                    percent_chance 10
                    other_zone_avoidance_distance 6
                    percent_chance 10
                    other_zone_avoidance_distance 4
                    percent_chance 10
                    other_zone_avoidance_distance 2
                    percent_chance 30
                    other_zone_avoidance_distance 0
                    percent_chance 10
                    other_zone_avoidance_distance 1
                    percent_chance 10
                    other_zone_avoidance_distance 3
                    percent_chance 10
                    other_zone_avoidance_distance 7
                    percent_chance 10
                    other_zone_avoidance_distance 10
                end_random
            endif

	elseif ARABIAMAP
            if SPREAD
                start_random
                    percent_chance 10
                    other_zone_avoidance_distance 20
                    percent_chance 10
                    other_zone_avoidance_distance 17
                    percent_chance 10
                    other_zone_avoidance_distance 14
                    percent_chance 30
                    other_zone_avoidance_distance 0
                    percent_chance 10
                    other_zone_avoidance_distance 1
                    percent_chance 10
                    other_zone_avoidance_distance 3
                    percent_chance 10
                    other_zone_avoidance_distance 7
                    percent_chance 10
                    other_zone_avoidance_distance 10
                end_random
            else
                start_random
                    percent_chance 10
                    other_zone_avoidance_distance 6
                    percent_chance 10
                    other_zone_avoidance_distance 4
                    percent_chance 10
                    other_zone_avoidance_distance 2
                    percent_chance 30
                    other_zone_avoidance_distance 0
                    percent_chance 10
                    other_zone_avoidance_distance 1
                    percent_chance 10
                    other_zone_avoidance_distance 3
                    percent_chance 10
                    other_zone_avoidance_distance 7
                    percent_chance 10
                    other_zone_avoidance_distance 10
                end_random
            endif

	elseif MIDDLEMAP
	
		start_random
			percent_chance 75
			other_zone_avoidance_distance 0
			percent_chance 5
			other_zone_avoidance_distance 1
			percent_chance 5
			other_zone_avoidance_distance 2
			percent_chance 5
			other_zone_avoidance_distance 3
			percent_chance 5
			other_zone_avoidance_distance 4
			percent_chance 5
			other_zone_avoidance_distance 5

		end_random

	else
		
        start_random
            percent_chance 10
            other_zone_avoidance_distance 0
            percent_chance 10
            other_zone_avoidance_distance 1
            percent_chance 10
            other_zone_avoidance_distance 2
            percent_chance 10
            other_zone_avoidance_distance 3
            percent_chance 10
            other_zone_avoidance_distance 4
            percent_chance 10
            other_zone_avoidance_distance 6
            percent_chance 10
            other_zone_avoidance_distance 8
            percent_chance 10
            other_zone_avoidance_distance 11
            percent_chance 10
            other_zone_avoidance_distance 15
            percent_chance 10
            other_zone_avoidance_distance 20
        end_random

	endif	
	
	/* elevation */
	
	start_random
		percent_chance 15
		base_elevation 1
		percent_chance 65
		base_elevation 2
		percent_chance 4
		base_elevation 3
		percent_chance 4
		base_elevation 4
		percent_chance 4
		base_elevation 5
		percent_chance 4
		base_elevation 6
		percent_chance 4
		base_elevation 7
	end_random
	
	/* fuzziness */
	
	start_random 
		percent_chance 10
		border_fuzziness 0
		percent_chance 10
		border_fuzziness 1
		percent_chance 10
		border_fuzziness 10
		percent_chance 10
		border_fuzziness 20
		percent_chance 10
		border_fuzziness 30
		percent_chance 10
		border_fuzziness 50	
		percent_chance 10
		border_fuzziness 65	
		percent_chance 10
		border_fuzziness 80	
		percent_chance 10
		border_fuzziness 95
		percent_chance 10
		border_fuzziness 100
	end_random

	/* clumping_factor */
	
	start_random 
		percent_chance 10
		clumping_factor -99
		percent_chance 8
		clumping_factor -50
		percent_chance 8
		clumping_factor -25
		percent_chance 8
		clumping_factor 5
		percent_chance 8
		clumping_factor 15
		percent_chance 8
		clumping_factor 25	
		percent_chance 10
		clumping_factor 50	
		percent_chance 10
		clumping_factor 75	
		percent_chance 10
		clumping_factor 90
		percent_chance 20
		clumping_factor 99
	end_random

	/* zone */

	start_random
		percent_chance 50
		set_zone_randomly
		percent_chance 50
		set_zone_by_team
	end_random
	
	}

	
endif

if ONELAND
create_land  
{
		start_random
			percent_chance 7
			terrain_type SOIL1
			percent_chance 7
			terrain_type SOIL2
			percent_chance 7
			terrain_type SOIL3
			percent_chance 5
			terrain_type SOIL4
			percent_chance 4
			terrain_type SOIL5
			percent_chance 9
			terrain_type WOODS1
			percent_chance 8
			terrain_type WOODS2
			percent_chance 6
			terrain_type WOODS3
			percent_chance 4
			terrain_type WOODS4
			percent_chance 3
			terrain_type FORESTPATH1
			percent_chance 2
			terrain_type FORESTPATH2
			percent_chance 2
			terrain_type FORESTPATH3
			percent_chance 1
			terrain_type FORESTPATH4
			percent_chance 16
			terrain_type WATER1
			percent_chance 5
			terrain_type SHORE1
			percent_chance 4
			terrain_type SHORE2
			percent_chance 4
			terrain_type FLOOR1
			percent_chance 3
			terrain_type FLOOR2
			percent_chance 2
			terrain_type FLOOR3
			percent_chance 1
			terrain_type FLOOR4
		end_random

start_random 
	percent_chance 5
  	land_percent 5
	percent_chance 10
  	land_percent 15
	percent_chance 10
  	land_percent 20
	percent_chance 10
  	land_percent 30	
	percent_chance 10
  	land_percent 35
	percent_chance 10
  	land_percent 40	
	percent_chance 10
  	land_percent 45
	percent_chance 10
  	land_percent 50
	percent_chance 10
  	land_percent 55
	percent_chance 10
  	land_percent 75
	percent_chance 5
  	land_percent 90
end_random

start_random 
	percent_chance 10
		top_border -5
		right_border -5
		left_border -5
		bottom_border -5
	percent_chance 30
		top_border 0
		right_border 0
		left_border 0
		bottom_border 0
	percent_chance 20
		top_border 8
		right_border 8
		left_border 8
		bottom_border 8
	percent_chance 20
		top_border 14
		right_border 14
		left_border 14
		bottom_border 14
	percent_chance 10
		top_border 19
		right_border 19
		left_border 19
		bottom_border 19
	percent_chance 5
		top_border 25
		right_border 25
		left_border 25
		bottom_border 25
	percent_chance 5
		top_border 30
		right_border 30
		left_border 30
		bottom_border 30
end_random

start_random 
	percent_chance 10
  	base_size 6	
	percent_chance 10
  	base_size 7	
	percent_chance 10
  	base_size 8	
	percent_chance 10
  	base_size 9
	percent_chance 10
  	base_size 10
	percent_chance 10
  	base_size 11	
	percent_chance 10
  	base_size 12	
	percent_chance 10
  	base_size 13	
	percent_chance 10
  	base_size 14
	percent_chance 10
  	base_size 15
end_random

	start_random
		percent_chance 25
		base_elevation 1
		percent_chance 50
		base_elevation 2
		percent_chance 5
		base_elevation 3
		percent_chance 5
		base_elevation 4
		percent_chance 5
		base_elevation 5
		percent_chance 5
		base_elevation 6
		percent_chance 5
		base_elevation 7
	end_random

start_random 
	percent_chance 10
  	border_fuzziness 0
	percent_chance 10
  	border_fuzziness 1
	percent_chance 10
  	border_fuzziness 10
	percent_chance 10
  	border_fuzziness 20
	percent_chance 10
  	border_fuzziness 30
	percent_chance 10
  	border_fuzziness 50	
	percent_chance 10
  	border_fuzziness 65	
	percent_chance 10
  	border_fuzziness 80	
	percent_chance 10
  	border_fuzziness 95
	percent_chance 10
  	border_fuzziness 100
end_random

start_random 
	percent_chance 10
  	clumping_factor -99
	percent_chance 10
  	clumping_factor -50
	percent_chance 10
  	clumping_factor -25
	percent_chance 10
  	clumping_factor 5
	percent_chance 10
  	clumping_factor 15
	percent_chance 10
  	clumping_factor 25	
	percent_chance 10
  	clumping_factor 50	
	percent_chance 10
  	clumping_factor 75	
	percent_chance 10
  	clumping_factor 90
	percent_chance 10
  	clumping_factor 99
end_random


start_random
	percent_chance 20
	zone 1
	percent_chance 20
	zone 2
	percent_chance 30
	set_zone_randomly
	percent_chance 30
	set_zone_by_team
end_random

start_random
	percent_chance 10
	other_zone_avoidance_distance 0
	percent_chance 10
	other_zone_avoidance_distance 1
	percent_chance 10
	other_zone_avoidance_distance 2
	percent_chance 10
	other_zone_avoidance_distance 3
	percent_chance 10
	other_zone_avoidance_distance 4
	percent_chance 10
	other_zone_avoidance_distance 6
	percent_chance 10
	other_zone_avoidance_distance 8
	percent_chance 10
	other_zone_avoidance_distance 11
	percent_chance 10
	other_zone_avoidance_distance 15
	percent_chance 10
	other_zone_avoidance_distance 20
end_random
}
endif

if TWOLAND
create_land  
{
		start_random
			percent_chance 7
			terrain_type SOIL1
			percent_chance 7
			terrain_type SOIL2
			percent_chance 7
			terrain_type SOIL3
			percent_chance 5
			terrain_type SOIL4
			percent_chance 4
			terrain_type SOIL5
			percent_chance 9
			terrain_type WOODS1
			percent_chance 8
			terrain_type WOODS2
			percent_chance 6
			terrain_type WOODS3
			percent_chance 4
			terrain_type WOODS4
			percent_chance 3
			terrain_type FORESTPATH1
			percent_chance 2
			terrain_type FORESTPATH2
			percent_chance 2
			terrain_type FORESTPATH3
			percent_chance 1
			terrain_type FORESTPATH4
			percent_chance 16
			terrain_type WATER1
			percent_chance 5
			terrain_type SHORE1
			percent_chance 4
			terrain_type SHORE2
			percent_chance 4
			terrain_type FLOOR1
			percent_chance 3
			terrain_type FLOOR2
			percent_chance 2
			terrain_type FLOOR3
			percent_chance 1
			terrain_type FLOOR4
		end_random

start_random 
	percent_chance 5
  	land_percent 5
	percent_chance 10
  	land_percent 15
	percent_chance 10
  	land_percent 20
	percent_chance 10
  	land_percent 30	
	percent_chance 10
  	land_percent 35
	percent_chance 10
  	land_percent 40	
	percent_chance 10
  	land_percent 45
	percent_chance 10
  	land_percent 50
	percent_chance 10
  	land_percent 55
	percent_chance 10
  	land_percent 75
	percent_chance 5
  	land_percent 90
end_random

start_random 
	percent_chance 10
		top_border -5
		right_border -5
		left_border -5
		bottom_border -5
	percent_chance 30
		top_border 0
		right_border 0
		left_border 0
		bottom_border 0
	percent_chance 20
		top_border 8
		right_border 8
		left_border 8
		bottom_border 8
	percent_chance 20
		top_border 14
		right_border 14
		left_border 14
		bottom_border 14
	percent_chance 10
		top_border 19
		right_border 19
		left_border 19
		bottom_border 19
	percent_chance 5
		top_border 25
		right_border 25
		left_border 25
		bottom_border 25
	percent_chance 5
		top_border 30
		right_border 30
		left_border 30
		bottom_border 30
end_random

start_random 
	percent_chance 10
  	base_size 6	
	percent_chance 10
  	base_size 7	
	percent_chance 10
  	base_size 8	
	percent_chance 10
  	base_size 9
	percent_chance 10
  	base_size 10
	percent_chance 10
  	base_size 11	
	percent_chance 10
  	base_size 12	
	percent_chance 10
  	base_size 13	
	percent_chance 10
  	base_size 14
	percent_chance 10
  	base_size 15
end_random

	start_random
		percent_chance 25
		base_elevation 1
		percent_chance 50
		base_elevation 2
		percent_chance 5
		base_elevation 3
		percent_chance 5
		base_elevation 4
		percent_chance 5
		base_elevation 5
		percent_chance 5
		base_elevation 6
		percent_chance 5
		base_elevation 7
	end_random

start_random 
	percent_chance 10
  	border_fuzziness 0
	percent_chance 10
  	border_fuzziness 1
	percent_chance 10
  	border_fuzziness 10
	percent_chance 10
  	border_fuzziness 20
	percent_chance 10
  	border_fuzziness 30
	percent_chance 10
  	border_fuzziness 50	
	percent_chance 10
  	border_fuzziness 65	
	percent_chance 10
  	border_fuzziness 80	
	percent_chance 10
  	border_fuzziness 95
	percent_chance 10
  	border_fuzziness 100
end_random

start_random 
	percent_chance 10
  	clumping_factor -99
	percent_chance 10
  	clumping_factor -50
	percent_chance 10
  	clumping_factor -25
	percent_chance 10
  	clumping_factor 5
	percent_chance 10
  	clumping_factor 15
	percent_chance 10
  	clumping_factor 25	
	percent_chance 10
  	clumping_factor 50	
	percent_chance 10
  	clumping_factor 75	
	percent_chance 10
  	clumping_factor 90
	percent_chance 10
  	clumping_factor 99
end_random


start_random
	percent_chance 20
	zone 1
	percent_chance 20
	zone 2
	percent_chance 30
	set_zone_randomly
	percent_chance 30
	set_zone_by_team
end_random

start_random
	percent_chance 10
	other_zone_avoidance_distance 0
	percent_chance 10
	other_zone_avoidance_distance 1
	percent_chance 10
	other_zone_avoidance_distance 2
	percent_chance 10
	other_zone_avoidance_distance 3
	percent_chance 10
	other_zone_avoidance_distance 4
	percent_chance 10
	other_zone_avoidance_distance 6
	percent_chance 10
	other_zone_avoidance_distance 8
	percent_chance 10
	other_zone_avoidance_distance 11
	percent_chance 10
	other_zone_avoidance_distance 15
	percent_chance 10
	other_zone_avoidance_distance 20
end_random
}
endif


if FOURLAND
create_land  
{
		start_random
			percent_chance 7
			terrain_type SOIL1
			percent_chance 7
			terrain_type SOIL2
			percent_chance 7
			terrain_type SOIL3
			percent_chance 5
			terrain_type SOIL4
			percent_chance 4
			terrain_type SOIL5
			percent_chance 9
			terrain_type WOODS1
			percent_chance 8
			terrain_type WOODS2
			percent_chance 6
			terrain_type WOODS3
			percent_chance 4
			terrain_type WOODS4
			percent_chance 3
			terrain_type FORESTPATH1
			percent_chance 2
			terrain_type FORESTPATH2
			percent_chance 2
			terrain_type FORESTPATH3
			percent_chance 1
			terrain_type FORESTPATH4
			percent_chance 16
			terrain_type WATER1
			percent_chance 5
			terrain_type SHORE1
			percent_chance 4
			terrain_type SHORE2
			percent_chance 4
			terrain_type FLOOR1
			percent_chance 3
			terrain_type FLOOR2
			percent_chance 2
			terrain_type FLOOR3
			percent_chance 1
			terrain_type FLOOR4
		end_random

start_random 
	percent_chance 5
  	land_percent 5
	percent_chance 10
  	land_percent 15
	percent_chance 10
  	land_percent 20
	percent_chance 10
  	land_percent 30	
	percent_chance 10
  	land_percent 35
	percent_chance 10
  	land_percent 40	
	percent_chance 10
  	land_percent 45
	percent_chance 10
  	land_percent 50
	percent_chance 10
  	land_percent 55
	percent_chance 10
  	land_percent 75
	percent_chance 5
  	land_percent 90
end_random

start_random 
	percent_chance 10
		top_border -5
		right_border -5
		left_border -5
		bottom_border -5
	percent_chance 30
		top_border 0
		right_border 0
		left_border 0
		bottom_border 0
	percent_chance 20
		top_border 8
		right_border 8
		left_border 8
		bottom_border 8
	percent_chance 20
		top_border 14
		right_border 14
		left_border 14
		bottom_border 14
	percent_chance 10
		top_border 19
		right_border 19
		left_border 19
		bottom_border 19
	percent_chance 5
		top_border 25
		right_border 25
		left_border 25
		bottom_border 25
	percent_chance 5
		top_border 30
		right_border 30
		left_border 30
		bottom_border 30
end_random

start_random 
	percent_chance 10
  	base_size 6	
	percent_chance 10
  	base_size 7	
	percent_chance 10
  	base_size 8	
	percent_chance 10
  	base_size 9
	percent_chance 10
  	base_size 10
	percent_chance 10
  	base_size 11	
	percent_chance 10
  	base_size 12	
	percent_chance 10
  	base_size 13	
	percent_chance 10
  	base_size 14
	percent_chance 10
  	base_size 15
end_random

	start_random
		percent_chance 25
		base_elevation 1
		percent_chance 50
		base_elevation 2
		percent_chance 5
		base_elevation 3
		percent_chance 5
		base_elevation 4
		percent_chance 5
		base_elevation 5
		percent_chance 5
		base_elevation 6
		percent_chance 5
		base_elevation 7
	end_random

start_random 
	percent_chance 10
  	border_fuzziness 0
	percent_chance 10
  	border_fuzziness 1
	percent_chance 10
  	border_fuzziness 10
	percent_chance 10
  	border_fuzziness 20
	percent_chance 10
  	border_fuzziness 30
	percent_chance 10
  	border_fuzziness 50	
	percent_chance 10
  	border_fuzziness 65	
	percent_chance 10
  	border_fuzziness 80	
	percent_chance 10
  	border_fuzziness 95
	percent_chance 10
  	border_fuzziness 100
end_random

start_random 
	percent_chance 10
  	clumping_factor -99
	percent_chance 10
  	clumping_factor -50
	percent_chance 10
  	clumping_factor -25
	percent_chance 10
  	clumping_factor 5
	percent_chance 10
  	clumping_factor 15
	percent_chance 10
  	clumping_factor 25	
	percent_chance 10
  	clumping_factor 50	
	percent_chance 10
  	clumping_factor 75	
	percent_chance 10
  	clumping_factor 90
	percent_chance 10
  	clumping_factor 99
end_random


start_random
	percent_chance 20
	zone 1
	percent_chance 20
	zone 2
	percent_chance 30
	set_zone_randomly
	percent_chance 30
	set_zone_by_team
end_random

start_random
	percent_chance 10
	other_zone_avoidance_distance 0
	percent_chance 10
	other_zone_avoidance_distance 1
	percent_chance 10
	other_zone_avoidance_distance 2
	percent_chance 10
	other_zone_avoidance_distance 3
	percent_chance 10
	other_zone_avoidance_distance 4
	percent_chance 10
	other_zone_avoidance_distance 6
	percent_chance 10
	other_zone_avoidance_distance 8
	percent_chance 10
	other_zone_avoidance_distance 11
	percent_chance 10
	other_zone_avoidance_distance 15
	percent_chance 10
	other_zone_avoidance_distance 20
end_random
}
endif



/* ***************************************************************************************** */
/* ************************************* Middle area *************************************** */
/* ***************************************************************************************** */




if MIDDLEAREA

create_land 
	{

		start_random
			percent_chance 30
			terrain_type SOIL3
			percent_chance 30
			terrain_type SOIL2
			percent_chance 12
			terrain_type FLOOR2
			percent_chance 12
			terrain_type FLOOR1
			percent_chance 8
			terrain_type SHORE2
			percent_chance 8
			terrain_type SHORE1
		end_random

	
	start_random
		percent_chance 25	
		base_size 10
		percent_chance 25	
		base_size 12
		percent_chance 25	
		base_size 14
		percent_chance 25	
		base_size 16
	end_random

	start_random
		percent_chance 25
		base_elevation 1
		percent_chance 50
		base_elevation 2
		percent_chance 5
		base_elevation 3
		percent_chance 5
		base_elevation 4
		percent_chance 5
		base_elevation 5
		percent_chance 5
		base_elevation 6
		percent_chance 5
		base_elevation 7
	end_random
	
	land_position 50 50

		start_random 
			percent_chance 25
				top_border 25
				right_border 25
				left_border 25
				bottom_border 25
			percent_chance 25
				top_border 30
				right_border 30
				left_border 30
				bottom_border 30
			percent_chance 25
				top_border 35
				right_border 35
				left_border 35
				bottom_border 35
			percent_chance 25
				top_border 40
				right_border 40
				left_border 40
				bottom_border 40
		end_random
		
	}
	
endif

if CTRUP
	create_land 
	{
	terrain_type FLOOR0
	number_of_tiles 200
	base_size 4	
	land_position 50 50

	start_random
	percent_chance 25
	base_elevation 1
	percent_chance 50
	base_elevation 2
	percent_chance 5
	base_elevation 3
	percent_chance 5
	base_elevation 4
	percent_chance 5
	base_elevation 5
	percent_chance 5
	base_elevation 6
	percent_chance 5
	base_elevation 7
	end_random
	
	
	top_border 45
	bottom_border 45
	right_border 45
	left_border 45
	
	border_fuzziness 100
	
	land_id 51
	}		
		
endif	

if MONUMENTALMIDDLE
	create_land 
	{
	terrain_type FLOOR0
	number_of_tiles 200
	base_size 4	
	land_position 50 50

	start_random
	percent_chance 25
	base_elevation 1
	percent_chance 50
	base_elevation 2
	percent_chance 5
	base_elevation 3
	percent_chance 5
	base_elevation 4
	percent_chance 5
	base_elevation 5
	percent_chance 5
	base_elevation 6
	percent_chance 5
	base_elevation 7
	end_random
	
	
	top_border 45
	bottom_border 45
	right_border 45
	left_border 45
	
	border_fuzziness 100
	
	land_id 51
	}		
		
endif	

<TERRAIN_GENERATION>

/* ************************************* extra soils ******************************************************* */

create_terrain SOIL1
{
start_random
	percent_chance 25
  	base_terrain FLOOR1
	percent_chance 25
  	base_terrain FLOOR2
	percent_chance 25
  	base_terrain FLOOR3
	percent_chance 25
  	base_terrain FLOOR4
end_random

start_random
	percent_chance 10
	land_percent 5
	percent_chance 10
	land_percent 8
	percent_chance 10
	land_percent 12
	percent_chance 25
	land_percent 15
	percent_chance 25
	land_percent 18
	percent_chance 10
	land_percent 25
	percent_chance 5
	land_percent 33
	percent_chance 5
	land_percent 45
end_random

start_random
	percent_chance 10
	number_of_clumps 2
	percent_chance 10
	number_of_clumps 4
	percent_chance 10
	number_of_clumps 6
	percent_chance 10
	number_of_clumps 10
	percent_chance 10
	number_of_clumps 15
	percent_chance 10
	number_of_clumps 20
	percent_chance 10
	number_of_clumps 25
	percent_chance 10
	number_of_clumps 30
	percent_chance 10
	number_of_clumps 40
	percent_chance 10
	number_of_clumps 100
end_random

start_random
	percent_chance 20
	spacing_to_other_terrain_types 0
	percent_chance 20
	spacing_to_other_terrain_types 1
	percent_chance 20
	spacing_to_other_terrain_types 2
	percent_chance 10
	spacing_to_other_terrain_types 5
	percent_chance 10
	spacing_to_other_terrain_types 7
	percent_chance 10
	spacing_to_other_terrain_types 9
	percent_chance 10
	spacing_to_other_terrain_types 10
end_random

start_random
	percent_chance 20
	clumping_factor 1
	percent_chance 10
	clumping_factor 5
	percent_chance 10
	clumping_factor 10
	percent_chance 10
	clumping_factor 20
	percent_chance 10
	clumping_factor 40
	percent_chance 20
	clumping_factor 60
	percent_chance 20
	clumping_factor 99
end_random

set_scale_by_size
set_scale_by_groups
}

create_terrain SOIL1
{
start_random
	percent_chance 25
  	base_terrain WOODS1
	percent_chance 25
  	base_terrain WOODS2
	percent_chance 25
  	base_terrain WOODS3
	percent_chance 25
  	base_terrain WOODS4
end_random

start_random
	percent_chance 10
	land_percent 5
	percent_chance 20
	land_percent 8
	percent_chance 25
	land_percent 10
	percent_chance 25
	land_percent 12
	percent_chance 20
	land_percent 15
end_random

start_random
	percent_chance 10
	number_of_clumps 2
	percent_chance 10
	number_of_clumps 4
	percent_chance 10
	number_of_clumps 6
	percent_chance 10
	number_of_clumps 10
	percent_chance 10
	number_of_clumps 15
	percent_chance 10
	number_of_clumps 20
	percent_chance 10
	number_of_clumps 25
	percent_chance 10
	number_of_clumps 30
	percent_chance 10
	number_of_clumps 40
	percent_chance 10
	number_of_clumps 100
end_random

start_random
	percent_chance 20
	spacing_to_other_terrain_types 0
	percent_chance 20
	spacing_to_other_terrain_types 1
	percent_chance 20
	spacing_to_other_terrain_types 2
	percent_chance 10
	spacing_to_other_terrain_types 5
	percent_chance 10
	spacing_to_other_terrain_types 7
	percent_chance 10
	spacing_to_other_terrain_types 9
	percent_chance 10
	spacing_to_other_terrain_types 10
end_random

start_random
	percent_chance 20
	clumping_factor 1
	percent_chance 10
	clumping_factor 5
	percent_chance 10
	clumping_factor 10
	percent_chance 10
	clumping_factor 20
	percent_chance 10
	clumping_factor 40
	percent_chance 20
	clumping_factor 60
	percent_chance 20
	clumping_factor 99
end_random

set_scale_by_size
set_scale_by_groups
}

create_terrain SOIL1
{
start_random
	percent_chance 25
  	base_terrain SHORE1
	percent_chance 25
  	base_terrain SHORE2
	percent_chance 25
  	base_terrain SHORE3
	percent_chance 25
  	base_terrain WATER1
end_random

start_random
	percent_chance 10
	land_percent 5
	percent_chance 10
	land_percent 8
	percent_chance 10
	land_percent 10
	percent_chance 25
	land_percent 12
	percent_chance 25
	land_percent 15
	percent_chance 10
	land_percent 18
	percent_chance 5
	land_percent 20
	percent_chance 5
	land_percent 25
end_random

start_random
	percent_chance 10
	number_of_clumps 2
	percent_chance 10
	number_of_clumps 4
	percent_chance 10
	number_of_clumps 6
	percent_chance 10
	number_of_clumps 10
	percent_chance 10
	number_of_clumps 15
	percent_chance 10
	number_of_clumps 20
	percent_chance 10
	number_of_clumps 25
	percent_chance 10
	number_of_clumps 30
	percent_chance 10
	number_of_clumps 40
	percent_chance 10
	number_of_clumps 100
end_random

start_random
	percent_chance 20
	spacing_to_other_terrain_types 0
	percent_chance 20
	spacing_to_other_terrain_types 1
	percent_chance 20
	spacing_to_other_terrain_types 2
	percent_chance 10
	spacing_to_other_terrain_types 5
	percent_chance 10
	spacing_to_other_terrain_types 7
	percent_chance 10
	spacing_to_other_terrain_types 9
	percent_chance 10
	spacing_to_other_terrain_types 10
end_random

start_random
	percent_chance 20
	clumping_factor 1
	percent_chance 10
	clumping_factor 5
	percent_chance 10
	clumping_factor 10
	percent_chance 10
	clumping_factor 20
	percent_chance 10
	clumping_factor 40
	percent_chance 20
	clumping_factor 60
	percent_chance 20
	clumping_factor 99
end_random

set_scale_by_size
set_scale_by_groups
}

create_terrain SOIL2
{
start_random
	percent_chance 25
  	base_terrain FLOOR1
	percent_chance 25
  	base_terrain FLOOR2
	percent_chance 25
  	base_terrain FLOOR3
	percent_chance 25
  	base_terrain FLOOR4
end_random

start_random
	percent_chance 10
	land_percent 5
	percent_chance 10
	land_percent 8
	percent_chance 10
	land_percent 12
	percent_chance 25
	land_percent 15
	percent_chance 25
	land_percent 18
	percent_chance 10
	land_percent 25
	percent_chance 5
	land_percent 33
	percent_chance 5
	land_percent 45
end_random

start_random
	percent_chance 10
	number_of_clumps 2
	percent_chance 10
	number_of_clumps 4
	percent_chance 10
	number_of_clumps 6
	percent_chance 10
	number_of_clumps 10
	percent_chance 10
	number_of_clumps 15
	percent_chance 10
	number_of_clumps 20
	percent_chance 10
	number_of_clumps 25
	percent_chance 10
	number_of_clumps 30
	percent_chance 10
	number_of_clumps 40
	percent_chance 10
	number_of_clumps 100
end_random

start_random
	percent_chance 20
	spacing_to_other_terrain_types 0
	percent_chance 20
	spacing_to_other_terrain_types 1
	percent_chance 20
	spacing_to_other_terrain_types 2
	percent_chance 10
	spacing_to_other_terrain_types 5
	percent_chance 10
	spacing_to_other_terrain_types 7
	percent_chance 10
	spacing_to_other_terrain_types 9
	percent_chance 10
	spacing_to_other_terrain_types 10
end_random

start_random
	percent_chance 20
	clumping_factor 1
	percent_chance 10
	clumping_factor 5
	percent_chance 10
	clumping_factor 10
	percent_chance 10
	clumping_factor 20
	percent_chance 10
	clumping_factor 40
	percent_chance 20
	clumping_factor 60
	percent_chance 20
	clumping_factor 99
end_random

set_scale_by_size
set_scale_by_groups
}

create_terrain SOIL2
{
start_random
	percent_chance 25
  	base_terrain WOODS1
	percent_chance 25
  	base_terrain WOODS2
	percent_chance 25
  	base_terrain WOODS3
	percent_chance 25
  	base_terrain WOODS4
end_random

start_random
	percent_chance 10
	land_percent 5
	percent_chance 20
	land_percent 8
	percent_chance 25
	land_percent 10
	percent_chance 25
	land_percent 12
	percent_chance 20
	land_percent 15
end_random

start_random
	percent_chance 10
	number_of_clumps 2
	percent_chance 10
	number_of_clumps 4
	percent_chance 10
	number_of_clumps 6
	percent_chance 10
	number_of_clumps 10
	percent_chance 10
	number_of_clumps 15
	percent_chance 10
	number_of_clumps 20
	percent_chance 10
	number_of_clumps 25
	percent_chance 10
	number_of_clumps 30
	percent_chance 10
	number_of_clumps 40
	percent_chance 10
	number_of_clumps 100
end_random

start_random
	percent_chance 20
	spacing_to_other_terrain_types 0
	percent_chance 20
	spacing_to_other_terrain_types 1
	percent_chance 20
	spacing_to_other_terrain_types 2
	percent_chance 10
	spacing_to_other_terrain_types 5
	percent_chance 10
	spacing_to_other_terrain_types 7
	percent_chance 10
	spacing_to_other_terrain_types 9
	percent_chance 10
	spacing_to_other_terrain_types 10
end_random

start_random
	percent_chance 20
	clumping_factor 1
	percent_chance 10
	clumping_factor 5
	percent_chance 10
	clumping_factor 10
	percent_chance 10
	clumping_factor 20
	percent_chance 10
	clumping_factor 40
	percent_chance 20
	clumping_factor 60
	percent_chance 20
	clumping_factor 99
end_random

set_scale_by_size
set_scale_by_groups
}

create_terrain SOIL2
{
start_random
	percent_chance 25
  	base_terrain SHORE1
	percent_chance 25
  	base_terrain SHORE2
	percent_chance 25
  	base_terrain SHORE3
	percent_chance 25
  	base_terrain WATER1
end_random

start_random
	percent_chance 10
	land_percent 5
	percent_chance 10
	land_percent 8
	percent_chance 10
	land_percent 10
	percent_chance 25
	land_percent 12
	percent_chance 25
	land_percent 15
	percent_chance 10
	land_percent 18
	percent_chance 5
	land_percent 20
	percent_chance 5
	land_percent 25
end_random

start_random
	percent_chance 10
	number_of_clumps 2
	percent_chance 10
	number_of_clumps 4
	percent_chance 10
	number_of_clumps 6
	percent_chance 10
	number_of_clumps 10
	percent_chance 10
	number_of_clumps 15
	percent_chance 10
	number_of_clumps 20
	percent_chance 10
	number_of_clumps 25
	percent_chance 10
	number_of_clumps 30
	percent_chance 10
	number_of_clumps 40
	percent_chance 10
	number_of_clumps 100
end_random

start_random
	percent_chance 20
	spacing_to_other_terrain_types 0
	percent_chance 20
	spacing_to_other_terrain_types 1
	percent_chance 20
	spacing_to_other_terrain_types 2
	percent_chance 10
	spacing_to_other_terrain_types 5
	percent_chance 10
	spacing_to_other_terrain_types 7
	percent_chance 10
	spacing_to_other_terrain_types 9
	percent_chance 10
	spacing_to_other_terrain_types 10
end_random

start_random
	percent_chance 20
	clumping_factor 1
	percent_chance 10
	clumping_factor 5
	percent_chance 10
	clumping_factor 10
	percent_chance 10
	clumping_factor 20
	percent_chance 10
	clumping_factor 40
	percent_chance 20
	clumping_factor 60
	percent_chance 20
	clumping_factor 99
end_random

set_scale_by_size
set_scale_by_groups
}

create_terrain SOIL3
{
start_random
	percent_chance 25
  	base_terrain FLOOR1
	percent_chance 25
  	base_terrain FLOOR2
	percent_chance 25
  	base_terrain FLOOR3
	percent_chance 25
  	base_terrain FLOOR4
end_random

start_random
	percent_chance 10
	land_percent 5
	percent_chance 10
	land_percent 8
	percent_chance 10
	land_percent 12
	percent_chance 25
	land_percent 15
	percent_chance 25
	land_percent 18
	percent_chance 10
	land_percent 25
	percent_chance 5
	land_percent 33
	percent_chance 5
	land_percent 45
end_random

start_random
	percent_chance 10
	number_of_clumps 2
	percent_chance 10
	number_of_clumps 4
	percent_chance 10
	number_of_clumps 6
	percent_chance 10
	number_of_clumps 10
	percent_chance 10
	number_of_clumps 15
	percent_chance 10
	number_of_clumps 20
	percent_chance 10
	number_of_clumps 25
	percent_chance 10
	number_of_clumps 30
	percent_chance 10
	number_of_clumps 40
	percent_chance 10
	number_of_clumps 100
end_random

start_random
	percent_chance 20
	spacing_to_other_terrain_types 0
	percent_chance 20
	spacing_to_other_terrain_types 1
	percent_chance 20
	spacing_to_other_terrain_types 2
	percent_chance 10
	spacing_to_other_terrain_types 5
	percent_chance 10
	spacing_to_other_terrain_types 7
	percent_chance 10
	spacing_to_other_terrain_types 9
	percent_chance 10
	spacing_to_other_terrain_types 10
end_random

start_random
	percent_chance 20
	clumping_factor 1
	percent_chance 10
	clumping_factor 5
	percent_chance 10
	clumping_factor 10
	percent_chance 10
	clumping_factor 20
	percent_chance 10
	clumping_factor 40
	percent_chance 20
	clumping_factor 60
	percent_chance 20
	clumping_factor 99
end_random

set_scale_by_size
set_scale_by_groups
}

create_terrain SOIL3
{
start_random
	percent_chance 25
  	base_terrain WOODS1
	percent_chance 25
  	base_terrain WOODS2
	percent_chance 25
  	base_terrain WOODS3
	percent_chance 25
  	base_terrain WOODS4
end_random

start_random
	percent_chance 10
	land_percent 5
	percent_chance 20
	land_percent 8
	percent_chance 25
	land_percent 10
	percent_chance 25
	land_percent 12
	percent_chance 20
	land_percent 15
end_random

start_random
	percent_chance 10
	number_of_clumps 2
	percent_chance 10
	number_of_clumps 4
	percent_chance 10
	number_of_clumps 6
	percent_chance 10
	number_of_clumps 10
	percent_chance 10
	number_of_clumps 15
	percent_chance 10
	number_of_clumps 20
	percent_chance 10
	number_of_clumps 25
	percent_chance 10
	number_of_clumps 30
	percent_chance 10
	number_of_clumps 40
	percent_chance 10
	number_of_clumps 100
end_random

start_random
	percent_chance 20
	spacing_to_other_terrain_types 0
	percent_chance 20
	spacing_to_other_terrain_types 1
	percent_chance 20
	spacing_to_other_terrain_types 2
	percent_chance 10
	spacing_to_other_terrain_types 5
	percent_chance 10
	spacing_to_other_terrain_types 7
	percent_chance 10
	spacing_to_other_terrain_types 9
	percent_chance 10
	spacing_to_other_terrain_types 10
end_random

start_random
	percent_chance 20
	clumping_factor 1
	percent_chance 10
	clumping_factor 5
	percent_chance 10
	clumping_factor 10
	percent_chance 10
	clumping_factor 20
	percent_chance 10
	clumping_factor 40
	percent_chance 20
	clumping_factor 60
	percent_chance 20
	clumping_factor 99
end_random

set_scale_by_size
set_scale_by_groups
}

create_terrain SOIL3
{
start_random
	percent_chance 25
  	base_terrain SHORE1
	percent_chance 25
  	base_terrain SHORE2
	percent_chance 25
  	base_terrain SHORE3
	percent_chance 25
  	base_terrain WATER1
end_random

start_random
	percent_chance 10
	land_percent 5
	percent_chance 10
	land_percent 8
	percent_chance 10
	land_percent 10
	percent_chance 25
	land_percent 12
	percent_chance 25
	land_percent 15
	percent_chance 10
	land_percent 18
	percent_chance 5
	land_percent 20
	percent_chance 5
	land_percent 25
end_random

start_random
	percent_chance 10
	number_of_clumps 2
	percent_chance 10
	number_of_clumps 4
	percent_chance 10
	number_of_clumps 6
	percent_chance 10
	number_of_clumps 10
	percent_chance 10
	number_of_clumps 15
	percent_chance 10
	number_of_clumps 20
	percent_chance 10
	number_of_clumps 25
	percent_chance 10
	number_of_clumps 30
	percent_chance 10
	number_of_clumps 40
	percent_chance 10
	number_of_clumps 100
end_random

start_random
	percent_chance 20
	spacing_to_other_terrain_types 0
	percent_chance 20
	spacing_to_other_terrain_types 1
	percent_chance 20
	spacing_to_other_terrain_types 2
	percent_chance 10
	spacing_to_other_terrain_types 5
	percent_chance 10
	spacing_to_other_terrain_types 7
	percent_chance 10
	spacing_to_other_terrain_types 9
	percent_chance 10
	spacing_to_other_terrain_types 10
end_random

start_random
	percent_chance 20
	clumping_factor 1
	percent_chance 10
	clumping_factor 5
	percent_chance 10
	clumping_factor 10
	percent_chance 10
	clumping_factor 20
	percent_chance 10
	clumping_factor 40
	percent_chance 20
	clumping_factor 60
	percent_chance 20
	clumping_factor 99
end_random

set_scale_by_size
set_scale_by_groups
}

create_terrain SOIL4
{
start_random
	percent_chance 25
  	base_terrain FLOOR1
	percent_chance 25
  	base_terrain FLOOR2
	percent_chance 25
  	base_terrain FLOOR3
	percent_chance 25
  	base_terrain FLOOR4
end_random

start_random
	percent_chance 10
	land_percent 5
	percent_chance 10
	land_percent 8
	percent_chance 10
	land_percent 12
	percent_chance 25
	land_percent 15
	percent_chance 25
	land_percent 18
	percent_chance 10
	land_percent 25
	percent_chance 5
	land_percent 33
	percent_chance 5
	land_percent 45
end_random

start_random
	percent_chance 10
	number_of_clumps 2
	percent_chance 10
	number_of_clumps 4
	percent_chance 10
	number_of_clumps 6
	percent_chance 10
	number_of_clumps 10
	percent_chance 10
	number_of_clumps 15
	percent_chance 10
	number_of_clumps 20
	percent_chance 10
	number_of_clumps 25
	percent_chance 10
	number_of_clumps 30
	percent_chance 10
	number_of_clumps 40
	percent_chance 10
	number_of_clumps 100
end_random

start_random
	percent_chance 20
	spacing_to_other_terrain_types 0
	percent_chance 20
	spacing_to_other_terrain_types 1
	percent_chance 20
	spacing_to_other_terrain_types 2
	percent_chance 10
	spacing_to_other_terrain_types 5
	percent_chance 10
	spacing_to_other_terrain_types 7
	percent_chance 10
	spacing_to_other_terrain_types 9
	percent_chance 10
	spacing_to_other_terrain_types 10
end_random

start_random
	percent_chance 20
	clumping_factor 1
	percent_chance 10
	clumping_factor 5
	percent_chance 10
	clumping_factor 10
	percent_chance 10
	clumping_factor 20
	percent_chance 10
	clumping_factor 40
	percent_chance 20
	clumping_factor 60
	percent_chance 20
	clumping_factor 99
end_random

set_scale_by_size
set_scale_by_groups
}

create_terrain FORESTPATH1
{
start_random
	percent_chance 25
  	base_terrain WOODS1
	percent_chance 25
  	base_terrain WOODS2
	percent_chance 25
  	base_terrain WOODS3
	percent_chance 25
  	base_terrain WOODS4
end_random

start_random
	percent_chance 10
	land_percent 5
	percent_chance 20
	land_percent 8
	percent_chance 25
	land_percent 10
	percent_chance 25
	land_percent 12
	percent_chance 20
	land_percent 15
end_random

start_random
	percent_chance 10
	number_of_clumps 2
	percent_chance 10
	number_of_clumps 4
	percent_chance 10
	number_of_clumps 6
	percent_chance 10
	number_of_clumps 10
	percent_chance 10
	number_of_clumps 15
	percent_chance 10
	number_of_clumps 20
	percent_chance 10
	number_of_clumps 25
	percent_chance 10
	number_of_clumps 30
	percent_chance 10
	number_of_clumps 40
	percent_chance 10
	number_of_clumps 100
end_random

start_random
	percent_chance 20
	spacing_to_other_terrain_types 0
	percent_chance 20
	spacing_to_other_terrain_types 1
	percent_chance 20
	spacing_to_other_terrain_types 2
	percent_chance 10
	spacing_to_other_terrain_types 5
	percent_chance 10
	spacing_to_other_terrain_types 7
	percent_chance 10
	spacing_to_other_terrain_types 9
	percent_chance 10
	spacing_to_other_terrain_types 10
end_random

start_random
	percent_chance 20
	clumping_factor 1
	percent_chance 10
	clumping_factor 5
	percent_chance 10
	clumping_factor 10
	percent_chance 10
	clumping_factor 20
	percent_chance 10
	clumping_factor 40
	percent_chance 20
	clumping_factor 60
	percent_chance 20
	clumping_factor 99
end_random

set_scale_by_size
set_scale_by_groups
}

create_terrain SOIL4
{
start_random
	percent_chance 25
  	base_terrain SHORE1
	percent_chance 25
  	base_terrain SHORE2
	percent_chance 25
  	base_terrain SHORE3
	percent_chance 25
  	base_terrain WATER1
end_random

start_random
	percent_chance 10
	land_percent 5
	percent_chance 10
	land_percent 8
	percent_chance 10
	land_percent 10
	percent_chance 25
	land_percent 12
	percent_chance 25
	land_percent 15
	percent_chance 10
	land_percent 18
	percent_chance 5
	land_percent 20
	percent_chance 5
	land_percent 25
end_random

start_random
	percent_chance 10
	number_of_clumps 2
	percent_chance 10
	number_of_clumps 4
	percent_chance 10
	number_of_clumps 6
	percent_chance 10
	number_of_clumps 10
	percent_chance 10
	number_of_clumps 15
	percent_chance 10
	number_of_clumps 20
	percent_chance 10
	number_of_clumps 25
	percent_chance 10
	number_of_clumps 30
	percent_chance 10
	number_of_clumps 40
	percent_chance 10
	number_of_clumps 100
end_random

start_random
	percent_chance 20
	spacing_to_other_terrain_types 0
	percent_chance 20
	spacing_to_other_terrain_types 1
	percent_chance 20
	spacing_to_other_terrain_types 2
	percent_chance 10
	spacing_to_other_terrain_types 5
	percent_chance 10
	spacing_to_other_terrain_types 7
	percent_chance 10
	spacing_to_other_terrain_types 9
	percent_chance 10
	spacing_to_other_terrain_types 10
end_random

start_random
	percent_chance 20
	clumping_factor 1
	percent_chance 10
	clumping_factor 5
	percent_chance 10
	clumping_factor 10
	percent_chance 10
	clumping_factor 20
	percent_chance 10
	clumping_factor 40
	percent_chance 20
	clumping_factor 60
	percent_chance 20
	clumping_factor 99
end_random

set_scale_by_size
set_scale_by_groups
}

create_terrain SOIL5
{
start_random
	percent_chance 25
  	base_terrain FLOOR1
	percent_chance 25
  	base_terrain FLOOR2
	percent_chance 25
  	base_terrain FLOOR3
	percent_chance 25
  	base_terrain FLOOR4
end_random

start_random
	percent_chance 10
	land_percent 5
	percent_chance 10
	land_percent 8
	percent_chance 10
	land_percent 12
	percent_chance 25
	land_percent 15
	percent_chance 25
	land_percent 18
	percent_chance 10
	land_percent 25
	percent_chance 5
	land_percent 33
	percent_chance 5
	land_percent 45
end_random

start_random
	percent_chance 10
	number_of_clumps 2
	percent_chance 10
	number_of_clumps 4
	percent_chance 10
	number_of_clumps 6
	percent_chance 10
	number_of_clumps 10
	percent_chance 10
	number_of_clumps 15
	percent_chance 10
	number_of_clumps 20
	percent_chance 10
	number_of_clumps 25
	percent_chance 10
	number_of_clumps 30
	percent_chance 10
	number_of_clumps 40
	percent_chance 10
	number_of_clumps 100
end_random

start_random
	percent_chance 20
	spacing_to_other_terrain_types 0
	percent_chance 20
	spacing_to_other_terrain_types 1
	percent_chance 20
	spacing_to_other_terrain_types 2
	percent_chance 10
	spacing_to_other_terrain_types 5
	percent_chance 10
	spacing_to_other_terrain_types 7
	percent_chance 10
	spacing_to_other_terrain_types 9
	percent_chance 10
	spacing_to_other_terrain_types 10
end_random

start_random
	percent_chance 20
	clumping_factor 1
	percent_chance 10
	clumping_factor 5
	percent_chance 10
	clumping_factor 10
	percent_chance 10
	clumping_factor 20
	percent_chance 10
	clumping_factor 40
	percent_chance 20
	clumping_factor 60
	percent_chance 20
	clumping_factor 99
end_random

set_scale_by_size
set_scale_by_groups
}

create_terrain FORESTPATH2
{
start_random
	percent_chance 25
  	base_terrain WOODS1
	percent_chance 25
  	base_terrain WOODS2
	percent_chance 25
  	base_terrain WOODS3
	percent_chance 25
  	base_terrain WOODS4
end_random

start_random
	percent_chance 10
	land_percent 5
	percent_chance 20
	land_percent 8
	percent_chance 25
	land_percent 10
	percent_chance 25
	land_percent 12
	percent_chance 20
	land_percent 15
end_random

start_random
	percent_chance 10
	number_of_clumps 2
	percent_chance 10
	number_of_clumps 4
	percent_chance 10
	number_of_clumps 6
	percent_chance 10
	number_of_clumps 10
	percent_chance 10
	number_of_clumps 15
	percent_chance 10
	number_of_clumps 20
	percent_chance 10
	number_of_clumps 25
	percent_chance 10
	number_of_clumps 30
	percent_chance 10
	number_of_clumps 40
	percent_chance 10
	number_of_clumps 100
end_random

start_random
	percent_chance 20
	spacing_to_other_terrain_types 0
	percent_chance 20
	spacing_to_other_terrain_types 1
	percent_chance 20
	spacing_to_other_terrain_types 2
	percent_chance 10
	spacing_to_other_terrain_types 5
	percent_chance 10
	spacing_to_other_terrain_types 7
	percent_chance 10
	spacing_to_other_terrain_types 9
	percent_chance 10
	spacing_to_other_terrain_types 10
end_random

start_random
	percent_chance 20
	clumping_factor 1
	percent_chance 10
	clumping_factor 5
	percent_chance 10
	clumping_factor 10
	percent_chance 10
	clumping_factor 20
	percent_chance 10
	clumping_factor 40
	percent_chance 20
	clumping_factor 60
	percent_chance 20
	clumping_factor 99
end_random

set_scale_by_size
set_scale_by_groups
}

create_terrain SOIL5
{
start_random
	percent_chance 25
  	base_terrain SHORE1
	percent_chance 25
  	base_terrain SHORE2
	percent_chance 25
  	base_terrain SHORE3
	percent_chance 25
  	base_terrain WATER1
end_random

start_random
	percent_chance 10
	land_percent 5
	percent_chance 10
	land_percent 8
	percent_chance 10
	land_percent 10
	percent_chance 25
	land_percent 12
	percent_chance 25
	land_percent 15
	percent_chance 10
	land_percent 18
	percent_chance 5
	land_percent 20
	percent_chance 5
	land_percent 25
end_random

start_random
	percent_chance 10
	number_of_clumps 2
	percent_chance 10
	number_of_clumps 4
	percent_chance 10
	number_of_clumps 6
	percent_chance 10
	number_of_clumps 10
	percent_chance 10
	number_of_clumps 15
	percent_chance 10
	number_of_clumps 20
	percent_chance 10
	number_of_clumps 25
	percent_chance 10
	number_of_clumps 30
	percent_chance 10
	number_of_clumps 40
	percent_chance 10
	number_of_clumps 100
end_random

start_random
	percent_chance 20
	spacing_to_other_terrain_types 1
	percent_chance 20
	spacing_to_other_terrain_types 2
	percent_chance 20
	spacing_to_other_terrain_types 3
	percent_chance 10
	spacing_to_other_terrain_types 4
	percent_chance 10
	spacing_to_other_terrain_types 6
	percent_chance 10
	spacing_to_other_terrain_types 8
	percent_chance 10
	spacing_to_other_terrain_types 10
end_random

start_random
	percent_chance 20
	clumping_factor 1
	percent_chance 10
	clumping_factor 5
	percent_chance 10
	clumping_factor 10
	percent_chance 10
	clumping_factor 20
	percent_chance 10
	clumping_factor 40
	percent_chance 20
	clumping_factor 60
	percent_chance 20
	clumping_factor 99
end_random

set_scale_by_size
set_scale_by_groups
}


create_terrain SOIL1
{
  	base_terrain FLOOR2

start_random
	percent_chance 10
	land_percent 4
	percent_chance 20
	land_percent 6
	percent_chance 20
	land_percent 8
	percent_chance 20
	land_percent 10
	percent_chance 20
	land_percent 12
	percent_chance 10
	land_percent 15
end_random

start_random
	percent_chance 10
	number_of_clumps 2
	percent_chance 10
	number_of_clumps 4
	percent_chance 10
	number_of_clumps 6
	percent_chance 20
	number_of_clumps 10
	percent_chance 20
	number_of_clumps 15
	percent_chance 10
	number_of_clumps 20
	percent_chance 10
	number_of_clumps 25
	percent_chance 10
	number_of_clumps 30
end_random

start_random
	percent_chance 20
	spacing_to_other_terrain_types 2
	percent_chance 20
	spacing_to_other_terrain_types 3
	percent_chance 20
	spacing_to_other_terrain_types 4
	percent_chance 20
	spacing_to_other_terrain_types 6
	percent_chance 20
	spacing_to_other_terrain_types 8
end_random
start_random
	percent_chance 20
	clumping_factor 1
	percent_chance 10
	clumping_factor 5
	percent_chance 10
	clumping_factor 10
	percent_chance 10
	clumping_factor 20
	percent_chance 10
	clumping_factor 40
	percent_chance 20
	clumping_factor 60
	percent_chance 20
	clumping_factor 99
end_random

set_scale_by_size
set_scale_by_groups
}


create_terrain SOIL4
{

  	base_terrain FLOOR1


start_random
	percent_chance 10
	land_percent 4
	percent_chance 20
	land_percent 6
	percent_chance 20
	land_percent 8
	percent_chance 20
	land_percent 10
	percent_chance 20
	land_percent 12
	percent_chance 10
	land_percent 15
end_random

start_random
	percent_chance 10
	number_of_clumps 2
	percent_chance 10
	number_of_clumps 4
	percent_chance 10
	number_of_clumps 6
	percent_chance 20
	number_of_clumps 10
	percent_chance 20
	number_of_clumps 15
	percent_chance 10
	number_of_clumps 20
	percent_chance 10
	number_of_clumps 25
	percent_chance 10
	number_of_clumps 30
end_random

start_random
	percent_chance 20
	spacing_to_other_terrain_types 2
	percent_chance 20
	spacing_to_other_terrain_types 3
	percent_chance 20
	spacing_to_other_terrain_types 4
	percent_chance 20
	spacing_to_other_terrain_types 6
	percent_chance 20
	spacing_to_other_terrain_types 8
end_random

start_random
	percent_chance 20
	clumping_factor 1
	percent_chance 10
	clumping_factor 5
	percent_chance 10
	clumping_factor 10
	percent_chance 10
	clumping_factor 20
	percent_chance 10
	clumping_factor 40
	percent_chance 20
	clumping_factor 60
	percent_chance 20
	clumping_factor 99
end_random

set_scale_by_size
set_scale_by_groups
}

/* ****** PONDS ******** */

if ISLANDMAP
else
	start_random
		percent_chance 60
			#define PONDS
		percent_chance 5
			#define PONDS
			#define PONDS2
		percent_chance 30			
	end_random
endif

if PONDS
create_terrain WATER1
{
  	base_terrain SOIL2

start_random
	percent_chance 10
	land_percent 2
	percent_chance 20
	land_percent 3
	percent_chance 20
	land_percent 4
	percent_chance 20
	land_percent 5
	percent_chance 10
	land_percent 6
	percent_chance 10
	land_percent 8
	percent_chance 10
	land_percent 10	
end_random

start_random
	percent_chance 10
	number_of_clumps 1
	percent_chance 10
	number_of_clumps 2
	percent_chance 10
	number_of_clumps 3
	percent_chance 20
	number_of_clumps 5
	percent_chance 20
	number_of_clumps 7
	percent_chance 10
	number_of_clumps 10
	percent_chance 10
	number_of_clumps 15
	percent_chance 10
	number_of_clumps 20
end_random

start_random
	percent_chance 10
	spacing_to_other_terrain_types 0
	percent_chance 10
	spacing_to_other_terrain_types 1
	percent_chance 10
	spacing_to_other_terrain_types 2
	percent_chance 20
	spacing_to_other_terrain_types 3
	percent_chance 20
	spacing_to_other_terrain_types 4
	percent_chance 20
	spacing_to_other_terrain_types 5
	percent_chance 10
	spacing_to_other_terrain_types 6
end_random

start_random
	percent_chance 20
	clumping_factor 1
	percent_chance 10
	clumping_factor 5
	percent_chance 10
	clumping_factor 10
	percent_chance 10
	clumping_factor 20
	percent_chance 10
	clumping_factor 40
	percent_chance 20
	clumping_factor 60
	percent_chance 20
	clumping_factor 99
end_random
set_scale_by_size
set_scale_by_groups
set_avoid_player_start_areas
}
endif

if PONDS2
create_terrain WATER1
{
start_random
	percent_chance 30
  	base_terrain SOIL1
	percent_chance 30
  	base_terrain SOIL3
	percent_chance 30
  	base_terrain SOIL4
	percent_chance 10
end_random	

start_random
	percent_chance 10
	land_percent 2
	percent_chance 20
	land_percent 3
	percent_chance 20
	land_percent 4
	percent_chance 20
	land_percent 5
	percent_chance 10
	land_percent 6
	percent_chance 10
	land_percent 8
	percent_chance 10
	land_percent 10	
end_random

start_random
	percent_chance 10
	number_of_clumps 1
	percent_chance 10
	number_of_clumps 2
	percent_chance 10
	number_of_clumps 3
	percent_chance 20
	number_of_clumps 5
	percent_chance 20
	number_of_clumps 7
	percent_chance 10
	number_of_clumps 10
	percent_chance 10
	number_of_clumps 15
	percent_chance 10
	number_of_clumps 20
end_random

start_random
	percent_chance 10
	spacing_to_other_terrain_types 0
	percent_chance 10
	spacing_to_other_terrain_types 1
	percent_chance 10
	spacing_to_other_terrain_types 2
	percent_chance 20
	spacing_to_other_terrain_types 3
	percent_chance 20
	spacing_to_other_terrain_types 4
	percent_chance 20
	spacing_to_other_terrain_types 5
	percent_chance 10
	spacing_to_other_terrain_types 6
end_random

start_random
	percent_chance 20
	clumping_factor 1
	percent_chance 10
	clumping_factor 5
	percent_chance 10
	clumping_factor 10
	percent_chance 10
	clumping_factor 20
	percent_chance 10
	clumping_factor 40
	percent_chance 20
	clumping_factor 60
	percent_chance 20
	clumping_factor 99
end_random
set_scale_by_size
set_scale_by_groups
set_avoid_player_start_areas
}
endif

if PONDS2
create_terrain WATER1
{
start_random
	percent_chance 30
  	base_terrain SHORE1
	percent_chance 30
  	base_terrain SHORE2
	percent_chance 30
  	base_terrain SHORE3
	percent_chance 10
end_random	

start_random
	percent_chance 10
	land_percent 2
	percent_chance 20
	land_percent 3
	percent_chance 20
	land_percent 4
	percent_chance 20
	land_percent 5
	percent_chance 10
	land_percent 6
	percent_chance 10
	land_percent 8
	percent_chance 10
	land_percent 10	
end_random

start_random
	percent_chance 10
	number_of_clumps 1
	percent_chance 10
	number_of_clumps 2
	percent_chance 10
	number_of_clumps 3
	percent_chance 20
	number_of_clumps 5
	percent_chance 20
	number_of_clumps 7
	percent_chance 10
	number_of_clumps 10
	percent_chance 10
	number_of_clumps 15
	percent_chance 10
	number_of_clumps 20
end_random

start_random
	percent_chance 10
	spacing_to_other_terrain_types 0
	percent_chance 10
	spacing_to_other_terrain_types 1
	percent_chance 10
	spacing_to_other_terrain_types 2
	percent_chance 20
	spacing_to_other_terrain_types 3
	percent_chance 20
	spacing_to_other_terrain_types 4
	percent_chance 20
	spacing_to_other_terrain_types 5
	percent_chance 10
	spacing_to_other_terrain_types 6
end_random

start_random
	percent_chance 20
	clumping_factor 1
	percent_chance 10
	clumping_factor 5
	percent_chance 10
	clumping_factor 10
	percent_chance 10
	clumping_factor 20
	percent_chance 10
	clumping_factor 40
	percent_chance 20
	clumping_factor 60
	percent_chance 20
	clumping_factor 99
end_random
set_scale_by_size
set_scale_by_groups
set_avoid_player_start_areas
}
endif

/* ****FORESTS**** */
if ISLANDMAP
else
create_terrain WOODS3
{
  	base_terrain SHORE1


start_random
	percent_chance 20
	land_percent 1
	percent_chance 20
	land_percent 2
	percent_chance 20
	land_percent 3
	percent_chance 20
	land_percent 4
	percent_chance 20
	land_percent 5
end_random

start_random
	percent_chance 10
	number_of_clumps 6
	percent_chance 10
	number_of_clumps 10
	percent_chance 20
	number_of_clumps 15
	percent_chance 20
	number_of_clumps 20
	percent_chance 10
	number_of_clumps 25
	percent_chance 10
	number_of_clumps 30
	percent_chance 10
	number_of_clumps 40
	percent_chance 10
	number_of_clumps 100
end_random

start_random

	percent_chance 20
	spacing_to_other_terrain_types 2
	percent_chance 20
	spacing_to_other_terrain_types 3
	percent_chance 20
	spacing_to_other_terrain_types 4
	percent_chance 20
	spacing_to_other_terrain_types 6
	percent_chance 10
	spacing_to_other_terrain_types 8
	percent_chance 10
	spacing_to_other_terrain_types 10
end_random

start_random
	percent_chance 20
	clumping_factor 1
	percent_chance 10
	clumping_factor 5
	percent_chance 10
	clumping_factor 10
	percent_chance 10
	clumping_factor 20
	percent_chance 10
	clumping_factor 40
	percent_chance 20
	clumping_factor 60
	percent_chance 20
	clumping_factor 99
end_random
	set_avoid_player_start_areas
	set_scale_by_groups
}


create_terrain WOODS2
{
start_random
	percent_chance 50
  	base_terrain SHORE2
	percent_chance 50
  	base_terrain SHORE3
end_random


start_random
	percent_chance 10
	land_percent 1
	percent_chance 10
	land_percent 2
	percent_chance 20
	land_percent 3
	percent_chance 20
	land_percent 4
	percent_chance 20
	land_percent 5
	percent_chance 10
	land_percent 6
	percent_chance 10
	land_percent 7
end_random

start_random
	percent_chance 10
	number_of_clumps 6
	percent_chance 10
	number_of_clumps 10
	percent_chance 20
	number_of_clumps 15
	percent_chance 20
	number_of_clumps 20
	percent_chance 10
	number_of_clumps 25
	percent_chance 10
	number_of_clumps 30
	percent_chance 10
	number_of_clumps 40
	percent_chance 10
	number_of_clumps 100
end_random

start_random
	percent_chance 20
	spacing_to_other_terrain_types 1
	percent_chance 20
	spacing_to_other_terrain_types 2
	percent_chance 20
	spacing_to_other_terrain_types 3
	percent_chance 10
	spacing_to_other_terrain_types 4
	percent_chance 10
	spacing_to_other_terrain_types 6
	percent_chance 10
	spacing_to_other_terrain_types 8
	percent_chance 10
	spacing_to_other_terrain_types 10
end_random

start_random
	percent_chance 20
	clumping_factor 1
	percent_chance 10
	clumping_factor 5
	percent_chance 10
	clumping_factor 10
	percent_chance 10
	clumping_factor 20
	percent_chance 10
	clumping_factor 40
	percent_chance 20
	clumping_factor 60
	percent_chance 20
	clumping_factor 99
end_random
	set_avoid_player_start_areas
	set_scale_by_groups
}
endif


if FORESTMAP
else
create_terrain WOODS1
{
  	base_terrain FLOOR1

start_random
	percent_chance 10
	land_percent 2
	percent_chance 10
	land_percent 3
	percent_chance 20
	land_percent 4
	percent_chance 20
	land_percent 5
	percent_chance 20
	land_percent 6
	percent_chance 10
	land_percent 7
	percent_chance 10
	land_percent 8
end_random

start_random
	percent_chance 10
	number_of_clumps 2
	percent_chance 10
	number_of_clumps 4
	percent_chance 10
	number_of_clumps 6
	percent_chance 10
	number_of_clumps 10
	percent_chance 10
	number_of_clumps 15
	percent_chance 10
	number_of_clumps 20
	percent_chance 10
	number_of_clumps 25
	percent_chance 10
	number_of_clumps 30
	percent_chance 10
	number_of_clumps 40
	percent_chance 10
	number_of_clumps 100
end_random

start_random
	percent_chance 20
	spacing_to_other_terrain_types 1
	percent_chance 20
	spacing_to_other_terrain_types 2
	percent_chance 20
	spacing_to_other_terrain_types 3
	percent_chance 10
	spacing_to_other_terrain_types 4
	percent_chance 10
	spacing_to_other_terrain_types 6
	percent_chance 10
	spacing_to_other_terrain_types 8
	percent_chance 10
	spacing_to_other_terrain_types 10
end_random

start_random
	percent_chance 20
	clumping_factor 1
	percent_chance 10
	clumping_factor 5
	percent_chance 10
	clumping_factor 10
	percent_chance 10
	clumping_factor 20
	percent_chance 10
	clumping_factor 40
	percent_chance 20
	clumping_factor 60
	percent_chance 20
	clumping_factor 99
end_random
	set_avoid_player_start_areas
	set_scale_by_groups
}

create_terrain WOODS2
{
  	base_terrain FLOOR2

start_random
	percent_chance 10
	land_percent 2
	percent_chance 10
	land_percent 3
	percent_chance 20
	land_percent 4
	percent_chance 20
	land_percent 5
	percent_chance 20
	land_percent 6
	percent_chance 10
	land_percent 7
	percent_chance 10
	land_percent 8
end_random

start_random
	percent_chance 10
	number_of_clumps 2
	percent_chance 10
	number_of_clumps 4
	percent_chance 10
	number_of_clumps 6
	percent_chance 10
	number_of_clumps 10
	percent_chance 10
	number_of_clumps 15
	percent_chance 10
	number_of_clumps 20
	percent_chance 10
	number_of_clumps 25
	percent_chance 10
	number_of_clumps 30
	percent_chance 10
	number_of_clumps 40
	percent_chance 10
	number_of_clumps 100
end_random

start_random
	percent_chance 20
	spacing_to_other_terrain_types 1
	percent_chance 20
	spacing_to_other_terrain_types 2
	percent_chance 20
	spacing_to_other_terrain_types 3
	percent_chance 10
	spacing_to_other_terrain_types 4
	percent_chance 10
	spacing_to_other_terrain_types 6
	percent_chance 10
	spacing_to_other_terrain_types 8
	percent_chance 10
	spacing_to_other_terrain_types 10
end_random

start_random
	percent_chance 20
	clumping_factor 1
	percent_chance 10
	clumping_factor 5
	percent_chance 10
	clumping_factor 10
	percent_chance 10
	clumping_factor 20
	percent_chance 10
	clumping_factor 40
	percent_chance 20
	clumping_factor 60
	percent_chance 20
	clumping_factor 99
end_random
	set_avoid_player_start_areas
	set_scale_by_groups
}


create_terrain WOODS3
{

  	base_terrain FLOOR3

start_random
	percent_chance 10
	land_percent 2
	percent_chance 10
	land_percent 3
	percent_chance 20
	land_percent 4
	percent_chance 20
	land_percent 5
	percent_chance 20
	land_percent 6
	percent_chance 10
	land_percent 7
	percent_chance 10
	land_percent 8
end_random

start_random
	percent_chance 10
	number_of_clumps 2
	percent_chance 10
	number_of_clumps 4
	percent_chance 10
	number_of_clumps 6
	percent_chance 10
	number_of_clumps 10
	percent_chance 10
	number_of_clumps 15
	percent_chance 10
	number_of_clumps 20
	percent_chance 10
	number_of_clumps 25
	percent_chance 10
	number_of_clumps 30
	percent_chance 10
	number_of_clumps 40
	percent_chance 10
	number_of_clumps 100
end_random

start_random
	percent_chance 20
	spacing_to_other_terrain_types 1
	percent_chance 20
	spacing_to_other_terrain_types 2
	percent_chance 20
	spacing_to_other_terrain_types 3
	percent_chance 10
	spacing_to_other_terrain_types 4
	percent_chance 10
	spacing_to_other_terrain_types 6
	percent_chance 10
	spacing_to_other_terrain_types 8
	percent_chance 10
	spacing_to_other_terrain_types 10
end_random

start_random
	percent_chance 20
	clumping_factor 1
	percent_chance 10
	clumping_factor 5
	percent_chance 10
	clumping_factor 10
	percent_chance 10
	clumping_factor 20
	percent_chance 10
	clumping_factor 40
	percent_chance 20
	clumping_factor 60
	percent_chance 20
	clumping_factor 99
end_random
	set_avoid_player_start_areas
	set_scale_by_groups
}

create_terrain WOODS4
{
  	base_terrain FLOOR4

start_random
	percent_chance 10
	land_percent 2
	percent_chance 10
	land_percent 3
	percent_chance 20
	land_percent 4
	percent_chance 20
	land_percent 5
	percent_chance 20
	land_percent 6
	percent_chance 10
	land_percent 7
	percent_chance 10
	land_percent 8
end_random

start_random
	percent_chance 10
	number_of_clumps 2
	percent_chance 10
	number_of_clumps 4
	percent_chance 10
	number_of_clumps 6
	percent_chance 10
	number_of_clumps 10
	percent_chance 10
	number_of_clumps 15
	percent_chance 10
	number_of_clumps 20
	percent_chance 10
	number_of_clumps 25
	percent_chance 10
	number_of_clumps 30
	percent_chance 10
	number_of_clumps 40
	percent_chance 10
	number_of_clumps 100
end_random

start_random
	percent_chance 20
	spacing_to_other_terrain_types 1
	percent_chance 20
	spacing_to_other_terrain_types 2
	percent_chance 20
	spacing_to_other_terrain_types 3
	percent_chance 10
	spacing_to_other_terrain_types 4
	percent_chance 10
	spacing_to_other_terrain_types 6
	percent_chance 10
	spacing_to_other_terrain_types 8
	percent_chance 10
	spacing_to_other_terrain_types 10
end_random

start_random
	percent_chance 20
	clumping_factor 1
	percent_chance 10
	clumping_factor 5
	percent_chance 10
	clumping_factor 10
	percent_chance 10
	clumping_factor 20
	percent_chance 10
	clumping_factor 40
	percent_chance 20
	clumping_factor 60
	percent_chance 20
	clumping_factor 99
end_random
	set_avoid_player_start_areas
	set_scale_by_groups
}
endif



create_terrain WOODS4
{

  	base_terrain SOIL4


start_random
	percent_chance 10
	land_percent 2
	percent_chance 10
	land_percent 3
	percent_chance 20
	land_percent 4
	percent_chance 20
	land_percent 5
	percent_chance 20
	land_percent 6
	percent_chance 10
	land_percent 7
	percent_chance 10
	land_percent 8
end_random

start_random
	percent_chance 5
	number_of_clumps 2
	percent_chance 5
	number_of_clumps 4
	percent_chance 10
	number_of_clumps 6
	percent_chance 10
	number_of_clumps 10
	percent_chance 10
	number_of_clumps 15
	percent_chance 15
	number_of_clumps 20
	percent_chance 15
	number_of_clumps 25
	percent_chance 10
	number_of_clumps 30
	percent_chance 10
	number_of_clumps 40
	percent_chance 10
	number_of_clumps 100
end_random

start_random
	percent_chance 20
	spacing_to_other_terrain_types 1
	percent_chance 20
	spacing_to_other_terrain_types 2
	percent_chance 20
	spacing_to_other_terrain_types 3
	percent_chance 10
	spacing_to_other_terrain_types 4
	percent_chance 10
	spacing_to_other_terrain_types 6
	percent_chance 10
	spacing_to_other_terrain_types 8
	percent_chance 10
	spacing_to_other_terrain_types 10
end_random

start_random
	percent_chance 20
	clumping_factor 1
	percent_chance 10
	clumping_factor 5
	percent_chance 10
	clumping_factor 10
	percent_chance 10
	clumping_factor 20
	percent_chance 10
	clumping_factor 40
	percent_chance 20
	clumping_factor 60
	percent_chance 20
	clumping_factor 99
end_random
	set_avoid_player_start_areas
	set_scale_by_groups
}


create_terrain WOODS1
{

  	base_terrain SOIL5

start_random
	percent_chance 10
	land_percent 2
	percent_chance 10
	land_percent 3
	percent_chance 20
	land_percent 4
	percent_chance 20
	land_percent 5
	percent_chance 20
	land_percent 6
	percent_chance 10
	land_percent 7
	percent_chance 10
	land_percent 8
end_random

start_random
	percent_chance 5
	number_of_clumps 2
	percent_chance 5
	number_of_clumps 4
	percent_chance 10
	number_of_clumps 6
	percent_chance 10
	number_of_clumps 10
	percent_chance 10
	number_of_clumps 15
	percent_chance 15
	number_of_clumps 20
	percent_chance 15
	number_of_clumps 25
	percent_chance 10
	number_of_clumps 30
	percent_chance 10
	number_of_clumps 40
	percent_chance 10
	number_of_clumps 100
end_random

start_random
	percent_chance 20
	spacing_to_other_terrain_types 1
	percent_chance 20
	spacing_to_other_terrain_types 2
	percent_chance 20
	spacing_to_other_terrain_types 3
	percent_chance 10
	spacing_to_other_terrain_types 4
	percent_chance 10
	spacing_to_other_terrain_types 6
	percent_chance 10
	spacing_to_other_terrain_types 8
	percent_chance 10
	spacing_to_other_terrain_types 10
end_random

start_random
	percent_chance 20
	clumping_factor 1
	percent_chance 10
	clumping_factor 5
	percent_chance 10
	clumping_factor 10
	percent_chance 10
	clumping_factor 20
	percent_chance 10
	clumping_factor 40
	percent_chance 20
	clumping_factor 60
	percent_chance 20
	clumping_factor 99
end_random
	set_avoid_player_start_areas
	set_scale_by_groups
}

create_terrain WOODS3
{

  	base_terrain FORESTPATH1

start_random
	percent_chance 25
	land_percent 3
	percent_chance 25
	land_percent 5
	percent_chance 25
	land_percent 7
	percent_chance 25
	land_percent 9
end_random

start_random
	percent_chance 5
	number_of_clumps 2
	percent_chance 5
	number_of_clumps 4
	percent_chance 10
	number_of_clumps 6
	percent_chance 10
	number_of_clumps 10
	percent_chance 10
	number_of_clumps 15
	percent_chance 15
	number_of_clumps 20
	percent_chance 15
	number_of_clumps 25
	percent_chance 10
	number_of_clumps 30
	percent_chance 10
	number_of_clumps 40
	percent_chance 10
	number_of_clumps 100
end_random

start_random
	percent_chance 10
	spacing_to_other_terrain_types 0
	percent_chance 10
	spacing_to_other_terrain_types 1
	percent_chance 20
	spacing_to_other_terrain_types 2
	percent_chance 30
	spacing_to_other_terrain_types 3
	percent_chance 20
	spacing_to_other_terrain_types 4
	percent_chance 10
	spacing_to_other_terrain_types 5

end_random


start_random
	percent_chance 20
	clumping_factor 1
	percent_chance 10
	clumping_factor 5
	percent_chance 10
	clumping_factor 10
	percent_chance 10
	clumping_factor 20
	percent_chance 10
	clumping_factor 40
	percent_chance 20
	clumping_factor 60
	percent_chance 20
	clumping_factor 99
end_random
	set_avoid_player_start_areas
	set_scale_by_groups
}




create_terrain WOODS2
{

  	base_terrain SOIL2


start_random
	percent_chance 10
	land_percent 4
	percent_chance 10
	land_percent 5
	percent_chance 20
	land_percent 7
	percent_chance 20
	land_percent 9
	percent_chance 20
	land_percent 10
	percent_chance 10
	land_percent 12
	percent_chance 10
	land_percent 15
end_random

start_random
	percent_chance 5
	number_of_clumps 2
	percent_chance 5
	number_of_clumps 4
	percent_chance 10
	number_of_clumps 6
	percent_chance 10
	number_of_clumps 10
	percent_chance 10
	number_of_clumps 15
	percent_chance 15
	number_of_clumps 20
	percent_chance 15
	number_of_clumps 25
	percent_chance 10
	number_of_clumps 30
	percent_chance 10
	number_of_clumps 40
	percent_chance 10
	number_of_clumps 100
end_random

start_random
	percent_chance 20
	spacing_to_other_terrain_types 1
	percent_chance 20
	spacing_to_other_terrain_types 2
	percent_chance 20
	spacing_to_other_terrain_types 3
	percent_chance 10
	spacing_to_other_terrain_types 4
	percent_chance 10
	spacing_to_other_terrain_types 6
	percent_chance 10
	spacing_to_other_terrain_types 8
	percent_chance 10
	spacing_to_other_terrain_types 10
end_random

start_random
	percent_chance 20
	clumping_factor 1
	percent_chance 10
	clumping_factor 5
	percent_chance 10
	clumping_factor 10
	percent_chance 10
	clumping_factor 20
	percent_chance 10
	clumping_factor 40
	percent_chance 20
	clumping_factor 60
	percent_chance 20
	clumping_factor 99
end_random
	set_avoid_player_start_areas
	set_scale_by_groups
}


create_terrain WOODS3
{

  	base_terrain SOIL3


start_random
	percent_chance 10
	land_percent 2
	percent_chance 10
	land_percent 3
	percent_chance 20
	land_percent 4
	percent_chance 20
	land_percent 5
	percent_chance 20
	land_percent 6
	percent_chance 10
	land_percent 7
	percent_chance 10
	land_percent 8
end_random

start_random
	percent_chance 5
	number_of_clumps 2
	percent_chance 5
	number_of_clumps 4
	percent_chance 10
	number_of_clumps 6
	percent_chance 10
	number_of_clumps 10
	percent_chance 10
	number_of_clumps 15
	percent_chance 15
	number_of_clumps 20
	percent_chance 15
	number_of_clumps 25
	percent_chance 10
	number_of_clumps 30
	percent_chance 10
	number_of_clumps 40
	percent_chance 10
	number_of_clumps 100
end_random

start_random
	percent_chance 20
	spacing_to_other_terrain_types 1
	percent_chance 20
	spacing_to_other_terrain_types 2
	percent_chance 20
	spacing_to_other_terrain_types 3
	percent_chance 10
	spacing_to_other_terrain_types 4
	percent_chance 10
	spacing_to_other_terrain_types 6
	percent_chance 10
	spacing_to_other_terrain_types 8
	percent_chance 10
	spacing_to_other_terrain_types 10
end_random

start_random
	percent_chance 20
	clumping_factor 1
	percent_chance 10
	clumping_factor 5
	percent_chance 10
	clumping_factor 10
	percent_chance 10
	clumping_factor 20
	percent_chance 10
	clumping_factor 40
	percent_chance 20
	clumping_factor 60
	percent_chance 20
	clumping_factor 99
end_random
	set_avoid_player_start_areas
	set_scale_by_groups
}

create_terrain WOODS1
{

  	base_terrain SOIL1

start_random
	percent_chance 25
	land_percent 2
	percent_chance 25
	land_percent 3
	percent_chance 25
	land_percent 4
	percent_chance 25
	land_percent 5
end_random

start_random
    percent_chance 10
	number_of_clumps 10
	percent_chance 15
	number_of_clumps 15
	percent_chance 15
	number_of_clumps 20
	percent_chance 20
	number_of_clumps 25
	percent_chance 15
	number_of_clumps 30
	percent_chance 15
	number_of_clumps 40
	percent_chance 10
	number_of_clumps 50
end_random

	spacing_to_other_terrain_types 1

start_random
	percent_chance 20
	clumping_factor 1
	percent_chance 10
	clumping_factor 5
	percent_chance 10
	clumping_factor 10
	percent_chance 10
	clumping_factor 20
	percent_chance 10
	clumping_factor 40
	percent_chance 20
	clumping_factor 60
	percent_chance 20
	clumping_factor 99
end_random
	set_avoid_player_start_areas
	set_scale_by_groups
}



create_terrain WATER2
{
base_terrain WATER1
land_percent 99
number_of_clumps 99
if UP
spacing_to_other_terrain_types rnd(2,4)
else
spacing_to_other_terrain_types 3
endif
}

create_terrain WATER3
{
base_terrain WATER2
land_percent 99
number_of_clumps 99
if UP
spacing_to_other_terrain_types rnd(3,7)
else
spacing_to_other_terrain_types 5
endif
}


<OBJECTS_GENERATION>



/* ***********************UNIT SPAWNS*************************** */

	/* convertible units */
if NOMADIC
	start_random
	 percent_chance 20	#define CONVERT
	end_random

elseif LANDNOMAD	
	start_random
	 percent_chance 20	#define CONVERT
	end_random	

else	
	start_random
	 percent_chance 50	#define CONVERT
	end_random
endif


/* *** BASIC STARTING TOWN ***** */

if NOMADIC

	create_object VILLAGER
	{
	set_place_for_every_player
	temp_min_distance_group_placement 3
	min_distance_group_placement 3
	min_distance_to_players 3
	max_distance_to_players 15
	}

elseif LANDNOMAD

	create_object VILLAGER
	{
	set_place_for_every_player
	min_distance_to_players 3
	max_distance_to_players 15
	temp_min_distance_group_placement 3
	min_distance_group_placement 3
	}

else
	create_object TOWN_CENTER
	{
		set_place_for_every_player
		group_placement_radius 18
		min_distance_to_players 0
		max_distance_to_players	0
	}

	create_object VILLAGER
	{
		set_place_for_every_player
		min_distance_to_players 6
		max_distance_to_players 6
	}

	create_object SCOUT
	{
	start_random
		percent_chance 85
		number_of_objects 1
		percent_chance 7
		number_of_objects 2
		percent_chance 5
		number_of_objects 3
		percent_chance 3
		number_of_objects 4
	end_random
		set_place_for_every_player
		min_distance_to_players 7
		max_distance_to_players 9
	}

endif


/* King, castle & extra villagers */

if KINGGAME
	create_object VILLAGER
	{
		number_of_objects 7
		set_place_for_every_player
		min_distance_to_players 7
		max_distance_to_players 7
	}

	create_object KING
	{
		set_place_for_every_player
		min_distance_to_players 6
		max_distance_to_players 7
	}

	start_random
		percent_chance 40
	create_object CASTLE
	{
		set_place_for_every_player
		min_distance_to_players 10
		max_distance_to_players 10
	}

		percent_chance 30
	create_object WATCH_TOWER
	{
		set_place_for_every_player
		min_distance_to_players 9
		max_distance_to_players 9
	}
		percent_chance 30
	end_random
endif

if CTRUP
	create_object MONASTERY
	{
		set_place_for_every_player

	start_random
		percent_chance 25
		min_distance_to_players 6
		max_distance_to_players 9
		percent_chance 50
		min_distance_to_players 7
		max_distance_to_players 14
		percent_chance 25
		min_distance_to_players 7
		max_distance_to_players 21
	end_random
	}
endif

if SUDDENDEATH
	create_object FLAG_B
	{
		number_of_objects 4
		set_place_for_every_player
		min_distance_to_players 4
		max_distance_to_players 4
		temp_min_distance_group_placement  4
	}
endif

if MONUMENTALMIDDLE
	if KOTHUP
	elseif CTRUP
	else 
	create_object MONUMENT
	{
		number_of_objects 1
		min_distance_to_players 0
		max_distance_to_players 1
	place_on_specific_land_id 51
	}	
	endif
endif

/* ******BONUS VILLAGERS****** */

start_random 
	percent_chance 10 #define EXTRAVIL
	percent_chance 90 #define NORMALVIL
end_random

if EXTRAVIL
	create_object VILLAGER 
	{
	start_random
		percent_chance 70
		number_of_objects 2
		percent_chance 10
		number_of_objects 4
		percent_chance 5
		number_of_objects 6
		percent_chance 5
		number_of_objects 10		
		percent_chance 5
		number_of_objects 25
		percent_chance 5
		number_of_objects 40
	end_random
		set_place_for_every_player
		min_distance_to_players			6
		max_distance_to_players			10
	}
endif


/* scenery - no collision */

start_random
	percent_chance 40
create_object COVER1
{
if UP
  	number_of_objects    rnd(2,4)
 	number_of_groups     rnd(2,6)
else
	number_of_objects 3
	number_of_groups 4
endif
  	set_gaia_object_only
	set_loose_grouping
	group_variance 2
	temp_min_distance_group_placement 13
	min_distance_to_players 15
	set_scaling_to_map_size
	terrain_to_place_on FORESTPATH3
}
end_random

start_random
	percent_chance 40
create_object COVER1
{
if UP
  	number_of_objects    rnd(2,4)
 	number_of_groups     rnd(2,6)
else
	number_of_objects 3
	number_of_groups 4
endif
  	set_gaia_object_only
	set_loose_grouping
	group_variance 2
	temp_min_distance_group_placement 13
	min_distance_to_players 15
	set_scaling_to_map_size
	terrain_to_place_on FORESTPATH4
}
end_random




start_random
	percent_chance 40
create_object COVER1
{
if UP
  	number_of_objects    rnd(2,4)
 	number_of_groups     rnd(2,6)
else
	number_of_objects 3
	number_of_groups 4
endif
  	set_gaia_object_only
	set_loose_grouping
	group_variance 2
	temp_min_distance_group_placement 13
	min_distance_to_players 15
	set_scaling_to_map_size
	terrain_to_place_on SOIL1
}
end_random

start_random
	percent_chance 40
create_object COVER1
{
if UP
  	number_of_objects    rnd(2,4)
 	number_of_groups     rnd(2,6)
else
	number_of_objects 3
	number_of_groups 4
endif
  	set_gaia_object_only
	set_loose_grouping
	group_variance 2
	temp_min_distance_group_placement 13
	min_distance_to_players 15
	set_scaling_to_map_size
	terrain_to_place_on SOIL2
}
end_random

start_random
	percent_chance 40
create_object COVER1
{
if UP
  	number_of_objects    rnd(2,4)
 	number_of_groups     rnd(2,6)
else
	number_of_objects 3
	number_of_groups 4
endif
  	set_gaia_object_only
	set_loose_grouping
	group_variance 2
	temp_min_distance_group_placement 13
	min_distance_to_players 15
	set_scaling_to_map_size
	terrain_to_place_on SOIL3
}
end_random

start_random
	percent_chance 40
create_object COVER1
{
if UP
  	number_of_objects    rnd(2,4)
 	number_of_groups     rnd(2,6)
else
	number_of_objects 3
	number_of_groups 4
endif
  	set_gaia_object_only
	set_loose_grouping
	group_variance 2
	temp_min_distance_group_placement 13
	min_distance_to_players 15
	set_scaling_to_map_size
	terrain_to_place_on SOIL4
}
end_random

start_random
	percent_chance 40
create_object COVER1
{
if UP
  	number_of_objects    rnd(2,4)
 	number_of_groups     rnd(2,6)
else
	number_of_objects 3
	number_of_groups 4
endif
  	set_gaia_object_only
	set_loose_grouping
	group_variance 2
	temp_min_distance_group_placement 13
	min_distance_to_players 15
	set_scaling_to_map_size
	terrain_to_place_on SOIL5
}
end_random

start_random
	percent_chance 40
create_object COVER1
{
if UP
  	number_of_objects    rnd(2,4)
 	number_of_groups     rnd(2,6)
else
	number_of_objects 3
	number_of_groups 4
endif
  	set_gaia_object_only
	set_loose_grouping
	group_variance 2
	temp_min_distance_group_placement 13
	min_distance_to_players 15
	set_scaling_to_map_size
	terrain_to_place_on FLOOR1
}
end_random


start_random
	percent_chance 40
create_object COVER1
{
if UP
  	number_of_objects    rnd(2,4)
 	number_of_groups     rnd(2,6)
else
	number_of_objects 3
	number_of_groups 4
endif
  	set_gaia_object_only
	set_loose_grouping
	group_variance 2
	temp_min_distance_group_placement 13
	min_distance_to_players 15
	set_scaling_to_map_size
	terrain_to_place_on FLOOR2
}
end_random


start_random
	percent_chance 40
create_object COVER1
{
if UP
  	number_of_objects    rnd(2,4)
 	number_of_groups     rnd(2,6)
else
	number_of_objects 3
	number_of_groups 4
endif
  	set_gaia_object_only
	set_loose_grouping
	group_variance 2
	temp_min_distance_group_placement 13
	min_distance_to_players 15
	set_scaling_to_map_size
	terrain_to_place_on FLOOR3
}
end_random


start_random
	percent_chance 40
create_object COVER1
{
if UP
  	number_of_objects    rnd(2,4)
 	number_of_groups     rnd(2,6)
else
	number_of_objects 3
	number_of_groups 4
endif
  	set_gaia_object_only
	set_loose_grouping
	group_variance 2
	temp_min_distance_group_placement 13
	min_distance_to_players 15
	set_scaling_to_map_size
	terrain_to_place_on FLOOR4
}
end_random


start_random
	percent_chance 40
create_object COVER1
{
if UP
  	number_of_objects    rnd(2,4)
 	number_of_groups     rnd(2,6)
else
	number_of_objects 3
	number_of_groups 4
endif
  	set_gaia_object_only
	set_loose_grouping
	group_variance 2
	temp_min_distance_group_placement 13
	min_distance_to_players 15
	set_scaling_to_map_size
	terrain_to_place_on FORESTPATH1
}
end_random

start_random
	percent_chance 40
create_object COVER1
{
if UP
  	number_of_objects    rnd(2,4)
 	number_of_groups     rnd(2,6)
else
	number_of_objects 3
	number_of_groups 4
endif
  	set_gaia_object_only
	set_loose_grouping
	group_variance 2
	temp_min_distance_group_placement 13
	min_distance_to_players 15
	set_scaling_to_map_size
	terrain_to_place_on FORESTPATH2
}
end_random

start_random
	percent_chance 40
create_object COVER1
{
if UP
  	number_of_objects    rnd(2,4)
 	number_of_groups     rnd(2,6)
else
	number_of_objects 3
	number_of_groups 4
endif
  	set_gaia_object_only
	set_loose_grouping
	group_variance 2
	temp_min_distance_group_placement 13
	min_distance_to_players 15
	set_scaling_to_map_size
	terrain_to_place_on FORESTPATH3
}
end_random

start_random
	percent_chance 40
create_object COVER1
{
if UP
  	number_of_objects    rnd(2,4)
 	number_of_groups     rnd(2,6)
else
	number_of_objects 3
	number_of_groups 4
endif
  	set_gaia_object_only
	set_loose_grouping
	group_variance 2
	temp_min_distance_group_placement 13
	min_distance_to_players 15
	set_scaling_to_map_size
	terrain_to_place_on FORESTPATH4
}
end_random


start_random
	percent_chance 40
create_object COVER2
{
if UP
  	number_of_objects    rnd(2,4)
 	number_of_groups     rnd(2,6)
else
	number_of_objects 3
	number_of_groups 4
endif
  	set_gaia_object_only
	set_loose_grouping
	group_variance 2
	temp_min_distance_group_placement 13
	min_distance_to_players 15
	set_scaling_to_map_size
	terrain_to_place_on FORESTPATH3
}
end_random

start_random
	percent_chance 40
create_object COVER2
{
if UP
  	number_of_objects    rnd(2,4)
 	number_of_groups     rnd(2,6)
else
	number_of_objects 3
	number_of_groups 4
endif
  	set_gaia_object_only
	set_loose_grouping
	group_variance 2
	temp_min_distance_group_placement 13
	min_distance_to_players 15
	set_scaling_to_map_size
	terrain_to_place_on FORESTPATH4
}
end_random




start_random
	percent_chance 40
create_object COVER2
{
if UP
  	number_of_objects    rnd(2,4)
 	number_of_groups     rnd(2,6)
else
	number_of_objects 3
	number_of_groups 4
endif
  	set_gaia_object_only
	set_loose_grouping
	group_variance 2
	temp_min_distance_group_placement 13
	min_distance_to_players 15
	set_scaling_to_map_size
	terrain_to_place_on SOIL1
}
end_random

start_random
	percent_chance 40
create_object COVER2
{
if UP
  	number_of_objects    rnd(2,4)
 	number_of_groups     rnd(2,6)
else
	number_of_objects 3
	number_of_groups 4
endif
  	set_gaia_object_only
	set_loose_grouping
	group_variance 2
	temp_min_distance_group_placement 13
	min_distance_to_players 15
	set_scaling_to_map_size
	terrain_to_place_on SOIL2
}
end_random

start_random
	percent_chance 40
create_object COVER2
{
if UP
  	number_of_objects    rnd(2,4)
 	number_of_groups     rnd(2,6)
else
	number_of_objects 3
	number_of_groups 4
endif
  	set_gaia_object_only
	set_loose_grouping
	group_variance 2
	temp_min_distance_group_placement 13
	min_distance_to_players 15
	set_scaling_to_map_size
	terrain_to_place_on SOIL3
}
end_random

start_random
	percent_chance 40
create_object COVER2
{
if UP
  	number_of_objects    rnd(2,4)
 	number_of_groups     rnd(2,6)
else
	number_of_objects 3
	number_of_groups 4
endif
  	set_gaia_object_only
	set_loose_grouping
	group_variance 2
	temp_min_distance_group_placement 13
	min_distance_to_players 15
	set_scaling_to_map_size
	terrain_to_place_on SOIL4
}
end_random

start_random
	percent_chance 40
create_object COVER2
{
if UP
  	number_of_objects    rnd(2,4)
 	number_of_groups     rnd(2,6)
else
	number_of_objects 3
	number_of_groups 4
endif
  	set_gaia_object_only
	set_loose_grouping
	group_variance 2
	temp_min_distance_group_placement 13
	min_distance_to_players 15
	set_scaling_to_map_size
	terrain_to_place_on SOIL5
}
end_random

start_random
	percent_chance 40
create_object COVER2
{
if UP
  	number_of_objects    rnd(2,4)
 	number_of_groups     rnd(2,6)
else
	number_of_objects 3
	number_of_groups 4
endif
  	set_gaia_object_only
	set_loose_grouping
	group_variance 2
	temp_min_distance_group_placement 13
	min_distance_to_players 15
	set_scaling_to_map_size
	terrain_to_place_on FLOOR1
}
end_random


start_random
	percent_chance 40
create_object COVER2
{
if UP
  	number_of_objects    rnd(2,4)
 	number_of_groups     rnd(2,6)
else
	number_of_objects 3
	number_of_groups 4
endif
  	set_gaia_object_only
	set_loose_grouping
	group_variance 2
	temp_min_distance_group_placement 13
	min_distance_to_players 15
	set_scaling_to_map_size
	terrain_to_place_on FLOOR2
}
end_random


start_random
	percent_chance 40
create_object COVER2
{
if UP
  	number_of_objects    rnd(2,4)
 	number_of_groups     rnd(2,6)
else
	number_of_objects 3
	number_of_groups 4
endif
  	set_gaia_object_only
	set_loose_grouping
	group_variance 2
	temp_min_distance_group_placement 13
	min_distance_to_players 15
	set_scaling_to_map_size
	terrain_to_place_on FLOOR3
}
end_random


start_random
	percent_chance 40
create_object COVER2
{
if UP
  	number_of_objects    rnd(2,4)
 	number_of_groups     rnd(2,6)
else
	number_of_objects 3
	number_of_groups 4
endif
  	set_gaia_object_only
	set_loose_grouping
	group_variance 2
	temp_min_distance_group_placement 13
	min_distance_to_players 15
	set_scaling_to_map_size
	terrain_to_place_on FLOOR4
}
end_random


start_random
	percent_chance 40
create_object COVER2
{
if UP
  	number_of_objects    rnd(2,4)
 	number_of_groups     rnd(2,6)
else
	number_of_objects 3
	number_of_groups 4
endif
  	set_gaia_object_only
	set_loose_grouping
	group_variance 2
	temp_min_distance_group_placement 13
	min_distance_to_players 15
	set_scaling_to_map_size
	terrain_to_place_on FORESTPATH1
}
end_random

start_random
	percent_chance 40
create_object COVER2
{
if UP
  	number_of_objects    rnd(2,4)
 	number_of_groups     rnd(2,6)
else
	number_of_objects 3
	number_of_groups 4
endif
  	set_gaia_object_only
	set_loose_grouping
	group_variance 2
	temp_min_distance_group_placement 13
	min_distance_to_players 15
	set_scaling_to_map_size
	terrain_to_place_on FORESTPATH2
}
end_random

start_random
	percent_chance 40
create_object COVER2
{
if UP
  	number_of_objects    rnd(2,4)
 	number_of_groups     rnd(2,6)
else
	number_of_objects 3
	number_of_groups 4
endif
  	set_gaia_object_only
	set_loose_grouping
	group_variance 2
	temp_min_distance_group_placement 13
	min_distance_to_players 15
	set_scaling_to_map_size
	terrain_to_place_on FORESTPATH3
}
end_random

start_random
	percent_chance 40
create_object COVER2
{
if UP
  	number_of_objects    rnd(2,4)
 	number_of_groups     rnd(2,6)
else
	number_of_objects 3
	number_of_groups 4
endif
  	set_gaia_object_only
	set_loose_grouping
	group_variance 2
	temp_min_distance_group_placement 13
	min_distance_to_players 15
	set_scaling_to_map_size
	terrain_to_place_on FORESTPATH4
}
end_random





start_random
	percent_chance 40
create_object COVER3
{
if UP

 	number_of_groups     rnd(2,6)
else

	number_of_groups 4
endif
  	set_gaia_object_only
	temp_min_distance_group_placement 15
	min_distance_to_players 15
	set_scaling_to_map_size
	terrain_to_place_on SOIL1
	max_distance_to_other_zones 3
}
end_random

start_random
	percent_chance 40
create_object COVER3
{
if UP

 	number_of_groups     rnd(2,6)
else

	number_of_groups 4
endif
  	set_gaia_object_only
	temp_min_distance_group_placement 15
	min_distance_to_players 15
	set_scaling_to_map_size
	terrain_to_place_on SOIL2
	max_distance_to_other_zones 3
}
end_random

start_random
	percent_chance 40
create_object COVER3
{
if UP

 	number_of_groups     rnd(2,6)
else

	number_of_groups 4
endif
  	set_gaia_object_only
	temp_min_distance_group_placement 15
	min_distance_to_players 15
	set_scaling_to_map_size
	terrain_to_place_on SOIL3
	max_distance_to_other_zones 3
}
end_random

start_random
	percent_chance 40
create_object COVER3
{
if UP

 	number_of_groups     rnd(2,6)
else

	number_of_groups 4
endif
  	set_gaia_object_only
	temp_min_distance_group_placement 15
	min_distance_to_players 15
	set_scaling_to_map_size
	terrain_to_place_on SOIL4
	max_distance_to_other_zones 3
}
end_random

start_random
	percent_chance 40
create_object COVER3
{
if UP

 	number_of_groups     rnd(2,6)
else

	number_of_groups 4
endif
  	set_gaia_object_only
	temp_min_distance_group_placement 15
	min_distance_to_players 15
	set_scaling_to_map_size
	terrain_to_place_on SOIL5
	max_distance_to_other_zones 3
}
end_random

start_random
	percent_chance 40
create_object COVER3
{
if UP

 	number_of_groups     rnd(2,6)
else

	number_of_groups 4
endif
  	set_gaia_object_only
	temp_min_distance_group_placement 15
	min_distance_to_players 15
	set_scaling_to_map_size
	terrain_to_place_on FLOOR1
	max_distance_to_other_zones 3
}
end_random


start_random
	percent_chance 40
create_object COVER3
{
if UP

 	number_of_groups     rnd(2,6)
else

	number_of_groups 4
endif
  	set_gaia_object_only
	temp_min_distance_group_placement 15
	min_distance_to_players 15
	set_scaling_to_map_size
	terrain_to_place_on FLOOR2
	max_distance_to_other_zones 3
}
end_random


start_random
	percent_chance 40
create_object COVER3
{
if UP

 	number_of_groups     rnd(2,6)
else

	number_of_groups 4
endif
  	set_gaia_object_only
	temp_min_distance_group_placement 15
	min_distance_to_players 15
	set_scaling_to_map_size
	terrain_to_place_on FLOOR3
	max_distance_to_other_zones 3
}
end_random


start_random
	percent_chance 40
create_object COVER3
{
if UP

 	number_of_groups     rnd(2,6)
else

	number_of_groups 4
endif
  	set_gaia_object_only
	temp_min_distance_group_placement 15
	min_distance_to_players 15
	set_scaling_to_map_size
	terrain_to_place_on FLOOR4
	max_distance_to_other_zones 3
}
end_random

start_random
	percent_chance 40
create_object COVER3
{
if UP

 	number_of_groups     rnd(2,6)
else

	number_of_groups 4
endif
  	set_gaia_object_only
	temp_min_distance_group_placement 15
	min_distance_to_players 15
	set_scaling_to_map_size
	terrain_to_place_on FORESTPATH1
	max_distance_to_other_zones 3
}
end_random

start_random
	percent_chance 40
create_object COVER3
{
if UP

 	number_of_groups     rnd(2,6)
else

	number_of_groups 4
endif
  	set_gaia_object_only
	temp_min_distance_group_placement 15
	min_distance_to_players 15
	set_scaling_to_map_size
	terrain_to_place_on FORESTPATH2
	max_distance_to_other_zones 3
}
end_random

start_random
	percent_chance 40
create_object COVER3
{
if UP

 	number_of_groups     rnd(2,6)
else

	number_of_groups 4
endif
  	set_gaia_object_only
	temp_min_distance_group_placement 15
	min_distance_to_players 15
	set_scaling_to_map_size
	terrain_to_place_on FORESTPATH3
	max_distance_to_other_zones 3
}
end_random

start_random
	percent_chance 40
create_object COVER3
{
if UP

 	number_of_groups     rnd(2,6)
else

	number_of_groups 4
endif
  	set_gaia_object_only
	temp_min_distance_group_placement 15
	min_distance_to_players 15
	set_scaling_to_map_size
	terrain_to_place_on FORESTPATH4
	max_distance_to_other_zones 3
}
end_random



start_random
	percent_chance 40
create_object COVER4
{
if UP

 	number_of_groups     rnd(2,6)
else

	number_of_groups 4
endif
  	set_gaia_object_only
	temp_min_distance_group_placement 15
	min_distance_to_players 15
	set_scaling_to_map_size
	terrain_to_place_on SOIL1
	max_distance_to_other_zones 3
}
end_random

start_random
	percent_chance 40
create_object COVER4
{
if UP

 	number_of_groups     rnd(2,6)
else

	number_of_groups 4
endif
  	set_gaia_object_only
	temp_min_distance_group_placement 15
	min_distance_to_players 15
	set_scaling_to_map_size
	terrain_to_place_on SOIL2
	max_distance_to_other_zones 3
}
end_random

start_random
	percent_chance 40
create_object COVER4
{
if UP

 	number_of_groups     rnd(2,6)
else

	number_of_groups 4
endif
  	set_gaia_object_only
	temp_min_distance_group_placement 15
	min_distance_to_players 15
	set_scaling_to_map_size
	terrain_to_place_on SOIL3
	max_distance_to_other_zones 3
}
end_random

start_random
	percent_chance 40
create_object COVER4
{
if UP

 	number_of_groups     rnd(2,6)
else

	number_of_groups 4
endif
  	set_gaia_object_only
	temp_min_distance_group_placement 15
	min_distance_to_players 15
	set_scaling_to_map_size
	terrain_to_place_on SOIL4
	max_distance_to_other_zones 3
}
end_random

start_random
	percent_chance 40
create_object COVER4
{
if UP

 	number_of_groups     rnd(2,6)
else

	number_of_groups 4
endif
  	set_gaia_object_only
	temp_min_distance_group_placement 15
	min_distance_to_players 15
	set_scaling_to_map_size
	terrain_to_place_on SOIL5
	max_distance_to_other_zones 3
}
end_random

start_random
	percent_chance 40
create_object COVER4
{
if UP

 	number_of_groups     rnd(2,6)
else

	number_of_groups 4
endif
  	set_gaia_object_only

	temp_min_distance_group_placement 15
	min_distance_to_players 15
	set_scaling_to_map_size
	terrain_to_place_on FLOOR1
	max_distance_to_other_zones 3
}
end_random


start_random
	percent_chance 40
create_object COVER4
{
if UP

 	number_of_groups     rnd(2,6)
else

	number_of_groups 4
endif
  	set_gaia_object_only

	temp_min_distance_group_placement 15
	min_distance_to_players 15
	set_scaling_to_map_size
	terrain_to_place_on FLOOR2
	max_distance_to_other_zones 3
}
end_random


start_random
	percent_chance 40
create_object COVER4
{
if UP

 	number_of_groups     rnd(2,6)
else

	number_of_groups 4
endif
  	set_gaia_object_only

	temp_min_distance_group_placement 15
	min_distance_to_players 15
	set_scaling_to_map_size
	terrain_to_place_on FLOOR3
	max_distance_to_other_zones 3
}
end_random


start_random
	percent_chance 40
create_object COVER4
{
if UP

 	number_of_groups     rnd(2,6)
else

	number_of_groups 4
endif
  	set_gaia_object_only

	temp_min_distance_group_placement 15
	min_distance_to_players 15
	set_scaling_to_map_size
	terrain_to_place_on FLOOR4
	max_distance_to_other_zones 3
}
end_random

start_random
	percent_chance 40
create_object COVER4
{
if UP

 	number_of_groups     rnd(2,6)
else

	number_of_groups 4
endif
  	set_gaia_object_only
	temp_min_distance_group_placement 15
	min_distance_to_players 15
	set_scaling_to_map_size
	terrain_to_place_on FORESTPATH1
	max_distance_to_other_zones 3
}
end_random

start_random
	percent_chance 40
create_object COVER4
{
if UP

 	number_of_groups     rnd(2,6)
else

	number_of_groups 4
endif
  	set_gaia_object_only
	temp_min_distance_group_placement 15
	min_distance_to_players 15
	set_scaling_to_map_size
	terrain_to_place_on FORESTPATH2
	max_distance_to_other_zones 3
}
end_random

start_random
	percent_chance 40
create_object COVER4
{
if UP

 	number_of_groups     rnd(2,6)
else

	number_of_groups 4
endif
  	set_gaia_object_only
	temp_min_distance_group_placement 15
	min_distance_to_players 15
	set_scaling_to_map_size
	terrain_to_place_on FORESTPATH3
	max_distance_to_other_zones 3
}
end_random

start_random
	percent_chance 40
create_object COVER4
{
if UP

 	number_of_groups     rnd(2,6)
else

	number_of_groups 4
endif
  	set_gaia_object_only
	temp_min_distance_group_placement 15
	min_distance_to_players 15
	set_scaling_to_map_size
	terrain_to_place_on FORESTPATH4
	max_distance_to_other_zones 3
}
end_random


	
if ARCTICSTYLE

	if AOC
			#const SEASTUFF1 389
			#const SEASTUFF2 396
	else
			#const SEASTUFF1 728
			#const SEASTUFF2 728	
	endif
elseif BALTICSTYLE

	if AOC
			#const SEASTUFF1 389
			#const SEASTUFF2 396
	else
			#const SEASTUFF1 728
			#const SEASTUFF2 303	
	endif
else
	if AOC
	    start_random
		    percent_chance 30
			#const SEASTUFF1 721
			#const SEASTUFF2 722
		    percent_chance 30
			#const SEASTUFF1 389
			#const SEASTUFF2 396 
		    percent_chance 20
			#const SEASTUFF1 721
			#const SEASTUFF2 396 
		    percent_chance 20
			#const SEASTUFF1 389
			#const SEASTUFF2 722 
	    end_random
	else
		start_random
			percent_chance 15	
			#const SEASTUFF1 721
			percent_chance 15	
			#const SEASTUFF1 722
			percent_chance 15	
			#const SEASTUFF1 389			
			percent_chance 15	
			#const SEASTUFF1 396			
			percent_chance 10
			#const SEASTUFF1 1148
			percent_chance 30
			#const SEASTUFF1 303
		end_random
		start_random
			percent_chance 15	
			#const SEASTUFF2 721
			percent_chance 15	
			#const SEASTUFF2 722
			percent_chance 15	
			#const SEASTUFF2 389			
			percent_chance 15	
			#const SEASTUFF2 396			
			percent_chance 10
			#const SEASTUFF2 1148
			percent_chance 30
			#const SEASTUFF2 303
	    end_random
	endif
endif

start_random
	percent_chance 50
create_object SEASTUFF1
{
if UP

 	number_of_groups     rnd(4,8)
else

	number_of_groups 6
endif
  	set_gaia_object_only

	group_variance 1
	min_distance_group_placement  3
	temp_min_distance_group_placement  15
	min_distance_to_players 10
	set_scaling_to_map_size
	terrain_to_place_on WATER1
		max_distance_to_other_zones 3
}
end_random	

start_random
	percent_chance 50
create_object SEASTUFF2
{
if UP

 	number_of_groups     rnd(4,8)
else

	number_of_groups 6
endif
  	set_gaia_object_only

	group_variance 1
	min_distance_group_placement  3
	temp_min_distance_group_placement  15
	min_distance_to_players 10
	set_scaling_to_map_size
	terrain_to_place_on WATER1
	max_distance_to_other_zones 3
}
end_random	



	
start_random
	percent_chance 80
create_object SEASTUFF1
{
if UP

 	number_of_groups     rnd(4,8)
else

	number_of_groups 6
endif
  	set_gaia_object_only

	group_variance 1
	min_distance_group_placement  3
	temp_min_distance_group_placement  15
	min_distance_to_players 10
	set_scaling_to_map_size
	terrain_to_place_on WATER2
}
end_random	
	
start_random
	percent_chance 80
create_object SEASTUFF2
{
if UP

 	number_of_groups     rnd(4,8)
else

	number_of_groups 6
endif
  	set_gaia_object_only

	group_variance 1
	min_distance_group_placement  3
	temp_min_distance_group_placement  15
	min_distance_to_players 10
	set_scaling_to_map_size
	terrain_to_place_on WATER2
}
end_random	

start_random
	percent_chance 80
create_object SEASTUFF1
{
if UP

 	number_of_groups     rnd(4,8)
else

	number_of_groups 6
endif
  	set_gaia_object_only

	group_variance 1
	min_distance_group_placement  3
	temp_min_distance_group_placement  15
	min_distance_to_players 10
	set_scaling_to_map_size
	terrain_to_place_on WATER3
}
end_random		
	
start_random
	percent_chance 80
create_object SEASTUFF2
{
if UP

 	number_of_groups     rnd(4,8)
else

	number_of_groups 6
endif
  	set_gaia_object_only

	group_variance 1
	min_distance_group_placement  3
	temp_min_distance_group_placement  15
	min_distance_to_players 10
	set_scaling_to_map_size
	terrain_to_place_on WATER3
}
end_random		





/* ****TOWN UPGRADE***** */

start_random
	percent_chance 6
create_object BARRACKS
{
  	set_place_for_every_player
	number_of_objects 1
  	min_distance_to_players 8
  	max_distance_to_players 14
}
	percent_chance 94
end_random

start_random
	percent_chance 5
create_object ARCHERY_RANGE
{
  	set_place_for_every_player
	number_of_objects 1
  	min_distance_to_players 8
  	max_distance_to_players 14
}
	percent_chance 95
end_random

start_random
	percent_chance 4
create_object MONASTERY
{
  	set_place_for_every_player
	number_of_objects 1
  	min_distance_to_players 8
  	max_distance_to_players 14
}
	percent_chance 96
end_random

start_random
	percent_chance 6
create_object MARKET
{
  	set_place_for_every_player
	number_of_objects 1
  	min_distance_to_players 8
  	max_distance_to_players 14
}
	percent_chance 94
end_random

start_random
	percent_chance 3
create_object SIEGE_WORKSHOP
{
  	set_place_for_every_player
	number_of_objects 1
  	min_distance_to_players 8
  	max_distance_to_players 14
}
	percent_chance 97
end_random

start_random
	percent_chance 4
create_object BLACKSMITH
{
  	set_place_for_every_player
	number_of_objects 1
  	min_distance_to_players 8
  	max_distance_to_players 14
}
	percent_chance 96
end_random


start_random
	percent_chance 4
create_object UNIVERSITY
{
  	set_place_for_every_player
	number_of_objects 1
  	min_distance_to_players 8
  	max_distance_to_players 14
}
	percent_chance 96
end_random

start_random
	percent_chance 7
create_object MILL
{
  	set_place_for_every_player
	number_of_objects 1
  	min_distance_to_players 8
  	max_distance_to_players 14
}
	percent_chance 93
end_random

start_random
	percent_chance 4
create_object HOUSE
{
  	set_place_for_every_player
	number_of_objects 4
  	min_distance_to_players 9
  	max_distance_to_players 14
}
	percent_chance 90
end_random

start_random
	percent_chance 10
create_object HOUSE
{
  	set_place_for_every_player
	number_of_objects 2
  	min_distance_to_players 9
  	max_distance_to_players 14
}
	percent_chance 90
end_random

start_random
	percent_chance 10
create_object HOUSE
{
  	set_place_for_every_player
	number_of_objects 1
  	min_distance_to_players 9
  	max_distance_to_players 14
}
	percent_chance 90
end_random

start_random
	percent_chance 5
create_object WATCH_TOWER
{
  	set_place_for_every_player
	number_of_objects 5
  	min_distance_to_players 8
  	max_distance_to_players 14
}
	percent_chance 95
end_random

start_random
	percent_chance 5
create_object OUTPOST
{
  	set_place_for_every_player
	number_of_objects 4
  	min_distance_to_players 8
  	max_distance_to_players 14
}
	percent_chance 95
end_random

start_random
	percent_chance 3
create_object CASTLE
{
  	set_place_for_every_player
	number_of_objects 1
  	min_distance_to_players 8
  	max_distance_to_players 14
}
	percent_chance 97
end_random

start_random
	percent_chance 5
create_object WALL
{
number_of_objects 9999
set_place_for_every_player
min_distance_to_players 18
max_distance_to_players 25
}
	percent_chance 95
end_random

start_random
	percent_chance 4
create_object PALISADE_WALL
{
number_of_objects 9999
set_place_for_every_player
min_distance_to_players 18
max_distance_to_players 25
}
	percent_chance 96
end_random



/* ******MIRACULOUS START******* */
if AOC
	start_random
		percent_chance 33
		#define RAREUNITSTARTAOC
		percent_chance 67
		#define COMMON	
	end_random
else
	start_random
		percent_chance 7
		if VILLAGE
		#define RAREUNITSTARTAOC
		elseif TOWN
		#define RAREUNITSTARTAOC		
		endif
		#define RAREUNITSTARTEXP
		
		percent_chance 16
		#define RAREUNITSTARTEXP
		percent_chance 10
		#define RAREUNITSTARTAOC
		percent_chance 67
		#define COMMON	
	end_random
endif

if RAREUNITSTARTAOC
	start_random
			percent_chance 3
		create_object CHAMPION
		{
			set_place_for_every_player
			number_of_objects 1
			min_distance_to_players 5
			max_distance_to_players 8
		}
			percent_chance 2
		create_object PALADIN
		{
			set_place_for_every_player
			number_of_objects 1
			min_distance_to_players 5
			max_distance_to_players 8
		}
			percent_chance 5
		create_object ADVANCED_HEAVY_CROSSBOWMAN
		{
			set_place_for_every_player
		if UP 
		number_of_objects rnd(1,5)
		else
		number_of_objects 3
		endif
			min_distance_to_players 6
			max_distance_to_players 9
		}	
			percent_chance 7
		create_object SKIRMISHER
		{
			set_place_for_every_player
		if UP 
		number_of_objects rnd(2,6)
		else
		number_of_objects 4
		endif
			min_distance_to_players 6
			max_distance_to_players 9
		}		
			percent_chance 4
		create_object ARBALEST
		{
			set_place_for_every_player
		if UP 
		number_of_objects rnd(1,5)
		else
		number_of_objects 3
		endif
			min_distance_to_players 6
			max_distance_to_players 9
		}
			percent_chance 5
		create_object MILITIA
		{
			set_place_for_every_player
		if UP 
		number_of_objects rnd(10,50)
		else
		number_of_objects 25
		endif
			min_distance_to_players 7
			max_distance_to_players 12
		}
			percent_chance 10
		create_object TRADE_CART
		{
			set_place_for_every_player
		if UP 
		number_of_objects rnd(1,4)
		else
		number_of_objects 2
		endif
			min_distance_to_players 6
			max_distance_to_players 9
		}
			percent_chance 8
		create_object MONK
		{
			set_place_for_every_player
			number_of_objects 1
			min_distance_to_players 5
			max_distance_to_players 8
		}
			percent_chance 3
		create_object TEUTONIC_KNIGHT
		{
			set_place_for_every_player
		if UP 
		number_of_objects rnd(1,4)
		else
		number_of_objects 2
		endif
			min_distance_to_players 5
			max_distance_to_players 8
		}	
				percent_chance 2
		create_object CHU_KO_NU
		{
			set_place_for_every_player
		if UP 
		number_of_objects rnd(1,4)
		else
		number_of_objects 2
		endif
			min_distance_to_players 5
			max_distance_to_players 8
		}
				percent_chance 2
		create_object WARWAGON
		{
			set_place_for_every_player
		number_of_objects 1
			min_distance_to_players 5
			max_distance_to_players 8
		}		
				percent_chance 2
		create_object WAR_ELEPHANT
		{
			set_place_for_every_player
		number_of_objects 1
			min_distance_to_players 5
			max_distance_to_players 8
		}	
				percent_chance 3		
		create_object HALBERDIER
		{
			set_place_for_every_player
		if UP 
		number_of_objects rnd(1,3)
		else
		number_of_objects 2
		endif
			min_distance_to_players 5
			max_distance_to_players 8
		}		
				percent_chance 5		
		create_object LONG_SWORDSMAN
		{
			set_place_for_every_player
		if UP 
		number_of_objects rnd(1,5)
		else
		number_of_objects 3
		endif
			min_distance_to_players 5
			max_distance_to_players 8
		}
				percent_chance 3
		create_object WOAD_RAIDER
		{
			set_place_for_every_player
		if UP 
		number_of_objects rnd(1,3)
		else
		number_of_objects 2
		endif
			min_distance_to_players 5
			max_distance_to_players 8
		}		
				percent_chance 3
		create_object HAND_CANNONEER
		{
			set_place_for_every_player
		number_of_objects 1
			min_distance_to_players 5
			max_distance_to_players 8
		}				
				percent_chance 2
		create_object CAMEL
		{
			set_place_for_every_player
		if UP 
		number_of_objects rnd(1,3)
		else
		number_of_objects 2
		endif
			min_distance_to_players 5
			max_distance_to_players 8
		}		
				percent_chance 3
		create_object BERSERK
		{
			set_place_for_every_player
		if UP 
		number_of_objects rnd(1,4)
		else
		number_of_objects 2
		endif
			min_distance_to_players 5
			max_distance_to_players 8
		}
				percent_chance 2
		create_object CONQUISTADOR
		{
			set_place_for_every_player
		if UP 
		number_of_objects rnd(1,2)
		else
		number_of_objects 1
		endif
			min_distance_to_players 5
			max_distance_to_players 8
		}	
				percent_chance 3
		create_object MISSIONARY
		{
			set_place_for_every_player
		if UP 
		number_of_objects rnd(1,3)
		else
		number_of_objects 1
		endif
			min_distance_to_players 5
			max_distance_to_players 8
		}	
				percent_chance 3
		create_object JAGUAR_WARRIOR
		{
			set_place_for_every_player
		if UP 
		number_of_objects rnd(1,4)
		else
		number_of_objects 2
		endif
			min_distance_to_players 5
			max_distance_to_players 8
		}		
				percent_chance 4
		create_object ALTERNATIVE_BERSERK
		{
			set_place_for_every_player
		if UP 
		number_of_objects rnd(1,4)
		else
		number_of_objects 2
		endif
			min_distance_to_players 5
			max_distance_to_players 8
		}	
				percent_chance 3
		create_object SUPER_ARMORED_ARCHER
		{
			set_place_for_every_player
		if UP 
		number_of_objects rnd(1,3)
		else
		number_of_objects 2
		endif
			min_distance_to_players 5
			max_distance_to_players 8
		}		
				percent_chance 3
		create_object SUPER_ARMORED_MILITIA
		{
			set_place_for_every_player
		if UP 
		number_of_objects rnd(1,3)
		else
		number_of_objects 2
		endif
			min_distance_to_players 5
			max_distance_to_players 8
		}	
				percent_chance 3
		create_object INFILTRATOR
		{
			set_place_for_every_player
		if UP 
		number_of_objects rnd(1,3)
		else
		number_of_objects 2
		endif
			min_distance_to_players 5
			max_distance_to_players 8
		}			
				percent_chance 1
		create_object COBRA_CAR
		{
			set_place_for_every_player
			number_of_objects 1
			min_distance_to_players 5
			max_distance_to_players 8
		}	
				percent_chance 6
		create_object HORSE
		{
			set_place_for_every_player
		if UP 
		number_of_objects rnd(5,18)
		else
		number_of_objects 8
		endif
			min_distance_to_players 7
			max_distance_to_players 12
		}		
		end_random
endif
	
if RAREUNITSTARTEXP
		start_random
			percent_chance 2
		create_object IMPERIAL_SKIRMISHER
		{
			set_place_for_every_player
		if UP 
		number_of_objects rnd(1,3)
		else
		number_of_objects 2
		endif
			min_distance_to_players 5
			max_distance_to_players 8
		}		
			percent_chance 2
		create_object CONDOTTIERO
		{
			set_place_for_every_player
		if UP 
		number_of_objects rnd(1,4)
		else
		number_of_objects 2
		endif
			min_distance_to_players 5
			max_distance_to_players 8
		}	
				percent_chance 2
		create_object IMPERIAL_CAMEL
		{
			set_place_for_every_player
			number_of_objects 1
			min_distance_to_players 5
			max_distance_to_players 8
		}		
				percent_chance 2
		create_object BATTLE_ELEPHANT
		{
			set_place_for_every_player
			number_of_objects 1
			min_distance_to_players 5
			max_distance_to_players 8
		}		
				percent_chance 2
		create_object SLINGER
		{
			set_place_for_every_player
		if UP 
		number_of_objects rnd(1,3)
		else
		number_of_objects 2
		endif
			min_distance_to_players 5
			max_distance_to_players 8
		}	
			percent_chance 2
		create_object RATTAN_ARCHER
		{
			set_place_for_every_player
		if UP 
		number_of_objects rnd(1,3)
		else
		number_of_objects 2
		endif
			min_distance_to_players 5
			max_distance_to_players 8
		}
			percent_chance 2
		create_object GENOESE_CROSSBOWMAN
		{
			set_place_for_every_player
		if UP 
		number_of_objects rnd(1,3)
		else
		number_of_objects 2
		endif
			min_distance_to_players 5
			max_distance_to_players 8
		}		
			percent_chance 2
		create_object DLC_GBETO
		{
			set_place_for_every_player
		if UP 
		number_of_objects rnd(1,3)
		else
		number_of_objects 2
		endif
			min_distance_to_players 5
			max_distance_to_players 8
		}			
				percent_chance 2
		create_object KAMAYUK
		{
			set_place_for_every_player
		if UP 
		number_of_objects rnd(1,4)
		else
		number_of_objects 2
		endif
			min_distance_to_players 5
			max_distance_to_players 8
		}
				percent_chance 2
		create_object KARAMBIT_WARRIOR
		{
			set_place_for_every_player
		if UP 
		number_of_objects rnd(5,15)
		else
		number_of_objects 8
		endif
			min_distance_to_players 5
			max_distance_to_players 8
		}
				percent_chance 2
		create_object SHOTEL_WARRIOR
		{
			set_place_for_every_player
		if UP 
		number_of_objects rnd(1,4)
		else
		number_of_objects 2
		endif
			min_distance_to_players 5
			max_distance_to_players 8
		}		
				percent_chance 2
		create_object MAGYAR_HUSZAR
		{
			set_place_for_every_player
		if UP 
		number_of_objects rnd(1,2)
		else
		number_of_objects 1
		endif
			min_distance_to_players 5
			max_distance_to_players 8
		}
				percent_chance 2
		create_object BOYAR
		{
			set_place_for_every_player
			number_of_objects 1
			min_distance_to_players 5
			max_distance_to_players 8
		}
				percent_chance 2
		create_object DLC_GENITOUR
		{
			set_place_for_every_player
		if UP 
		number_of_objects rnd(1,2)
		else
		number_of_objects 1
		endif
			min_distance_to_players 5
			max_distance_to_players 8
		}			
				percent_chance 2
		create_object DLC_CAMELARCHER
		{
			set_place_for_every_player
		if UP 
		number_of_objects rnd(1,2)
		else
		number_of_objects 1
		endif
			min_distance_to_players 5
			max_distance_to_players 8
		}			
				percent_chance 2
		create_object ARAMBAI
		{
			set_place_for_every_player
		if UP 
		number_of_objects rnd(1,2)
		else
		number_of_objects 1
		endif
			min_distance_to_players 5
			max_distance_to_players 8
		}		
				percent_chance 2
		create_object DLC_ORGANGUN
		{
			set_place_for_every_player
		if UP 
		number_of_objects rnd(1,2)
		else
		number_of_objects 1
		endif
			min_distance_to_players 5
			max_distance_to_players 8
		}	
				percent_chance 2
		create_object BALLISTA_ELEPHANT
		{
			set_place_for_every_player
		if UP 
		number_of_objects rnd(1,2)
		else
		number_of_objects 1
		endif
			min_distance_to_players 5
			max_distance_to_players 8
		}
				percent_chance 2
		create_object ELEPHANT_ARCHER
		{
			set_place_for_every_player
		if UP 
		number_of_objects rnd(1,2)
		else
		number_of_objects 1
		endif
			min_distance_to_players 5
			max_distance_to_players 8
		}		
				percent_chance 2
		create_object LEGIONARY
		{
			set_place_for_every_player
		if UP 
		number_of_objects rnd(1,3)
		else
		number_of_objects 2
		endif
			min_distance_to_players 5
			max_distance_to_players 8
		}	
				percent_chance 2
		create_object PRIEST
		{
			set_place_for_every_player
			number_of_objects 1
			min_distance_to_players 5
			max_distance_to_players 8
		}			
				percent_chance 2
		create_object ROYAL_JANISSARY
		{
			set_place_for_every_player
			number_of_objects 1
			min_distance_to_players 5
			max_distance_to_players 8
		}			
				percent_chance 2
		create_object AMAZON_ARCHER
		{
			set_place_for_every_player
		if UP 
		number_of_objects rnd(1,3)
		else
		number_of_objects 2
		endif
			min_distance_to_players 5
			max_distance_to_players 8
		}	
				percent_chance 2
		create_object AMAZON_WARRIOR
		{
			set_place_for_every_player
		if UP 
		number_of_objects rnd(1,3)
		else
		number_of_objects 2
		endif
			min_distance_to_players 5
			max_distance_to_players 8
		}		
				percent_chance 1
		create_object NORDIC_SWORDSMAN	
		{
			set_place_for_every_player
		if UP 
		number_of_objects rnd(1,3)
		else
		number_of_objects 2
		endif
			min_distance_to_players 5
			max_distance_to_players 8
		}
				percent_chance 1
		create_object EASTERN_SWORDSMAN
		{
			set_place_for_every_player
		if UP 
		number_of_objects rnd(1,4)
		else
		number_of_objects 2
		endif
			min_distance_to_players 7
			max_distance_to_players 12
		}		
				percent_chance 3
		create_object PENGUIN
		{
			set_place_for_every_player
		if UP 
		number_of_objects rnd(1,2)
		else
		number_of_objects 1
		endif
			min_distance_to_players 5
			max_distance_to_players 8
		}		
				percent_chance 1
		create_object SIEGE_TOWER
		{
			set_place_for_every_player
		if UP 
		number_of_objects rnd(1,2)
		else
		number_of_objects 1
		endif
			min_distance_to_players 5
			max_distance_to_players 8
		}	
				percent_chance 2
		create_object DLC_SIEGETOWER
		{
			set_place_for_every_player
		if UP 
		number_of_objects rnd(1,2)
		else
		number_of_objects 1
		endif
			min_distance_to_players 5
			max_distance_to_players 8
		}			
				percent_chance 2
		create_object FLAMETHROWER
		{
			set_place_for_every_player
			number_of_objects 1
			min_distance_to_players 5
			max_distance_to_players 8
		}	
				percent_chance 4
		create_object DONKEY
		{
			set_place_for_every_player
		if UP 
		number_of_objects rnd(1,4)
		else
		number_of_objects 2
		endif
			min_distance_to_players 7
			max_distance_to_players 12
		}		
				percent_chance 2
		create_object HEAVY_EAGLE_WARRIOR
		{
			set_place_for_every_player
		if UP 
		number_of_objects rnd(1,3)
		else
		number_of_objects 2
		endif
			min_distance_to_players 5
			max_distance_to_players 8
		}
				percent_chance 2
		create_object HEAVY_PIKEMAN
		{
			set_place_for_every_player
		if UP 
		number_of_objects rnd(1,3)
		else
		number_of_objects 2
		endif
			min_distance_to_players 5
			max_distance_to_players 8
		}
		end_random		
endif

if NOMADIC
elseif LANDNOMAD
else	
	if AOC
		start_random
			percent_chance 20
			#define HEROSTARTAOC
			percent_chance 80
			#define COMMON
		end_random
	else
		start_random
			percent_chance 4
			if VILLAGE
			#define HEROSTARTAOC
			elseif TOWN
			#define HEROSTARTAOC		
			endif		

			#define HEROSTARTEXP
			
			percent_chance 8
			#define HEROSTARTEXP
			percent_chance 6
			#define HEROSTARTAOC
			percent_chance 82
			#define COMMON
		end_random
	endif		
			
endif

if HEROSTARTAOC
    start_random
		percent_chance 8
	create_object HUNTING_WOLF
	{
		set_place_for_every_player
		number_of_objects 1
		min_distance_to_players 5
		max_distance_to_players 8
	}
		percent_chance 3
	create_object FRIAR_TUCK
	{
		set_place_for_every_player
		number_of_objects 1
		min_distance_to_players 5
		max_distance_to_players 8
	}	
		percent_chance 7
	create_object SCYTHIAN_WILD_WOMAN
	{
		set_place_for_every_player
		number_of_objects 1
		min_distance_to_players 5
		max_distance_to_players 8
	}	
		percent_chance 4
	create_object AETHELFIRTH
	{
		set_place_for_every_player
		number_of_objects 1
		min_distance_to_players 5
		max_distance_to_players 8
	}		
		percent_chance 1
	create_object GENGHIS_KHAN
	{
		set_place_for_every_player
		number_of_objects 1
		min_distance_to_players 5
		max_distance_to_players 8
	}	
		percent_chance 2
	create_object MASTER_OF_THE_TEMPLAR
	{
		set_place_for_every_player
		number_of_objects 1
		min_distance_to_players 5
		max_distance_to_players 8
	}
		percent_chance 3
	create_object ROLAND
	{
		set_place_for_every_player
		number_of_objects 1
		min_distance_to_players 5
		max_distance_to_players 8
	}
		percent_chance 4
	create_object SHERIFF_OF_NOTTINGHAM
	{
		set_place_for_every_player
		number_of_objects 1
		min_distance_to_players 5
		max_distance_to_players 8
	}		
		percent_chance 3
	create_object JOAN_THE_MAID
	{
		set_place_for_every_player
		number_of_objects 1
		min_distance_to_players 5
		max_distance_to_players 8
	}
		percent_chance 3
	create_object ERIK_THE_RED
	{
		set_place_for_every_player
		number_of_objects 1
		min_distance_to_players 5
		max_distance_to_players 8
	}	
		percent_chance 2
	create_object DUKE_D_ALENCON
	{
		set_place_for_every_player
		number_of_objects 1
		min_distance_to_players 5
		max_distance_to_players 8
	}	
		percent_chance 2
	create_object LA_HIRE
	{
		set_place_for_every_player
		number_of_objects 1
		min_distance_to_players 5
		max_distance_to_players 8
	}		
		percent_chance 3
	create_object JOAN_OF_ARC
	{
		set_place_for_every_player
		number_of_objects 1
		min_distance_to_players 5
		max_distance_to_players 8
	}
		percent_chance 3
	create_object BELISARIUS
	{
		set_place_for_every_player
		number_of_objects 1
		min_distance_to_players 5
		max_distance_to_players 8
	}	
		percent_chance 4
	create_object KITABATAKE
	{
		set_place_for_every_player
		number_of_objects 1
		min_distance_to_players 5
		max_distance_to_players 8
	}
		percent_chance 3
	create_object CHARLES_MARTEL
	{
		set_place_for_every_player
		number_of_objects 1
		min_distance_to_players 5
		max_distance_to_players 8
	}	
		percent_chance 3
	create_object CHARLEMAGNE
	{
		set_place_for_every_player
		number_of_objects 1
		min_distance_to_players 5
		max_distance_to_players 8
	}
		percent_chance 2
	create_object JEAN_BUREAU
	{
		set_place_for_every_player
		number_of_objects 1
		min_distance_to_players 5
		max_distance_to_players 8
	}
		percent_chance 2
	create_object SIEUR_DE_METZ
	{
		set_place_for_every_player
		number_of_objects 1
		min_distance_to_players 5
		max_distance_to_players 8
	}	
		percent_chance 2
	create_object HROLF_THE_GANGER
	{
		set_place_for_every_player
		number_of_objects 1
		min_distance_to_players 5
		max_distance_to_players 8
	}	
		percent_chance 3
	create_object ROBIN_HOOD
	{
		set_place_for_every_player
		number_of_objects 1
		min_distance_to_players 5
		max_distance_to_players 8
	}
		percent_chance 3
	create_object SIEGFRIED
	{
		set_place_for_every_player
		number_of_objects 1
		min_distance_to_players 5
		max_distance_to_players 8
	}
		percent_chance 2	
	create_object RICHARD_THE_LIONHARTED
	{
		set_place_for_every_player
		number_of_objects 1
		min_distance_to_players 5
		max_distance_to_players 8
	}
		percent_chance 4	
	create_object THEODORIC_THE_GOTH
	{
		set_place_for_every_player
		number_of_objects 1
		min_distance_to_players 5
		max_distance_to_players 8
	}
		percent_chance 3	
	create_object WILLIAM_WALLACE
	{
		set_place_for_every_player
		number_of_objects 1
		min_distance_to_players 5
		max_distance_to_players 8
	}	
		percent_chance 3	
	create_object ARCHERS_OF_THE_EYES
	{
		set_place_for_every_player
		number_of_objects 1
		min_distance_to_players 5
		max_distance_to_players 8
	}	
		percent_chance 2	
	create_object SUBOTAI
	{
		set_place_for_every_player
		number_of_objects 1
		min_distance_to_players 5
		max_distance_to_players 8
	}	
		percent_chance 2	
	create_object TAMERLANE
	{
		set_place_for_every_player
		number_of_objects 1
		min_distance_to_players 5
		max_distance_to_players 8
	}	
		percent_chance 2	
	create_object KUSHLUK
	{
		set_place_for_every_player
		number_of_objects 1
		min_distance_to_players 5
		max_distance_to_players 8
	}		
		percent_chance 5	
	create_object EMPEROR_IN_A_BARREL
	{
		set_place_for_every_player
		number_of_objects 1
		min_distance_to_players 5
		max_distance_to_players 8
	}	
		percent_chance 5	
	create_object SCYTHIAN_SCOUT
	{
		set_place_for_every_player
		number_of_objects 1
		min_distance_to_players 5
		max_distance_to_players 8
	}
		percent_chance 2	
	create_object EL_CID
	{
		set_place_for_every_player
		number_of_objects 1
		min_distance_to_players 5
		max_distance_to_players 8
	}	
	end_random
endif

if HEROSTARTEXP
	start_random
		percent_chance 2
	create_object SPY
	{
		set_place_for_every_player
		number_of_objects 1
		min_distance_to_players 5
		max_distance_to_players 8
	}		
		percent_chance 4	
	create_object ALFRED_THE_ALPACA
	{
		set_place_for_every_player
		number_of_objects 1
		min_distance_to_players 5
		max_distance_to_players 8
	}		
		percent_chance 2	
	create_object DLC_MUSA
	{
		set_place_for_every_player
		number_of_objects 1
		min_distance_to_players 5
		max_distance_to_players 8
	}	
			percent_chance 2	
	create_object DLC_TARIQ
	{
		set_place_for_every_player
		number_of_objects 1
		min_distance_to_players 5
		max_distance_to_players 8
	}	
			percent_chance 2	
	create_object DLC_ABRAHAELEPHANT
	{
		set_place_for_every_player
		number_of_objects 1
		min_distance_to_players 5
		max_distance_to_players 8
	}	
			percent_chance 2	
	create_object DLC_TRISTAN
	{
		set_place_for_every_player
		number_of_objects 1
		min_distance_to_players 5
		max_distance_to_players 8
	}	
			percent_chance 2	
	create_object DLC_YODIT
	{
		set_place_for_every_player
		number_of_objects 1
		min_distance_to_players 5
		max_distance_to_players 8
	}	
			percent_chance 2	
	create_object DLC_YEKUNOAMLAK
	{
		set_place_for_every_player
		number_of_objects 1
		min_distance_to_players 5
		max_distance_to_players 8
	}	
			percent_chance 2	
	create_object DLC_WARRIORYODIT
	{
		set_place_for_every_player
		number_of_objects 1
		min_distance_to_players 5
		max_distance_to_players 8
	}	
			percent_chance 2	
	create_object DLC_MUSTAFA
	{
		set_place_for_every_player
		number_of_objects 1
		min_distance_to_players 5
		max_distance_to_players 8
	}	
			percent_chance 2	
	create_object DLC_PACAL2
	{
		set_place_for_every_player
		number_of_objects 1
		min_distance_to_players 5
		max_distance_to_players 8
	}	
			percent_chance 2	
	create_object DLC_BABUR
	{
		set_place_for_every_player
		number_of_objects 1
		min_distance_to_players 5
		max_distance_to_players 8
	}	
			percent_chance 2	
	create_object DLC_GUGLIELMO
	{
		set_place_for_every_player
		number_of_objects 1
		min_distance_to_players 5
		max_distance_to_players 8
	}	
			percent_chance 6	
	create_object DLC_LITTLEJOHN
	{
		set_place_for_every_player
		number_of_objects 1
		min_distance_to_players 5
		max_distance_to_players 8
	}	
			percent_chance 2	
	create_object DLC_SU_DINGFANG
	{
		set_place_for_every_player
		number_of_objects 1
		min_distance_to_players 5
		max_distance_to_players 8
	}	
			percent_chance 2	
	create_object DLC_PACHACUTI
	{
		set_place_for_every_player
		number_of_objects 1
		min_distance_to_players 5
		max_distance_to_players 8
	}	
			percent_chance 2	
	create_object DLC_HUAYNA_CAPAC
	{
		set_place_for_every_player
		number_of_objects 1
		min_distance_to_players 5
		max_distance_to_players 8
	}	
			percent_chance 2	
	create_object DLC_ITZCOATL
	{
		set_place_for_every_player
		number_of_objects 1
		min_distance_to_players 5
		max_distance_to_players 8
	}	
			percent_chance 2	
	create_object DLC_HENRY2
	{
		set_place_for_every_player
		number_of_objects 1
		min_distance_to_players 5
		max_distance_to_players 8
	}	
			percent_chance 2	
	create_object DLC_ZAWISZATHEBLACK
	{
		set_place_for_every_player
		number_of_objects 1
		min_distance_to_players 5
		max_distance_to_players 8
	}	
			percent_chance 2	
	create_object DLC_DAGNAJAN
	{
		set_place_for_every_player
		number_of_objects 1
		min_distance_to_players 5
		max_distance_to_players 8
	}	
			percent_chance 4	
	create_object QUAUHTEMOC
	{
		set_place_for_every_player
		number_of_objects 1
		min_distance_to_players 5
		max_distance_to_players 8
	}	
			percent_chance 4	
	create_object FRANCISCO_DE_ORELLANA
	{
		set_place_for_every_player
		number_of_objects 1
		min_distance_to_players 5
		max_distance_to_players 8
	}	
			percent_chance 4	
	create_object FREDERICK_BARBAROSSA
	{
		set_place_for_every_player
		number_of_objects 1
		min_distance_to_players 5
		max_distance_to_players 8
	}	
			percent_chance 2	
	create_object SANYOGITA
	{
		set_place_for_every_player
		number_of_objects 1
		min_distance_to_players 5
		max_distance_to_players 8
	}	
			percent_chance 2	
	create_object PRITHVI
	{
		set_place_for_every_player
		number_of_objects 1
		min_distance_to_players 5
		max_distance_to_players 8
	}	
			percent_chance 2	
	create_object CHAND_BHAI
	{
		set_place_for_every_player
		number_of_objects 1
		min_distance_to_players 5
		max_distance_to_players 8
	}		
			percent_chance 2	
	create_object JARL
	{
		set_place_for_every_player
		number_of_objects 1
		min_distance_to_players 5
		max_distance_to_players 8
	}	
			percent_chance 4	
	create_object SALADIN
	{
		set_place_for_every_player
		number_of_objects 1
		min_distance_to_players 5
		max_distance_to_players 8
	}	
			percent_chance 6	
	create_object GAJAH_MADA
	{
		set_place_for_every_player
		number_of_objects 1
		min_distance_to_players 5
		max_distance_to_players 8
	}		
			percent_chance 2	
	create_object LE_LOI
	{
		set_place_for_every_player
		number_of_objects 1
		min_distance_to_players 5
		max_distance_to_players 8
	}
			percent_chance 2	
	create_object BAYINNAUNG
	{
		set_place_for_every_player
		number_of_objects 1
		min_distance_to_players 5
		max_distance_to_players 8
	}
			percent_chance 2	
	create_object LUU_NHAN_CHU
	{
		set_place_for_every_player
		number_of_objects 1
		min_distance_to_players 5
		max_distance_to_players 8
	}
			percent_chance 2	
	create_object VLAD_DRACULA
	{
		set_place_for_every_player
		number_of_objects 1
		min_distance_to_players 5
		max_distance_to_players 8
	}	
			percent_chance 4	
	create_object BUI_BI
	{
		set_place_for_every_player
		number_of_objects 1
		min_distance_to_players 5
		max_distance_to_players 8
	}
			percent_chance 4	
	create_object SUNDA_ROYAL_FIGHTER
	{
		set_place_for_every_player
		number_of_objects 1
		min_distance_to_players 5
		max_distance_to_players 8
	}	
			percent_chance 4	
	create_object JAYAVIRAVARMAN
	{
		set_place_for_every_player
		number_of_objects 1
		min_distance_to_players 5
		max_distance_to_players 8
	}
			percent_chance 2	
	create_object TABINSHWEHTI
	{
		set_place_for_every_player
		number_of_objects 1
		min_distance_to_players 5
		max_distance_to_players 8
	}
	end_random
endif

if LANDNOMAD
			#define COMMON
elseif NOMADIC
	start_random
		percent_chance 10
			#define DESTRUCTIVESTART
		percent_chance 90
			#define COMMON
	end_random	
elseif SUDDENDEATH
	start_random
		percent_chance 7
			#define DESTRUCTIVESTART
		percent_chance 93
			#define COMMON
	end_random
else
	start_random
		percent_chance 12
			#define DESTRUCTIVESTART
		percent_chance 88
			#define COMMON
	end_random
endif


if DESTRUCTIVESTART
    start_random
		percent_chance 3
	create_object SABOTEUR
	{
		set_place_for_every_player
		number_of_objects 1
		min_distance_to_players 5
		max_distance_to_players 8
	}
		percent_chance 1
	create_object SABOTEUR
	{
		set_place_for_every_player
		number_of_objects 3
		min_distance_to_players 5
		max_distance_to_players 8
	}	
		percent_chance 40
	create_object PETARD
	{
		set_place_for_every_player
	if UP 
	number_of_objects rnd(1,3)
	else
	number_of_objects 2
	endif
		min_distance_to_players 5
		max_distance_to_players 8
	}
		percent_chance 15
	create_object PETARD
	{
		set_place_for_every_player
	if UP 
	number_of_objects rnd(5,12)
	else
	number_of_objects 8
	endif
		min_distance_to_players 7
		max_distance_to_players 10
	}
		percent_chance 2
	create_object SIEGE_RAM
	{
		set_place_for_every_player
		number_of_objects 1
		min_distance_to_players 5
		max_distance_to_players 8
	}	
		percent_chance 3
	create_object CAPPED_RAM
	{
		set_place_for_every_player
		number_of_objects 1
		min_distance_to_players 5
		max_distance_to_players 8
	}
		percent_chance 5
	create_object BATTERING_RAM
	{
		set_place_for_every_player
		number_of_objects 1
		min_distance_to_players 5
		max_distance_to_players 8
	}	
		percent_chance 5
	create_object HEAVY_SCORPION
	{
		set_place_for_every_player
		number_of_objects 1
		min_distance_to_players 5
		max_distance_to_players 8
	}	
		percent_chance 2
	create_object HEAVY_SCORPION
	{
		set_place_for_every_player
		number_of_objects 2
		min_distance_to_players 5
		max_distance_to_players 8
	}	
		percent_chance 4
	create_object SCORPION
	{
		set_place_for_every_player
		number_of_objects 1
		min_distance_to_players 5
		max_distance_to_players 8
	}		
		percent_chance 4
	create_object SCORPION
	{
		set_place_for_every_player
	if UP 
	number_of_objects rnd(2,3)
	else
	number_of_objects 2
	endif
		min_distance_to_players 5
		max_distance_to_players 8
	}	
		percent_chance 3
	create_object SCORPION
	{
		set_place_for_every_player
	if UP 
	number_of_objects rnd(4,7)
	else
	number_of_objects 5
	endif
		min_distance_to_players 5
		max_distance_to_players 8
	}		
		percent_chance 1
	create_object SIEGE_ONAGER
	{
		set_place_for_every_player
		number_of_objects 1
		min_distance_to_players 5
		max_distance_to_players 8
	}
		percent_chance 2
	create_object ONAGER
	{
		set_place_for_every_player
		number_of_objects 1
		min_distance_to_players 5
		max_distance_to_players 8
	}		
		percent_chance 3
	create_object MANGONEL
	{
		set_place_for_every_player
		number_of_objects 1
		min_distance_to_players 5
		max_distance_to_players 8
	}
		percent_chance 2
	create_object MANGONEL
	{
		set_place_for_every_player
		number_of_objects 2
		min_distance_to_players 5
		max_distance_to_players 8
	}	
		percent_chance 1
	create_object TREBUCHET
	{
		set_place_for_every_player
		number_of_objects 1
		min_distance_to_players 7
		max_distance_to_players 9
	}
		percent_chance 1
	create_object TREBUCHET_PACKED
	{
		set_place_for_every_player
		number_of_objects 1
		min_distance_to_players 7
		max_distance_to_players 9
	}	
		percent_chance 2
	create_object BOMBARD_CANNON
	{
		set_place_for_every_player
		number_of_objects 1
		min_distance_to_players 7
		max_distance_to_players 9
	}
		percent_chance 1
	create_object JEAN_DE_LORRAIN
	{
		set_place_for_every_player
		number_of_objects 1
		min_distance_to_players 7
		max_distance_to_players 9
	}	
    end_random
endif

if AOC	
    start_random
            percent_chance 20
            #define BUILDINGSTARTAOC
            percent_chance 80
            #define COMMON
    end_random
else
    start_random
            percent_chance 3
            #define BUILDINGSTARTAOC
            #define BUILDINGSTARTEXP
            percent_chance 10
            #define BUILDINGSTARTEXP
            percent_chance 6
            #define BUILDINGSTARTAOC
            percent_chance 81
            #define COMMON
    end_random
endif

if BUILDINGSTARTAOC
	start_random
		percent_chance 4
	create_object DOME_OF_THE_ROCK
	{
		set_place_for_every_player
		number_of_objects 1
		min_distance_to_players 11
		max_distance_to_players 12
	}		
		percent_chance 4
	create_object CATHEDRAL
	{
		set_place_for_every_player
		number_of_objects 1
		min_distance_to_players 11
		max_distance_to_players 12
	}	
		percent_chance 1
	create_object WONDER
	{
		set_place_for_every_player
		number_of_objects 1
		min_distance_to_players 11
		max_distance_to_players 12
	}
		percent_chance 8
	create_object THE_TOWER_OF_FLIES
	{
		set_place_for_every_player
	if UP 
	number_of_objects rnd(1,3)
	else
	number_of_objects 2
	endif
		min_distance_to_players 9
		max_distance_to_players 13
	}
		percent_chance 10
	create_object KEEP
	{
		set_place_for_every_player
	if UP 
	number_of_objects rnd(1,3)
	else
	number_of_objects 2
	endif
		min_distance_to_players 9
		max_distance_to_players 13
	}	
		percent_chance 8
	create_object THE_ACCURSED_TOWER
	{
		set_place_for_every_player
	if UP 
	number_of_objects rnd(1,3)
	else
	number_of_objects 2
	endif
		min_distance_to_players 9
		max_distance_to_players 13
	}
		percent_chance 7	
	create_object CASTLE
	{
		set_place_for_every_player
	if UP 
	number_of_objects rnd(1,5)
	else
	number_of_objects 3
	endif
		min_distance_to_players 9
		max_distance_to_players 13
	}	
		percent_chance 10
	create_object GUARD_TOWER
	{
		set_place_for_every_player
	if UP 
	number_of_objects rnd(2,10)
	else
	number_of_objects 6
	endif
		min_distance_to_players 8
		max_distance_to_players 14
	}
		percent_chance 6
	create_object BOMBARD_TOWER
	{
		set_place_for_every_player
	if UP 
	number_of_objects rnd(2,8)
	else
	number_of_objects 5
	endif
		min_distance_to_players 8
		max_distance_to_players 12
	}
		percent_chance 15
	create_object FORTIFIED_WALL
	{
		set_place_for_every_player
		number_of_objects 60
		min_distance_to_players 10
		max_distance_to_players 14
	}
		percent_chance 11
	create_object BARRACKS
	{
		set_place_for_every_player
		number_of_objects 3
		min_distance_to_players 9
		max_distance_to_players 15
	}	
		percent_chance 10
	create_object OUTPOST
	{
		set_place_for_every_player
		number_of_objects 8
		min_distance_to_players 13
		max_distance_to_players 16
	}
		percent_chance 6
	create_object TRADE_WORKSHOP
	{
		set_place_for_every_player
		number_of_objects 1
		min_distance_to_players 9
		max_distance_to_players 13
	}	
    end_random
endif	

if BUIDLINGSTARTEXP
	start_random
			percent_chance 7
		create_object DLC_FEITORIA
		{
			set_place_for_every_player
			number_of_objects 1
			min_distance_to_players 9
			max_distance_to_players 13
		}
			percent_chance 12
		create_object DLC_AFRICANHUT_A
		{
			set_place_for_every_player
			number_of_objects 1
			min_distance_to_players 9
			max_distance_to_players 13
		}
		create_object DLC_AFRICANHUT_B
		{
			set_place_for_every_player
			number_of_objects 1
			min_distance_to_players 9
			max_distance_to_players 13
		}
		create_object DLC_AFRICANHUT_C
		{
			set_place_for_every_player
			number_of_objects 1
			min_distance_to_players 9
			max_distance_to_players 13
		}
		create_object DLC_AFRICANHUT_D
		{
			set_place_for_every_player
			number_of_objects 1
			min_distance_to_players 9
			max_distance_to_players 13
		}
		create_object DLC_AFRICANHUT_E
		{
			set_place_for_every_player
			number_of_objects 1
			min_distance_to_players 9
			max_distance_to_players 13
		}	
		create_object DLC_AFRICANHUT_F
		{
			set_place_for_every_player
			number_of_objects 1
			min_distance_to_players 9
			max_distance_to_players 13
		}
		create_object DLC_AFRICANHUT_G
		{
			set_place_for_every_player
			number_of_objects 1
			min_distance_to_players 9
			max_distance_to_players 13
		}	
			percent_chance 9
		create_object DLC_GRANARY
		{
			set_place_for_every_player
			number_of_objects 1
			min_distance_to_players 9
			max_distance_to_players 13
		}			
			percent_chance 8
		create_object DLC_BARRICADE
		{
			set_place_for_every_player
			number_of_objects 10
			min_distance_to_players 9
			max_distance_to_players 13
		}	
			percent_chance 1
		create_object PALACE
		{
			set_place_for_every_player
			number_of_objects 10
			min_distance_to_players 9
			max_distance_to_players 13
		}	
			percent_chance 9
		create_object SEA_FORTIFICATION
		{
			set_place_for_every_player
		if UP 
		number_of_objects rnd(2,5)
		else
		number_of_objects 3
		endif
			min_distance_to_players 8
			max_distance_to_players 13
		}
			percent_chance 10
		create_object FORTRESS
		{
			set_place_for_every_player
			number_of_objects 1
			min_distance_to_players 10
			max_distance_to_players 11
		}
			percent_chance 4
		create_object SANCHI_STUPA
		{
			set_place_for_every_player
			number_of_objects 1
			min_distance_to_players 10
			max_distance_to_players 11
		}
			percent_chance 4
		create_object GOL_GUMBAZ
		{
			set_place_for_every_player
			number_of_objects 1
			min_distance_to_players 10
			max_distance_to_players 11
		}	
			percent_chance 10
		create_object FIRE_TOWER
		{
			set_place_for_every_player
		if UP 
		number_of_objects rnd(2,5)
		else
		number_of_objects 3
		endif
			min_distance_to_players 8
			max_distance_to_players 13
		}	
		
			percent_chance 6
		create_object FORTIFIED_PALISADE_WALL
		{
			set_place_for_every_player
			number_of_objects 100
			min_distance_to_players 11
			max_distance_to_players 13
		}
			percent_chance 6
		create_object CITY_WALL
		{
			set_place_for_every_player
			number_of_objects 100
			min_distance_to_players 10
			max_distance_to_players 12
		}
			percent_chance 6
		create_object AQUEDUCT
		{
			set_place_for_every_player
			number_of_objects 100
			min_distance_to_players 10
			max_distance_to_players 12
		}
			percent_chance 8
		create_object DLC_FENCE
		{
			set_place_for_every_player
			number_of_objects 60
			min_distance_to_players 10
			max_distance_to_players 14
		}	
	end_random
endif	

	
/* *********************************GOLD AND STONE************************** */

/* MAIN GOLD & STONE */

start_random
    percent_chance 95 	#define MAINGOLD
    percent_chance 5 	#define NOMAINGOLD
end_random


if MAINGOLD
	create_object GOLD /* primary */
	{
	start_random
        percent_chance 10
            number_of_objects 2
        percent_chance 10
            number_of_objects 3
        percent_chance 10
            number_of_objects 4
        percent_chance 20
            number_of_objects 5
        percent_chance 20
            number_of_objects 7
        percent_chance 10
            number_of_objects 8
        percent_chance 10
            number_of_objects 10
        percent_chance 10
            number_of_objects 12
	end_random
		group_placement_radius     4
		set_tight_grouping
		set_gaia_object_only
		set_place_for_every_player
	start_random
        percent_chance 25
            min_distance_to_players 5
            max_distance_to_players 10
        percent_chance 25
            min_distance_to_players 10
            max_distance_to_players 15
        percent_chance 25
            min_distance_to_players 12
            max_distance_to_players 18
        percent_chance 25
            min_distance_to_players 15
            max_distance_to_players 20
	end_random
		max_distance_to_players    24
		min_distance_group_placement  3
		temp_min_distance_group_placement  5
	}
endif


start_random
    percent_chance 95 	#define MAINSTONE
    percent_chance 5 	#define NOMAINSTONE
end_random


if MAINSTONE
	create_object STONE /* primary */
	{
	start_random
		percent_chance 10
			number_of_objects 2
		percent_chance 10
			number_of_objects 3
		percent_chance 20
			number_of_objects 4
		percent_chance 30
			number_of_objects 5
		percent_chance 10
			number_of_objects 7
		percent_chance 10
			number_of_objects 8
		percent_chance 5
			number_of_objects 10
		percent_chance 5
			number_of_objects 12
	end_random
		group_placement_radius     4
		set_tight_grouping
		set_gaia_object_only
		set_place_for_every_player
	start_random
        percent_chance 25
            min_distance_to_players 5
            max_distance_to_players 12
        percent_chance 25
            min_distance_to_players 12
            max_distance_to_players 16
        percent_chance 25
            min_distance_to_players 14
            max_distance_to_players 19
        percent_chance 25
            min_distance_to_players 16
            max_distance_to_players 22
	end_random
		min_distance_group_placement  3
		temp_min_distance_group_placement  5
	}
endif

/* SECOND GOLD & STONE */


start_random
    percent_chance 90 	#define SECONDGOLD
    percent_chance 10 	#define NOSECONDGOLD
end_random


if SECONDGOLD
	create_object GOLD /* secondary */
	{
	start_random
        percent_chance 10
            number_of_objects 1
        percent_chance 10
            number_of_objects 2
        percent_chance 20
            number_of_objects 3
        percent_chance 20
            number_of_objects 4
        percent_chance 20
            number_of_objects 5
        percent_chance 10
            number_of_objects 6
        percent_chance 5
            number_of_objects 7
        percent_chance 5
            number_of_objects 8
	end_random
		group_placement_radius     4
		set_tight_grouping
		set_gaia_object_only
		set_place_for_every_player
	start_random
        percent_chance 25
            min_distance_to_players 5
            max_distance_to_players 12
        percent_chance 25
            min_distance_to_players 12
            max_distance_to_players 16
        percent_chance 25
            min_distance_to_players 15
            max_distance_to_players 20
        percent_chance 25
            min_distance_to_players 18
            max_distance_to_players 24
	end_random
		min_distance_group_placement  3
		temp_min_distance_group_placement  5
	}
endif

if VILLAGE
    start_random
        percent_chance 80 	#define SECONDSTONE
        percent_chance 20 	#define NOSECONDSTONE
	end_random
else
	start_random
        percent_chance 60	#define SECONDSTONE
        percent_chance 40 	#define NOSECONDSTONE
	end_random
endif


if SECONDSTONE
	create_object STONE /* secondary */
	{
	start_random
	percent_chance 10
		number_of_objects 1
	percent_chance 10
		number_of_objects 2
	percent_chance 25
		number_of_objects 3
	percent_chance 25
		number_of_objects 4
	percent_chance 10
		number_of_objects 5
	percent_chance 10
		number_of_objects 6
	percent_chance 5
		number_of_objects 7
	percent_chance 5
		number_of_objects 8
	end_random
		group_placement_radius     4
		set_tight_grouping
		set_gaia_object_only
		set_place_for_every_player
	start_random
	percent_chance 25
		min_distance_to_players 5
		max_distance_to_players 12
	percent_chance 25
		min_distance_to_players 12
		max_distance_to_players 20
	percent_chance 25
		min_distance_to_players 15
		max_distance_to_players 24
	percent_chance 25
		min_distance_to_players 18
		max_distance_to_players 24
	end_random
	min_distance_group_placement  3
	temp_min_distance_group_placement  5
	}
endif

/* THRID GOLD & STONE (only with town per player) */


if VILLAGE
	start_random
        percent_chance 60 	#define THIRDGOLD
        percent_chance 40 	#define NOTHIRDGOLD
	end_random
else 
	#define NOTHIRDGOLD
endif

if THIRDGOLD
	create_object GOLD /* third */
	{
	start_random
	percent_chance 20
		number_of_objects 1
	percent_chance 20
		number_of_objects 2
	percent_chance 20
		number_of_objects 3
	percent_chance 20
		number_of_objects 4
	percent_chance 20
		number_of_objects 5
	end_random
		group_placement_radius     4
		set_tight_grouping
		set_gaia_object_only
		set_place_for_every_player
	start_random
	percent_chance 25
		min_distance_to_players 11
		max_distance_to_players  16
	percent_chance 25
		min_distance_to_players 18
		max_distance_to_players 24
	percent_chance 25
		min_distance_to_players 21
		max_distance_to_players 30
	percent_chance 25
		min_distance_to_players 24
		max_distance_to_players 30
	end_random
	min_distance_group_placement  2
	temp_min_distance_group_placement  5
	}
endif

if VILLAGE
	start_random
	percent_chance 40 	#define THIRDSTONE
	percent_chance 60 	#define NOTHIRDSTONE
	end_random
else 
	#define NOTHIRDSTONE
endif

if THIRDGOLD
	create_object STONE /* third */
	{
	start_random
        percent_chance 20
            number_of_objects 1
        percent_chance 30
            number_of_objects 2
        percent_chance 20
            number_of_objects 3
        percent_chance 20
            number_of_objects 4
        percent_chance 10
            number_of_objects 5
	end_random
		group_placement_radius     4
		set_tight_grouping
		set_gaia_object_only
		set_place_for_every_player
	start_random
        percent_chance 25
            min_distance_to_players 11
            max_distance_to_players  16
        percent_chance 25
            min_distance_to_players 18
            max_distance_to_players 24
        percent_chance 25
            min_distance_to_players 21
            max_distance_to_players 30
        percent_chance 25
            min_distance_to_players 24
            max_distance_to_players 30
	end_random

	min_distance_group_placement  2
	temp_min_distance_group_placement  5
	}
endif



/* ************************* CATTLE *********************** */


create_object CATTLE /* primary */
{
start_random
    percent_chance 5
        number_of_objects 1
    percent_chance 10
        number_of_objects 2
    percent_chance 15
        number_of_objects 3
    percent_chance 30
        number_of_objects 4
    percent_chance 15
        number_of_objects 5
    percent_chance 10
        number_of_objects 6
    percent_chance 10
        number_of_objects 7
    percent_chance 5
        number_of_objects 8
end_random
   	set_loose_grouping
   	set_gaia_object_only
   	set_place_for_every_player
   	min_distance_to_players    9
   	max_distance_to_players    11
}

create_object CATTLE /* secondary */
{
start_random
    percent_chance 26
        number_of_objects 1
    percent_chance 40
        number_of_objects 2
    percent_chance 26
        number_of_objects 3
    percent_chance 8
        number_of_objects 5
end_random

start_random
    percent_chance 17
        number_of_groups 1
    percent_chance 75
        number_of_groups 2
    percent_chance 5
        number_of_groups 3
    percent_chance 3
        number_of_groups 4
end_random
   	set_loose_grouping
   	set_gaia_object_only
   	set_place_for_every_player
   	min_distance_to_players    13
   	max_distance_to_players    25
}

/* **************** HUNT ********************** */

start_random 
    percent_chance 80
        #define YESBIGHUNT
    percent_chance 20
        #define NOBIGHUNT
end_random

if YESBIGHUNT
create_object BIGHUNT
{
number_of_objects 1
start_random
	percent_chance 23
    number_of_groups 1
	percent_chance 60
    number_of_groups 2
	percent_chance 10
    number_of_groups 3
	percent_chance 4
    number_of_groups 4
	percent_chance 3
    number_of_groups 5
end_random
set_loose_grouping  
set_gaia_object_only
set_place_for_every_player
start_random
	percent_chance 25
	min_distance_to_players 9
	max_distance_to_players 15
	percent_chance 50
	min_distance_to_players 15
	max_distance_to_players 21
	percent_chance 25
	min_distance_to_players 20
	max_distance_to_players 26
end_random
	min_distance_group_placement  1
	temp_min_distance_group_placement  3
}
endif

if NOBIGHUNT
	start_random
	percent_chance 50
		#define TWOHUNT
		#define ONEHUNT
	percent_chance 50
		#define ONEHUNT
	end_random
else
	start_random
	percent_chance 30
		#define TWOHUNT
		#define ONEHUNT
	percent_chance 50
		#define ONEHUNT
	percent_chance 20
		#define NOHUNT
	end_random
endif

if ONEHUNT
	create_object HUNT1
	{
	start_random
		percent_chance 7
		number_of_objects 1
		group_placement_radius 3
		percent_chance 8
		number_of_objects 2
		group_placement_radius 3
		percent_chance 20
		number_of_objects 3
		group_placement_radius 3
		percent_chance 30
		number_of_objects 4
		group_placement_radius 3
		percent_chance 15
		number_of_objects 5
		group_placement_radius 3
		percent_chance 10
		number_of_objects 6
		group_placement_radius 3
		percent_chance 5
		number_of_objects 8
		group_placement_radius 4
		percent_chance 5
		number_of_objects 10
		group_placement_radius 4
	end_random

	set_loose_grouping
	set_gaia_object_only
	set_place_for_every_player
	start_random
		percent_chance 10
		min_distance_to_players 7
		max_distance_to_players 12
		percent_chance 20
		min_distance_to_players 12
		max_distance_to_players 18
		percent_chance 50
		min_distance_to_players 18
		max_distance_to_players 23
		percent_chance 20
		min_distance_to_players 24
		max_distance_to_players 29
	end_random
	}
endif

if TWOHUNT
	create_object HUNT2
	{
	start_random
		percent_chance 10
		number_of_objects 1
		percent_chance 10
		number_of_objects 2
		percent_chance 40
		number_of_objects 3
		percent_chance 30
		number_of_objects 4
		percent_chance 5
		number_of_objects 5
		percent_chance 5
		number_of_objects 6
	end_random
		group_placement_radius 3
	set_loose_grouping
	set_gaia_object_only
	set_place_for_every_player
	start_random
		percent_chance 25
		min_distance_to_players 12
		max_distance_to_players 18
		percent_chance 50
		min_distance_to_players 18
		max_distance_to_players 23
		percent_chance 25
		min_distance_to_players 24
		max_distance_to_players 30
	end_random
	}
endif

/* ******************************** FORAGE BUSHES ************************** */

start_random
    percent_chance 25
	    #define YELLOWBUSH
    percent_chance 25
	    #define GREENBUSH
    percent_chance 25
	    #define YELLOWBUSH
	    #define GREENBUSH
    percent_chance 25
	    #define NOBUSH
end_random

if GREENBUSH
	create_object FORAGE
	{
	start_random
		percent_chance 25
		number_of_objects 4
		percent_chance 50
		number_of_objects 6
		percent_chance 25
		number_of_objects 8
	end_random
		set_tight_grouping
		group_placement_radius 4
		set_gaia_object_only
		set_place_for_every_player
	start_random
		percent_chance 15
		min_distance_to_players 7
		max_distance_to_players 10
		percent_chance 70
		min_distance_to_players 10
		max_distance_to_players 13
		percent_chance 15
		min_distance_to_players 14
		max_distance_to_players 17
	end_random
		min_distance_group_placement  3
		temp_min_distance_group_placement  7
	
	}
endif	
	
	
if YELLOWBUSH
	if AOC
		create_object FORAGE
		{
		start_random
			percent_chance 25
			number_of_objects 4
			percent_chance 50
			number_of_objects 6
			percent_chance 25
			number_of_objects 8
		end_random
			set_tight_grouping
			group_placement_radius 4
			set_gaia_object_only
			set_place_for_every_player
		start_random
			percent_chance 15
			min_distance_to_players 7
			max_distance_to_players 10
			percent_chance 70
			min_distance_to_players 10
			max_distance_to_players 13
			percent_chance 15
			min_distance_to_players 14
			max_distance_to_players 17
		end_random
			min_distance_group_placement  3
			temp_min_distance_group_placement  7
		}
	else
		create_object DLC_ORANGEBUSH
		{
		start_random
			percent_chance 25
			number_of_objects 4
			percent_chance 50
			number_of_objects 6
			percent_chance 25
			number_of_objects 8
		end_random
			set_tight_grouping
			group_placement_radius 4
			set_gaia_object_only
			set_place_for_every_player
		start_random
			percent_chance 15
			min_distance_to_players 7
			max_distance_to_players 10
			percent_chance 70
			min_distance_to_players 10
			max_distance_to_players 13
			percent_chance 15
			min_distance_to_players 14
			max_distance_to_players 17
		end_random
			min_distance_group_placement  3
			temp_min_distance_group_placement  7			
		}
	endif
endif

/* ********************** STRAGGLERS *************************** */

if NOMADIC
elseif LANDNOMAD
else
    start_random
	percent_chance 50
    create_object STRAGGLER1
    {
        number_of_objects             3
        set_gaia_object_only
        set_place_for_every_player
        min_distance_to_players       4
        max_distance_to_players       5
        min_distance_group_placement  2
    }
    create_object STRAGGLER1
    {
        number_of_objects             3
        set_gaia_object_only
        set_place_for_every_player
        min_distance_to_players       6
        max_distance_to_players       8
        min_distance_group_placement  2
    }

	percent_chance 50
    create_object STRAGGLER2
    {
        number_of_objects             3
        set_gaia_object_only
        set_place_for_every_player
        min_distance_to_players       4
        max_distance_to_players       5
        min_distance_group_placement  2
    }
    create_object STRAGGLER2
    {
        number_of_objects             3
        set_gaia_object_only
        set_place_for_every_player
        min_distance_to_players       6
        max_distance_to_players       8
        min_distance_group_placement  2
    }
    end_random
endif

/* ******************************* NEUTRAL EXTRA RESOURCES & UNITS ************************************ */

create_object GOLD
{
	if TINY_MAP
		start_random
			percent_chance 20
			number_of_groups		2
			number_of_objects		1
			percent_chance 25
			number_of_groups		2
			number_of_objects		2
			percent_chance 30
			number_of_groups		2
			number_of_objects		3
			percent_chance 25
			number_of_groups		2
			number_of_objects		4
		end_random
	elseif SMALL_MAP
		start_random
			percent_chance 20
			number_of_groups		2
			number_of_objects		1
			percent_chance 25
			number_of_groups		2
			number_of_objects		2
			percent_chance 30
			number_of_groups		2
			number_of_objects		3
			percent_chance 25
			number_of_groups		2
			number_of_objects		4
		end_random
	elseif MEDIUM_MAP
		start_random
			percent_chance 25
			number_of_groups		3
			number_of_objects		2
			percent_chance 50
			number_of_groups		3
			number_of_objects		3
			percent_chance 25
			number_of_groups		3
			number_of_objects		4
		end_random
		group_variance			1
	elseif LARGE_MAP
		start_random
			percent_chance 25
			number_of_groups		3
			number_of_objects		2
			percent_chance 50
			number_of_groups		3
			number_of_objects		3
			percent_chance 25
			number_of_groups		3
			number_of_objects		4
		end_random
		group_variance			1
	elseif HUGE_MAP
		start_random
			percent_chance 25
			number_of_groups		4
			number_of_objects		2
			percent_chance 35
			number_of_groups		4
			number_of_objects		3
			percent_chance 25
			number_of_groups		4
			number_of_objects		4
			percent_chance 15
			number_of_groups		5
			number_of_objects		3
		end_random
		group_variance			1
	elseif GIGANTIC_MAP
		start_random
			percent_chance 25
			number_of_groups		5
			number_of_objects		2
			percent_chance 35
			number_of_groups		5
			number_of_objects		3
			percent_chance 25
			number_of_groups		5
			number_of_objects		4
			percent_chance 15
			number_of_groups		6
			number_of_objects		3
		end_random
		group_variance			1
	endif	
	group_placement_radius			2
	set_tight_grouping
	set_gaia_object_only
	min_distance_to_players			40
	min_distance_group_placement	7	
	temp_min_distance_group_placement 24
}


create_object STONE
{
	if TINY_MAP
		start_random
			percent_chance 30
			number_of_groups		2
			number_of_objects		1
			percent_chance 40
			number_of_groups		2
			number_of_objects		2
			percent_chance 30
			number_of_groups		2
			number_of_objects		3

		end_random
	elseif SMALL_MAP
		start_random
			percent_chance 20
			number_of_groups		2
			number_of_objects		1
			percent_chance 25
			number_of_groups		2
			number_of_objects		2
			percent_chance 30
			number_of_groups		2
			number_of_objects		3
			percent_chance 25
			number_of_groups		2
			number_of_objects		4
		end_random
	elseif MEDIUM_MAP
		start_random
			percent_chance 25
			number_of_groups		3
			number_of_objects		2
			percent_chance 50
			number_of_groups		3
			number_of_objects		3
			percent_chance 25
			number_of_groups		3
			number_of_objects		4
		end_random
		group_variance			1
	elseif LARGE_MAP
		start_random
			percent_chance 25
			number_of_groups		3
			number_of_objects		2
			percent_chance 50
			number_of_groups		3
			number_of_objects		3
			percent_chance 25
			number_of_groups		3
			number_of_objects		4
		end_random
		group_variance			1
	elseif HUGE_MAP
		start_random
			percent_chance 25
			number_of_groups		4
			number_of_objects		2
			percent_chance 35
			number_of_groups		4
			number_of_objects		3
			percent_chance 40
			number_of_groups		4
			number_of_objects		4

		end_random
		group_variance			1
	elseif GIGANTIC_MAP
		start_random
			percent_chance 25
			number_of_groups		5
			number_of_objects		2
			percent_chance 35
			number_of_groups		5
			number_of_objects		3
			percent_chance 25
			number_of_groups		5
			number_of_objects		4
			percent_chance 15
			number_of_groups		4
			number_of_objects		4
		end_random
		group_variance			1
	endif	
	group_placement_radius			2
	set_tight_grouping
	set_gaia_object_only
	min_distance_to_players			40
	min_distance_group_placement	7	
	temp_min_distance_group_placement	24
}

/* extra boar */

if NOMADIC
	start_random
		percent_chance 30
			#define EXTRAHUNT
		percent_chance 70
			#define NOEXTRAHUNT
	end_random
elseif LANDNOMAD
	start_random
		percent_chance 30
			#define EXTRAHUNT
		percent_chance 70
			#define NOEXTRAHUNT
	end_random
elseif NOBIGHUNT
	start_random
		percent_chance 15
			#define EXTRAHUNT
		percent_chance 85
			#define NOEXTRAHUNT
	end_random
else
	start_random
		percent_chance 10
			#define EXTRAHUNT
		percent_chance 90
			#define NOEXTRAHUNT
	end_random
endif
	
if EXTRAHUNT	

create_object BIGHUNT
{
	number_of_objects 1
	number_of_groups 1
	set_loose_grouping
	set_scaling_to_player_number
	set_gaia_object_only
	temp_min_distance_group_placement 22
	min_distance_to_players 32
}
endif


/* wolves */


if NOMADIC

elseif LANDNOMAD

else
	start_random
		percent_chance 80
			#define WOO
	end_random
endif

if WOO
create_object PREDATOR
{
	number_of_objects 1
start_random
	percent_chance 20
	number_of_groups 2
	percent_chance 20
	number_of_groups 4
	percent_chance 20
	number_of_groups 6
	percent_chance 20
	number_of_groups 8
	percent_chance 20
	number_of_groups 10
end_random
	group_variance 1
	set_scaling_to_map_size
	set_gaia_object_only
	min_distance_to_players 30
start_random
percent_chance 3
	temp_min_distance_group_placement 2
percent_chance 4
	temp_min_distance_group_placement 4
percent_chance 10
	temp_min_distance_group_placement 7
percent_chance 16
	temp_min_distance_group_placement 10
percent_chance 30
	temp_min_distance_group_placement 15
percent_chance 27
	temp_min_distance_group_placement 20
percent_chance 10
	temp_min_distance_group_placement 25
end_random
}
endif

if NOMADIC

elseif LANDNOMAD

else
start_random
	percent_chance 3
		#define YESIRONBOAR
	percent_chance 3
		#define YESMONKEY
	percent_chance 6
		#define YESOUTLAW
end_random
endif

if YESIRONBOAR
create_object IRON_BOAR
{

number_of_objects 1

start_random
	percent_chance 20
	number_of_groups 4
	percent_chance 20
	number_of_groups 5
	percent_chance 20
	number_of_groups 6
	percent_chance 20
	number_of_groups 8
	percent_chance 20
	number_of_groups 10
end_random
	group_variance 1
	set_scaling_to_map_size
	set_gaia_object_only
	min_distance_to_players 35
	temp_min_distance_group_placement 18
}

elseif YESMONKEY
create_object FURIOUS_THE_MONKEY_BOY
{

number_of_objects 1

start_random
	percent_chance 20
	number_of_groups 4
	percent_chance 20
	number_of_groups 5
	percent_chance 20
	number_of_groups 6
	percent_chance 20
	number_of_groups 8
	percent_chance 20
	number_of_groups 10
end_random
	group_variance 1
	set_scaling_to_map_size
	set_gaia_object_only
	min_distance_to_players 30
	temp_min_distance_group_placement 18
}

elseif YESOUTLAW
create_object OUTLAW
{

number_of_objects 2
start_random
	percent_chance 20
	number_of_groups 3
	percent_chance 20
	number_of_groups 5
	percent_chance 20
	number_of_groups 7
	percent_chance 20
	number_of_groups 11
	percent_chance 20
	number_of_groups 15
end_random
	group_variance 1
	set_scaling_to_map_size
	set_gaia_object_only
	min_distance_to_players 30
	temp_min_distance_group_placement 18
}
endif

create_object SHOREFISH
{
start_random
percent_chance 10
number_of_objects 1
percent_chance 10
number_of_objects 4
percent_chance 10
number_of_objects 8
percent_chance 10
number_of_objects 12
percent_chance 20
number_of_objects 20
percent_chance 20
number_of_objects 28
percent_chance 10
number_of_objects 36
percent_chance 10
number_of_objects 100
end_random

set_scaling_to_map_size
set_gaia_object_only

start_random
percent_chance 20
temp_min_distance_group_placement 0
percent_chance 20
temp_min_distance_group_placement 3
percent_chance 20
temp_min_distance_group_placement 5
percent_chance 20
temp_min_distance_group_placement 8
percent_chance 20
temp_min_distance_group_placement 12
end_random

start_random
percent_chance 30
min_distance_group_placement 1
percent_chance 40
min_distance_group_placement 2
percent_chance 30
min_distance_group_placement 3
end_random

}

create_object FISH1
{
start_random
percent_chance 10
number_of_objects 0
percent_chance 5
number_of_objects 4
percent_chance 5
number_of_objects 8
percent_chance 10
number_of_objects 12
percent_chance 10
number_of_objects 15
percent_chance 10
number_of_objects 18
percent_chance 10
number_of_objects 20
percent_chance 15
number_of_objects 25
percent_chance 15
number_of_objects 30
end_random

set_scaling_to_map_size
set_gaia_object_only
start_random
percent_chance 10
temp_min_distance_group_placement 1
percent_chance 10
temp_min_distance_group_placement 3
percent_chance 10
temp_min_distance_group_placement 4
percent_chance 10
temp_min_distance_group_placement 6
percent_chance 10
temp_min_distance_group_placement 8
percent_chance 20
temp_min_distance_group_placement 10
percent_chance 20
temp_min_distance_group_placement 12
percent_chance 10
temp_min_distance_group_placement 15
end_random

start_random
percent_chance 10
min_distance_group_placement 1
percent_chance 20
min_distance_group_placement 2
percent_chance 40
min_distance_group_placement 3
percent_chance 30
min_distance_group_placement 4
end_random

terrain_to_place_on WATER2
}

create_object FISH2
{
start_random
percent_chance 10
number_of_objects 0
percent_chance 5
number_of_objects 4
percent_chance 5
number_of_objects 8
percent_chance 10
number_of_objects 12
percent_chance 10
number_of_objects 15
percent_chance 10
number_of_objects 18
percent_chance 10
number_of_objects 20
percent_chance 15
number_of_objects 25
percent_chance 15
number_of_objects 30
end_random

set_scaling_to_map_size
set_gaia_object_only

start_random
percent_chance 10
temp_min_distance_group_placement 1
percent_chance 10
temp_min_distance_group_placement 3
percent_chance 10
temp_min_distance_group_placement 4
percent_chance 10
temp_min_distance_group_placement 6
percent_chance 10
temp_min_distance_group_placement 8
percent_chance 20
temp_min_distance_group_placement 10
percent_chance 20
temp_min_distance_group_placement 12
percent_chance 10
temp_min_distance_group_placement 15
end_random

start_random
percent_chance 10
min_distance_group_placement 1
percent_chance 20
min_distance_group_placement 2
percent_chance 40
min_distance_group_placement 3
percent_chance 30
min_distance_group_placement 4
end_random

terrain_to_place_on WATER2
}

create_object FISH1
{
start_random
percent_chance 10
number_of_objects 0
percent_chance 5
number_of_objects 4
percent_chance 5
number_of_objects 8
percent_chance 10
number_of_objects 12
percent_chance 10
number_of_objects 15
percent_chance 10
number_of_objects 18
percent_chance 10
number_of_objects 20
percent_chance 15
number_of_objects 25
percent_chance 15
number_of_objects 30
end_random

set_scaling_to_map_size
set_gaia_object_only
start_random
percent_chance 10
temp_min_distance_group_placement 1
percent_chance 10
temp_min_distance_group_placement 3
percent_chance 10
temp_min_distance_group_placement 4
percent_chance 10
temp_min_distance_group_placement 6
percent_chance 10
temp_min_distance_group_placement 8
percent_chance 20
temp_min_distance_group_placement 10
percent_chance 20
temp_min_distance_group_placement 12
percent_chance 10
temp_min_distance_group_placement 15
end_random

start_random
percent_chance 10
min_distance_group_placement 1
percent_chance 20
min_distance_group_placement 2
percent_chance 40
min_distance_group_placement 3
percent_chance 30
min_distance_group_placement 4
end_random

terrain_to_place_on WATER3
}

create_object FISH2
{
start_random
percent_chance 10
number_of_objects 0
percent_chance 5
number_of_objects 4
percent_chance 5
number_of_objects 8
percent_chance 10
number_of_objects 12
percent_chance 10
number_of_objects 15
percent_chance 10
number_of_objects 18
percent_chance 10
number_of_objects 20
percent_chance 15
number_of_objects 25
percent_chance 15
number_of_objects 30
end_random

set_scaling_to_map_size
set_gaia_object_only

start_random
percent_chance 10
temp_min_distance_group_placement 1
percent_chance 10
temp_min_distance_group_placement 3
percent_chance 10
temp_min_distance_group_placement 4
percent_chance 10
temp_min_distance_group_placement 6
percent_chance 10
temp_min_distance_group_placement 8
percent_chance 20
temp_min_distance_group_placement 10
percent_chance 20
temp_min_distance_group_placement 12
percent_chance 10
temp_min_distance_group_placement 15
end_random

start_random
percent_chance 10
min_distance_group_placement 1
percent_chance 20
min_distance_group_placement 2
percent_chance 40
min_distance_group_placement 3
percent_chance 30
min_distance_group_placement 4
end_random

terrain_to_place_on WATER3
}


/* convertible units */


if CONVERT

	if AOC
		start_random
			percent_chance 5
		create_object PETARD
		{
			if UP 
			number_of_objects rnd(1,5)
			else
			number_of_objects 3
			endif
			set_scaling_to_player_number
			set_gaia_object_only
			min_distance_to_players 18
			temp_min_distance_group_placement 10
		}
			percent_chance 5
		create_object SCOUT
		{
			if UP 
			number_of_objects rnd(1,8)
			else
			number_of_objects 4
			endif
			set_scaling_to_player_number
			set_gaia_object_only
			min_distance_to_players 18
			temp_min_distance_group_placement 10
		}
			percent_chance 5
		create_object SPEARMAN
		{
			if UP 
			number_of_objects rnd(2,10)
			else
			number_of_objects 6
			endif
			set_scaling_to_player_number
			set_gaia_object_only
			min_distance_to_players 18
			temp_min_distance_group_placement 10
		}		
			percent_chance 5
		create_object ARCHER
		{
			if UP 
			number_of_objects rnd(2,10)
			else
			number_of_objects 6
			endif
			set_scaling_to_player_number
			set_gaia_object_only
			min_distance_to_players 18
			temp_min_distance_group_placement 10
		}
			percent_chance 5
		create_object TRADE_CART
		{
			if UP 
			number_of_objects rnd(1,8)
			else
			number_of_objects 4
			endif
			set_scaling_to_player_number
			set_gaia_object_only
			min_distance_to_players 18
			temp_min_distance_group_placement 10
		}
			percent_chance 5
		create_object VILLAGER
		{
			if UP 
			number_of_objects rnd(1,8)
			else
			number_of_objects 4
			endif
			set_scaling_to_player_number
			set_gaia_object_only
			min_distance_to_players 18
			temp_min_distance_group_placement 10
		}
			percent_chance 5
		create_object HUNTING_WOLF
		{
			if UP 
			number_of_objects rnd(1,5)
			else
			number_of_objects 3
			endif
			set_scaling_to_player_number
			set_gaia_object_only
			min_distance_to_players 18
			temp_min_distance_group_placement 15
		}
			percent_chance 5
		create_object OUTPOST
		{
			if UP 
			number_of_objects rnd(1,8)
			else
			number_of_objects 4
			endif
			set_scaling_to_player_number
			set_gaia_object_only
			min_distance_to_players 18
			temp_min_distance_group_placement 10
		}
			percent_chance 5
		create_object PAVILION
		{
			if UP 
			number_of_objects rnd(1,5)
			else
			number_of_objects 3
			endif
			set_scaling_to_player_number
			set_gaia_object_only
			min_distance_to_players 18
			temp_min_distance_group_placement 10
		}	
			percent_chance 5
		create_object YURT
		{
			if UP 
			number_of_objects rnd(1,5)
			else
			number_of_objects 3
			endif
			set_scaling_to_player_number
			set_gaia_object_only
			min_distance_to_players 18
			temp_min_distance_group_placement 10
		}		
			percent_chance 3
		create_object PYRAMID
		{
			if UP 
			number_of_objects rnd(1,4)
			else
			number_of_objects 3
			endif
			set_scaling_to_player_number
			min_distance_to_players 18
			temp_min_distance_group_placement 15
		}			
			percent_chance 3
		create_object TRADE_WORKSHOP
		{
			if UP 
			number_of_objects rnd(1,4)
			else
			number_of_objects 3
			endif
			set_scaling_to_player_number
			min_distance_to_players 18
			temp_min_distance_group_placement 15
		}	
			percent_chance 5
		create_object MILITIA
		{
			if UP 
			number_of_objects rnd(2,10)
			else
			number_of_objects 6
			endif
			set_scaling_to_player_number
			min_distance_to_players 18
			temp_min_distance_group_placement 6
		}
			percent_chance 5
		create_object FLAG_A
		{
			if UP 
			number_of_objects rnd(2,10)
			else
			number_of_objects 6
			endif
			set_scaling_to_player_number
			min_distance_to_players 18
			temp_min_distance_group_placement 8
		}		
			percent_chance 5
		create_object TORCH_CONVERTING
		{
			if UP 
			number_of_objects rnd(2,10)
			else
			number_of_objects 6
			endif
			set_scaling_to_player_number
			min_distance_to_players 18
			temp_min_distance_group_placement 8
		}
			percent_chance 3
		create_object BATTERING_RAM
		{
            if UP
                number_of_objects rnd(1,3)
            else
                number_of_objects 2
            endif
			set_scaling_to_player_number
			set_gaia_object_only
			min_distance_to_players 18
			temp_min_distance_group_placement 15
		}
			percent_chance 26
		create_object SEAUNIT2
		{
			if UP 
			number_of_objects rnd(1,5)
			else
			number_of_objects 3
			endif
			set_scaling_to_player_number
			set_gaia_object_only
			min_distance_to_players 18
			temp_min_distance_group_placement 13
		}
		end_random

	else
		start_random
			percent_chance 5
		create_object PETARD
		{
			if UP 
			number_of_objects rnd(1,5)
			else
			number_of_objects 3
			endif
			set_scaling_to_player_number
			set_gaia_object_only
			min_distance_to_players 18
			temp_min_distance_group_placement 10
		}
			percent_chance 5
		create_object SCOUT
		{
			if UP 
			number_of_objects rnd(1,8)
			else
			number_of_objects 4
			endif
			set_scaling_to_player_number
			set_gaia_object_only
			min_distance_to_players 18
			temp_min_distance_group_placement 10
		}
			percent_chance 3
		create_object SPEARMAN
		{
			if UP 
			number_of_objects rnd(2,10)
			else
			number_of_objects 6
			endif
			set_scaling_to_player_number
			set_gaia_object_only
			min_distance_to_players 18
			temp_min_distance_group_placement 10
		}		
			percent_chance 4
		create_object EASTERN_SWORDSMAN
		{
			if UP 
			number_of_objects rnd(2,6)
			else
			number_of_objects 4
			endif
			set_scaling_to_player_number
			set_gaia_object_only
			min_distance_to_players 18
			temp_min_distance_group_placement 10
		}
			percent_chance 5
		create_object TRADE_CART
		{
			if UP 
			number_of_objects rnd(1,8)
			else
			number_of_objects 4
			endif
			set_scaling_to_player_number
			set_gaia_object_only
			min_distance_to_players 18
			temp_min_distance_group_placement 10
		}
			percent_chance 5
		create_object VILLAGER
		{
			if UP 
			number_of_objects rnd(1,8)
			else
			number_of_objects 4
			endif
			set_scaling_to_player_number
			set_gaia_object_only
			min_distance_to_players 18
			temp_min_distance_group_placement 10
		}
			percent_chance 3
		create_object HUNTING_WOLF
		{
			if UP 
			number_of_objects rnd(1,5)
			else
			number_of_objects 3
			endif
			set_scaling_to_player_number
			set_gaia_object_only
			min_distance_to_players 18
			temp_min_distance_group_placement 15
		}
				percent_chance 5
		create_object OUTPOST
		{
			if UP 
			number_of_objects rnd(1,8)
			else
			number_of_objects 4
			endif
			set_scaling_to_player_number
			set_gaia_object_only
			min_distance_to_players 18
			temp_min_distance_group_placement 10
		}
			percent_chance 5
		create_object DLC_AFRICANHUT_A
		{
			if UP 
			number_of_objects rnd(1,5)
			else
			number_of_objects 3
			endif
			set_scaling_to_player_number
			set_gaia_object_only
			min_distance_to_players 18
			temp_min_distance_group_placement 10
		}	
			percent_chance 4
		create_object ARMY_TENT1
		{
			if UP 
			number_of_objects rnd(1,5)
			else
			number_of_objects 3
			endif
			set_scaling_to_player_number
			set_gaia_object_only
			min_distance_to_players 18
			temp_min_distance_group_placement 10
		}				
			percent_chance 1
		create_object DLC_FEITORIA
		{
			if UP 
			number_of_objects rnd(1,3)
			else
			number_of_objects 2
			endif
			set_scaling_to_player_number
			min_distance_to_players 18
			temp_min_distance_group_placement 15
		}	
			percent_chance 4
		create_object AMAZON_ARCHER
		{
			if UP 
			number_of_objects rnd(2,6)
			else
			number_of_objects 4
			endif
			set_scaling_to_player_number
			min_distance_to_players 18
			temp_min_distance_group_placement 6
		}
			percent_chance 4
		create_object AMAZON_WARRIOR
		{
			if UP 
			number_of_objects rnd(2,6)
			else
			number_of_objects 4
			endif
			set_scaling_to_player_number
			min_distance_to_players 18
			temp_min_distance_group_placement 6
		}			
			percent_chance 4
		create_object NORDIC_SWORDSMAN
		{
			if UP 
			number_of_objects rnd(2,6)
			else
			number_of_objects 4
			endif
			set_scaling_to_player_number
			min_distance_to_players 18
			temp_min_distance_group_placement 6
		}
			percent_chance 5
		create_object FLAG_F
		{
			if UP 
			number_of_objects rnd(2,10)
			else
			number_of_objects 6
			endif
			set_scaling_to_player_number
			min_distance_to_players 18
			temp_min_distance_group_placement 8
		}		
			percent_chance 4
		create_object EASTERN_SWORDSMAN
		{
			if UP 
			number_of_objects rnd(2,6)
			else
			number_of_objects 4
			endif
			set_scaling_to_player_number
			min_distance_to_players 18
			temp_min_distance_group_placement 8
		}
			percent_chance 3
		create_object BATTERING_RAM
		{
            if UP
                number_of_objects rnd(1,3)
            else
                number_of_objects 2
            endif
			set_scaling_to_player_number
			set_gaia_object_only
			min_distance_to_players 18
			temp_min_distance_group_placement 15
		}		
			percent_chance 2
		create_object DLC_SIEGETOWER
		{
            if UP
                number_of_objects rnd(1,4)
            else
                number_of_objects 2
            endif
			set_scaling_to_player_number
			set_gaia_object_only
			min_distance_to_players 18
			temp_min_distance_group_placement 15
		}
			percent_chance 2
		create_object SIEGE_TOWER
		{
            if UP
                number_of_objects rnd(1,4)
            else
                number_of_objects 2
            endif
			set_scaling_to_player_number
			set_gaia_object_only
			min_distance_to_players 18
			temp_min_distance_group_placement 15
		}		
			percent_chance 27
		create_object SEAUNIT2
		{
			if UP 
			number_of_objects rnd(1,5)
			else
			number_of_objects 3
			endif
			set_scaling_to_player_number
			set_gaia_object_only
			min_distance_to_players 18
			temp_min_distance_group_placement 13
		}
		end_random
	endif
endif


/* ************* Neutral trees *************** */

start_random
	percent_chance 65
create_object STRAGGLER1
{
if UP
    number_of_objects             rnd(10,24)
else
  	number_of_objects             17
endif
  	set_gaia_object_only
	set_scaling_to_map_size
  	min_distance_to_players       15
  	max_distance_to_players       70
  	min_distance_group_placement  5
}
	percent_chance 35
create_object STRAGGLER3
{
    if UP
        number_of_objects             rnd(8,14)
    else
        number_of_objects             12
    endif
  	set_gaia_object_only
	set_scaling_to_map_size
  	min_distance_to_players       15
  	max_distance_to_players       70
  	min_distance_group_placement  5
}
end_random

/* ***** DECORATION ***** */

start_random
	percent_chance 50
create_object BOULDER1
{
  	number_of_objects             8
  	set_gaia_object_only
	min_distance_group_placement 12
	min_distance_to_players 17
	set_scaling_to_map_size
	terrain_to_place_on SOIL1
}
end_random
start_random
	percent_chance 50
create_object BOULDER1
{
  	number_of_objects             8
  	set_gaia_object_only
	min_distance_group_placement 13
	min_distance_to_players 17
	set_scaling_to_map_size
	terrain_to_place_on SOIL2
}
end_random
start_random
	percent_chance 50
create_object BOULDER1
{
  	number_of_objects             8
  	set_gaia_object_only
	min_distance_group_placement 12
	min_distance_to_players 17
	set_scaling_to_map_size
	terrain_to_place_on SOIL3
}
end_random
start_random
	percent_chance 50
create_object BOULDER1
{
  	number_of_objects             8
  	set_gaia_object_only
	min_distance_group_placement 13
	min_distance_to_players 17
	set_scaling_to_map_size
	terrain_to_place_on SOIL4
}
end_random

start_random
	percent_chance 50
create_object BOULDER1
{
  	number_of_objects             8
  	set_gaia_object_only
	min_distance_group_placement 12
	min_distance_to_players 17
	set_scaling_to_map_size
	terrain_to_place_on SOIL5
}
end_random





start_random
	percent_chance 50
create_object BOULDER2
{
  	number_of_objects             3
  	set_gaia_object_only
	min_distance_group_placement 15
	min_distance_to_players 17
	set_scaling_to_map_size
	terrain_to_place_on SOIL1
}
end_random

start_random
	percent_chance 50
create_object BOULDER2
{
  	number_of_objects             3
  	set_gaia_object_only
	min_distance_group_placement 16
	min_distance_to_players 17
	set_scaling_to_map_size
	terrain_to_place_on SOIL2
}
end_random

start_random
	percent_chance 50
create_object BOULDER2
{
  	number_of_objects             3
  	set_gaia_object_only
	min_distance_group_placement 17
	min_distance_to_players 17
	set_scaling_to_map_size
	terrain_to_place_on SOIL3
}
end_random

start_random
	percent_chance 50
create_object BOULDER2
{
  	number_of_objects             3
  	set_gaia_object_only
	min_distance_group_placement 15
	min_distance_to_players 17
	set_scaling_to_map_size
	terrain_to_place_on SOIL4
}
end_random

start_random
	percent_chance 50
create_object BOULDER2
{
  	number_of_objects             3
  	set_gaia_object_only
	min_distance_group_placement 16
	min_distance_to_players 17
	set_scaling_to_map_size
	terrain_to_place_on SOIL5
}
end_random


start_random
    percent_chance 60
        #define YESPEAKS
end_random



if YESPEAKS

    create_object PEAK1
    {
        if UP
            number_of_objects             rnd(1,7)
            temp_min_distance_group_placement rnd(11,19)
        else
            number_of_objects             3
            temp_min_distance_group_placement 15
        endif
        set_gaia_object_only
        min_distance_to_players 17
        set_scaling_to_map_size
    }


    start_random
        percent_chance 80
            create_object PEAK2
            {
                if UP
                    number_of_objects             rnd(1,7)
                    temp_min_distance_group_placement rnd(12,20)
                else
                    number_of_objects             3
                    temp_min_distance_group_placement 16
                endif
                set_gaia_object_only
                min_distance_to_players 17
                set_scaling_to_map_size
            }
    end_random

endif



start_random
	percent_chance 2
create_object PYRAMID
{
  	number_of_objects             1
  	set_gaia_object_only
	min_distance_to_players 25
}
	percent_chance 1
create_object PYRAMID
{
  	number_of_objects            4
  	set_gaia_object_only
	temp_min_distance_group_placement 18
	min_distance_to_players 25
	set_scaling_to_map_size
}
	percent_chance 1
create_object PYRAMID
{
  	number_of_objects             18
  	set_gaia_object_only
	temp_min_distance_group_placement 5
	min_distance_to_players 25
	set_scaling_to_map_size
}
	percent_chance 1
create_object GREAT_PYRAMID
{
  	number_of_objects             1
  	set_gaia_object_only
	min_distance_to_players 25
}
	percent_chance 1
create_object DOME_OF_THE_ROCK
{
  	number_of_objects             1
  	set_gaia_object_only
	min_distance_to_players 25
}
	percent_chance 94
end_random



start_random
percent_chance 2
	#define EXTRAHUNT1
percent_chance 1
	#define EXTRAHUNT2
percent_chance 3
	#define EXTRACATTLE
percent_chance 9
	#define EXTRAGRAZER	
end_random	


if EXTRAHUNT1
create_object HUNT1
{
start_random
    percent_chance 25
    number_of_objects             5
	percent_chance 25
  	number_of_objects             8
	percent_chance 25
  	number_of_objects             12
	percent_chance 25
  	number_of_objects             20
end_random
  	set_gaia_object_only

start_random
	percent_chance 30
	temp_min_distance_group_placement 5
	percent_chance 20
	temp_min_distance_group_placement 7
	percent_chance 20
	temp_min_distance_group_placement 8
	percent_chance 30
	temp_min_distance_group_placement 10
end_random

start_random
	percent_chance 25
	min_distance_to_players 20
	percent_chance 25
	min_distance_to_players 24
	percent_chance 25
	min_distance_to_players 26
	percent_chance 25
	min_distance_to_players 30
end_random
	set_scaling_to_map_size
}
endif


if EXTRAHUNT2
create_object HUNT2
{
start_random
    percent_chance 25
    number_of_objects             5
	percent_chance 25
  	number_of_objects             8
	percent_chance 25
  	number_of_objects             12
	percent_chance 25
  	number_of_objects             20
end_random
  	set_gaia_object_only

start_random
	percent_chance 30
	temp_min_distance_group_placement 5
	percent_chance 20
	temp_min_distance_group_placement 7
	percent_chance 20
	temp_min_distance_group_placement 8
	percent_chance 30
	temp_min_distance_group_placement 10
end_random

start_random
	percent_chance 25
	min_distance_to_players 20
	percent_chance 25
	min_distance_to_players 24
	percent_chance 25
	min_distance_to_players 26
	percent_chance 25
	min_distance_to_players 30
end_random
	set_scaling_to_map_size
}
endif

if EXTRACATTLE
create_object CATTLE
{
start_random
    percent_chance 25
    number_of_objects             5
	percent_chance 25
  	number_of_objects             8
	percent_chance 25
  	number_of_objects             12
	percent_chance 25
  	number_of_objects             20
end_random
  	set_gaia_object_only

start_random
	percent_chance 30
	temp_min_distance_group_placement 5
	percent_chance 20
	temp_min_distance_group_placement 7
	percent_chance 20
	temp_min_distance_group_placement 8
	percent_chance 30
	temp_min_distance_group_placement 10
end_random

start_random
	percent_chance 25
	min_distance_to_players 20
	percent_chance 25
	min_distance_to_players 24
	percent_chance 25
	min_distance_to_players 26
	percent_chance 25
	min_distance_to_players 30
end_random
	set_scaling_to_map_size
}
endif

if EXTRAGRAZER
create_object GRAZER
{
start_random
    percent_chance 25
    number_of_objects             5
	percent_chance 25
  	number_of_objects             8
	percent_chance 25
  	number_of_objects             12
	percent_chance 25
  	number_of_objects             20
end_random
  	set_gaia_object_only

start_random
	percent_chance 30
	temp_min_distance_group_placement 5
	percent_chance 20
	temp_min_distance_group_placement 7
	percent_chance 20
	temp_min_distance_group_placement 8
	percent_chance 30
	temp_min_distance_group_placement 10
end_random

start_random
	percent_chance 25
	min_distance_to_players 20
	percent_chance 25
	min_distance_to_players 24
	percent_chance 25
	min_distance_to_players 26
	percent_chance 25
	min_distance_to_players 30
end_random
	set_scaling_to_map_size
}
endif

/* ************ BIRDS ************* */

start_random
percent_chance 70
create_object BIRD1
{
   number_of_objects         3
   set_scaling_to_map_size
}
end_random

start_random
percent_chance 70
create_object BIRD2
{
   number_of_objects         2
   set_scaling_to_map_size
}
percent_chance 3
create_object STORMY_DOG
{
   number_of_objects         4
   set_scaling_to_map_size
}
end_random



/* *********** RELICS ************* */
if CTRUP
create_object RELIC
{
	number_of_objects 1
	min_distance_to_players 0
	max_distance_to_players 1
place_on_specific_land_id 51
}
elseif CTR

else
create_object RELIC
{
start_random
	percent_chance 60
		number_of_objects 5
	percent_chance 6
		number_of_objects 1
	percent_chance 6
		number_of_objects 3
	percent_chance 6
		number_of_objects 7
	percent_chance 6
		number_of_objects 11
	percent_chance 6
		number_of_objects 23
	percent_chance 5
		number_of_objects 2
		number_of_groups 5
		group_placement_radius 2
		set_tight_grouping
	percent_chance 5
		number_of_objects 3
		number_of_groups 3
		group_placement_radius 7
		set_loose_grouping	
end_random
min_distance_to_players 25
min_distance_group_placement 5
temp_min_distance_group_placement 20
}
endif	


<CONNECTION_GENERATION>

if MIDDLEAREA
	create_connect_all_lands 
	{
	replace_terrain WATER1 SHORE1
	replace_terrain WATER2 SHORE1
	replace_terrain WATER3 SHORE1
	terrain_cost WATER1 4
	terrain_cost WATER2 4
	terrain_cost WATER3 4
	terrain_size WATER1 3 2
	terrain_size WATER2 2 1
	terrain_size WATER3 2 0
	}

	create_connect_all_lands 
	{
	replace_terrain WOODS1 FORESTPATH1
	replace_terrain WOODS2 FORESTPATH2
	replace_terrain WOODS3 FORESTPATH3
	replace_terrain WOODS4 FORESTPATH4
	terrain_cost WOODS1 4
	terrain_cost WOODS2 4
	terrain_cost WOODS3 4
	terrain_cost WOODS4 4
	terrain_size WOODS1 6 2
	terrain_size WOODS2 6 2
	terrain_size WOODS3 6 2
	terrain_size WOODS4 6 2
	}
else

	/* **WATER CROSSING** */
	start_random 
		percent_chance 50
	create_connect_teams_lands 
	{
	replace_terrain WATER1 SHORE1
	replace_terrain WATER2 SHORE1
	replace_terrain WATER3 SHORE1
	terrain_cost WATER1 4
	terrain_cost WATER2 4
	terrain_cost WATER3 4
	terrain_size WATER1 3 2
	terrain_size WATER2 2 1
	terrain_size WATER3 2 0
	}
		percent_chance 50
	end_random

	start_random
		percent_chance 50
	create_connect_all_lands 
	{
	replace_terrain WATER1 SHORE1
	replace_terrain WATER2 SHORE1
	replace_terrain WATER3 SHORE1
	terrain_cost WATER1 4
	terrain_cost WATER2 4
	terrain_cost WATER3 4
	terrain_size WATER1 3 2
	terrain_size WATER2 2 1
	terrain_size WATER3 2 0
	}
		percent_chance 50
	end_random

	start_random
		percent_chance 50
	create_connect_all_players_land 
	{
	replace_terrain WATER1 SHORE1
	replace_terrain WATER2 SHORE1
	replace_terrain WATER3 SHORE1
	terrain_cost WATER1 4
	terrain_cost WATER2 4
	terrain_cost WATER3 4
	terrain_size WATER1 3 2
	terrain_size WATER2 2 1
	terrain_size WATER3 2 0
	}
		percent_chance 50
	end_random

	/* **FOREST PATHS** */
	start_random 
		percent_chance 60
	create_connect_teams_lands 
	{
	replace_terrain WOODS1 FORESTPATH1
	replace_terrain WOODS2 FORESTPATH2
	replace_terrain WOODS3 FORESTPATH3
	replace_terrain WOODS4 FORESTPATH4
	terrain_cost WOODS1 4
	terrain_cost WOODS2 4
	terrain_cost WOODS3 4
	terrain_cost WOODS4 4
	terrain_size WOODS1 6 2
	terrain_size WOODS2 6 2
	terrain_size WOODS3 6 2
	terrain_size WOODS4 6 2
	}
		percent_chance 40
	end_random

	start_random
		percent_chance 60
	create_connect_all_lands 
	{
	replace_terrain WOODS1 FORESTPATH1
	replace_terrain WOODS2 FORESTPATH2
	replace_terrain WOODS3 FORESTPATH3
	replace_terrain WOODS4 FORESTPATH4
	terrain_cost WOODS1 4
	terrain_cost WOODS2 4
	terrain_cost WOODS3 4
	terrain_cost WOODS4 4
	terrain_size WOODS1 6 2
	terrain_size WOODS2 6 2
	terrain_size WOODS3 6 2
	terrain_size WOODS4 6 2
	}
		percent_chance 40
	end_random

	start_random
		percent_chance 60
	create_connect_all_players_land 
	{
	replace_terrain WOODS1 FORESTPATH1
	replace_terrain WOODS2 FORESTPATH2
	replace_terrain WOODS3 FORESTPATH3
	replace_terrain WOODS4 FORESTPATH4
	terrain_cost WOODS1 4
	terrain_cost WOODS2 4
	terrain_cost WOODS3 4
	terrain_cost WOODS4 4
	terrain_size WOODS1 6 2
	terrain_size WOODS2 6 2
	terrain_size WOODS3 6 2
	terrain_size WOODS4 6 2
	}
		percent_chance 40
	end_random

endif



<ELEVATION_GENERATION> 



/* ***CLIFFS*** */
start_random
percent_chance 60
percent_chance 40
<CLIFF_GENERATION>
end_random

if TINY_MAP
	min_number_of_cliffs	2
	max_number_of_cliffs	8
	min_length_of_cliff	1
	max_length_of_cliff	8

start_random
	percent_chance 10
	cliff_curliness		0
	percent_chance 20
	cliff_curliness		1
	percent_chance 40
	cliff_curliness		4
	percent_chance 20
	cliff_curliness		6
	percent_chance 10
	cliff_curliness		20
end_random

start_random
	percent_chance 30
	min_distance_cliffs	1
	percent_chance 40
	min_distance_cliffs	4
	percent_chance 30
	min_distance_cliffs	7
end_random


else
	min_number_of_cliffs	5
	max_number_of_cliffs	25
	min_length_of_cliff	1
	max_length_of_cliff	20

start_random
	percent_chance 10
	cliff_curliness		1
	percent_chance 20
	cliff_curliness		5
	percent_chance 40
	cliff_curliness		10
	percent_chance 20
	cliff_curliness		15
	percent_chance 10
	cliff_curliness		20
end_random

start_random
	percent_chance 30
	min_distance_cliffs	1
	percent_chance 40
	min_distance_cliffs	4
	percent_chance 30
	min_distance_cliffs	7
end_random

endif 